{"version":3,"file":"webgpu-debug-helper.js","sources":["../../../src/object-to-device.ts","../../../src/error-scope-wrapper.ts","../../node_modules/webgpu-utils/dist/1.x/webgpu-utils.module.js","../../../src/format-info.ts","../../../src/utils.ts","../../../src/validation.ts","../../../src/encoder-utils.ts","../../../src/wrap-api.ts","../../../src/pipeline.ts","../../../src/shared-state.ts","../../../src/texture.ts","../../../src/binding-mixin.ts","../../../src/render-commands-mixin.ts","../../../src/render-bundle-encoder.ts","../../../src/device.ts","../../../src/canvas-context.ts","../../../src/query-support.ts","../../../src/compute-pass-encoder.ts","../../../src/render-pass-encoder.ts","../../../src/command-encoder.ts","../../../src/webgpu-debug-helper.ts"],"sourcesContent":["export type DeviceResource =\n  | GPUBindGroup\n  | GPUBindGroupLayout\n  | GPUBuffer\n  | GPUCanvasContext\n  | GPUCommandEncoder\n  | GPUComputePassEncoder\n  | GPUComputePipeline\n  | GPUExternalTexture\n  | GPUPipelineLayout\n  | GPUQuerySet\n  | GPUQueue\n  | GPURenderBundle\n  | GPURenderBundleEncoder\n  | GPURenderPassEncoder\n  | GPURenderPipeline\n  | GPUSampler\n  | GPUShaderModule\n  | GPUTexture\n\nexport const s_objToDevice = new WeakMap<DeviceResource, GPUDevice>();\n","/* eslint-disable no-inner-declarations */\nimport {\n  s_objToDevice\n} from './object-to-device.js';\n\nif (typeof GPUDevice !== 'undefined') {\n\n  const deviceToErrorScopeStack: WeakMap<GPUDevice, {filter: GPUErrorFilter, errors: Promise<GPUError | null>[]}[]> = new WeakMap();\n  const origPushErrorScope = GPUDevice.prototype.pushErrorScope;\n  const origPopErrorScope = GPUDevice.prototype.popErrorScope;\n\n  type AnyFunction = (...args: any[]) => any;\n\n  function errorWrapper<T extends AnyFunction>(this: any, device: GPUDevice, fnName: string, origFn: T, ...args: Parameters<T>): ReturnType<T> {\n    const stack = new Error();\n    origPushErrorScope.call(device, 'validation');\n    const result = origFn.call(this, ...args);\n\n    const errorScopeStack = deviceToErrorScopeStack.get(device)!;\n    const currentErrorScope = errorScopeStack.findLast(scope => scope.filter === 'validation');\n\n    const promise = origPopErrorScope.call(device)\n      .then(error => {\n        // If there was a currentErrorScope and there was no error the remove our promise.\n        if (currentErrorScope) {\n           if (!error) {\n               const ndx = currentErrorScope.errors.indexOf(promise);\n               if (ndx) {\n                  currentErrorScope.errors.splice(ndx, 1);\n               }\n           }\n        } else {\n          // there was no currentErrorScope so emit the error\n          if (error) {\n            device.dispatchEvent(new GPUUncapturedErrorEvent('uncapturederror', { error }));\n          }\n        }\n\n        // show it\n        if (error) {\n          console.error('WebGPU ERROR in:', fnName, args);\n          console.error(error.message);\n          console.error(stack.stack);\n        }\n\n        // return it (as a promise)\n        return error;\n       });\n\n    if (currentErrorScope) {\n      currentErrorScope.errors.push(promise);\n    }\n    return result;\n  }\n\n  function debugGroupWrapper<T extends AnyFunction>(this: any, device: GPUDevice, fnName: string, origFn: T, ...args: Parameters<T>): ReturnType<T> {\n    this.pushDebugGroup(`${fnName}:\\n${new Error().stack}`);\n    const result = origFn.call(this, ...args);\n    this.popDebugGroup();\n    return result;\n  }\n\n  function addErrorWrapper<T extends { prototype: any }>(api: T, fnName: keyof T['prototype'] & PropertyKey): void {\n    const origFn = api.prototype[fnName] as AnyFunction;\n    api.prototype[fnName] = function (this: any, ...args: any[]) {\n      return errorWrapper.call(this, this, fnName.toString(), origFn, ...args);\n    };\n  }\n\n  function addErrorWrapperWithDevice<T extends { prototype: any }>(api: T, fnName: keyof T['prototype'] & PropertyKey): void {\n    const origFn = api.prototype[fnName] as AnyFunction;\n    api.prototype[fnName] = function (this: any, ...args: any[]) {\n      const device = s_objToDevice.get(this as GPUQueue)!;\n      return errorWrapper.call(this, device, fnName.toString(), origFn, ...args);\n    };\n  }\n\n  function addDebugGroupWrapper<T extends { prototype: any }>(api: T, fnName: keyof T['prototype'] & PropertyKey): void {\n    const origFn = api.prototype[fnName] as AnyFunction;\n    api.prototype[fnName] = function (this: any, ...args: any[]) {\n      return debugGroupWrapper.call(this, this, fnName.toString(), origFn, ...args);\n    };\n  }\n\n  /**\n   * given a class returns all the method names.\n   */\n  function getAPIFunctionNames<T extends { prototype: any }>(api: T) {\n    return Object.entries(Object.getOwnPropertyDescriptors(api.prototype))\n       .filter(([, info]) => info.enumerable && typeof info.value === 'function')\n       .map(([name]) => name as keyof T['prototype'] & PropertyKey);\n  }\n\n  {\n    const skip = new Set([\n      'pushErrorScope',\n      'popErrorScope',\n      'destroy',\n    ]);\n    getAPIFunctionNames(GPUDevice)\n      .filter(n => !skip.has(n))\n      .forEach(n => addErrorWrapper(GPUDevice, n));\n    getAPIFunctionNames(GPUQueue)\n      .forEach(n => addErrorWrapperWithDevice(GPUQueue, n));\n  }\n\n  {\n    const skip = new Set(['pushDebugGroup', 'popDebugGroup', 'finish', 'end']);\n\n    getAPIFunctionNames(GPUCommandEncoder)\n      .filter(n => !skip.has(n))\n      .forEach(n => addDebugGroupWrapper(GPUCommandEncoder, n));\n    getAPIFunctionNames(GPUComputePassEncoder)\n      .filter(n => !skip.has(n))\n      .forEach(n => addDebugGroupWrapper(GPUComputePassEncoder, n));\n    getAPIFunctionNames(GPURenderPassEncoder)\n      .filter(n => !skip.has(n))\n      .forEach(n => addDebugGroupWrapper(GPURenderPassEncoder, n));\n    getAPIFunctionNames(GPURenderBundleEncoder)\n      .filter(n => !skip.has(n))\n      .forEach(n => addDebugGroupWrapper(GPURenderBundleEncoder, n));\n  }\n\n  GPUDevice.prototype.pushErrorScope = (function (origFn) {\n    return function (this: GPUDevice, filter: GPUErrorFilter) {\n      origFn.call(this, filter);\n      const errorScopeStack = deviceToErrorScopeStack.get(this);\n      errorScopeStack!.push({filter, errors: []});\n    };\n  })(GPUDevice.prototype.pushErrorScope);\n\n  GPUDevice.prototype.popErrorScope = (function (origFn) {\n    return async function (this: GPUDevice) {\n      const errorScopeStack = deviceToErrorScopeStack.get(this);\n      const errorScope = errorScopeStack!.pop();\n      if (errorScope === undefined) {\n        throw new DOMException('popErrorScope called on empty error scope stack', 'OperationError');\n      }\n      const errPromise = origFn.call(this);\n      errorScope.errors.push(errPromise);\n      const errors = await Promise.all(errorScope.errors);\n      const error = errors.find(v => !!v);\n      return error ?? null;\n    };\n  })(GPUDevice.prototype.popErrorScope);\n\n  GPUAdapter.prototype.requestDevice = (function (origFn) {\n    return async function (this: GPUAdapter, ...args) {\n      const device = await origFn.call(this, ...args);\n      if (device) {\n        device.addEventListener('uncapturederror', function (e) {\n          console.error((e as GPUUncapturedErrorEvent).error.message);\n        });\n        deviceToErrorScopeStack.set(device, []);\n        s_objToDevice.set(device.queue, device);\n      }\n      return device;\n    };\n  })(GPUAdapter.prototype.requestDevice);\n\n}","/* webgpu-utils@1.10.3, license MIT */\nconst roundUpToMultipleOf = (v, multiple) => (((v + multiple - 1) / multiple) | 0) * multiple;\nfunction keysOf(obj) {\n    return Object.keys(obj);\n}\nfunction range(count, fn) {\n    return new Array(count).fill(0).map((_, i) => fn(i));\n}\n\nclass TypedArrayViewGenerator {\n    arrayBuffer;\n    byteOffset;\n    constructor(sizeInBytes) {\n        this.arrayBuffer = new ArrayBuffer(sizeInBytes);\n        this.byteOffset = 0;\n    }\n    align(alignment) {\n        this.byteOffset = roundUpToMultipleOf(this.byteOffset, alignment);\n    }\n    pad(numBytes) {\n        this.byteOffset += numBytes;\n    }\n    getView(Ctor, numElements) {\n        const view = new Ctor(this.arrayBuffer, this.byteOffset, numElements);\n        this.byteOffset += view.byteLength;\n        return view;\n    }\n}\nfunction subarray(arr, offset, length) {\n    return arr.subarray(offset, offset + length);\n}\n// TODO: fix better?\nconst isTypedArray = (arr) => arr && typeof arr.length === 'number' && arr.buffer instanceof ArrayBuffer && typeof arr.byteLength === 'number';\n\nconst createTypeDefs = (defs) => defs;\nconst b$1 = createTypeDefs({\n    i32: { numElements: 1, align: 4, size: 4, type: 'i32', View: Int32Array },\n    u32: { numElements: 1, align: 4, size: 4, type: 'u32', View: Uint32Array },\n    f32: { numElements: 1, align: 4, size: 4, type: 'f32', View: Float32Array },\n    f16: { numElements: 1, align: 2, size: 2, type: 'u16', View: Uint16Array },\n    vec2f: { numElements: 2, align: 8, size: 8, type: 'f32', View: Float32Array },\n    vec2i: { numElements: 2, align: 8, size: 8, type: 'i32', View: Int32Array },\n    vec2u: { numElements: 2, align: 8, size: 8, type: 'u32', View: Uint32Array },\n    vec2h: { numElements: 2, align: 4, size: 4, type: 'u16', View: Uint16Array },\n    vec3i: { numElements: 3, align: 16, size: 12, type: 'i32', View: Int32Array },\n    vec3u: { numElements: 3, align: 16, size: 12, type: 'u32', View: Uint32Array },\n    vec3f: { numElements: 3, align: 16, size: 12, type: 'f32', View: Float32Array },\n    vec3h: { numElements: 3, align: 8, size: 6, type: 'u16', View: Uint16Array },\n    vec4i: { numElements: 4, align: 16, size: 16, type: 'i32', View: Int32Array },\n    vec4u: { numElements: 4, align: 16, size: 16, type: 'u32', View: Uint32Array },\n    vec4f: { numElements: 4, align: 16, size: 16, type: 'f32', View: Float32Array },\n    vec4h: { numElements: 4, align: 8, size: 8, type: 'u16', View: Uint16Array },\n    // AlignOf(vecR)\tSizeOf(array<vecR, C>)\n    mat2x2f: { numElements: 4, align: 8, size: 16, type: 'f32', View: Float32Array },\n    mat2x2h: { numElements: 4, align: 4, size: 8, type: 'u16', View: Uint16Array },\n    mat3x2f: { numElements: 6, align: 8, size: 24, type: 'f32', View: Float32Array },\n    mat3x2h: { numElements: 6, align: 4, size: 12, type: 'u16', View: Uint16Array },\n    mat4x2f: { numElements: 8, align: 8, size: 32, type: 'f32', View: Float32Array },\n    mat4x2h: { numElements: 8, align: 4, size: 16, type: 'u16', View: Uint16Array },\n    mat2x3f: { numElements: 8, align: 16, size: 32, pad: [3, 1], type: 'f32', View: Float32Array },\n    mat2x3h: { numElements: 8, align: 8, size: 16, pad: [3, 1], type: 'u16', View: Uint16Array },\n    mat3x3f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n    mat3x3h: { numElements: 12, align: 8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n    mat4x3f: { numElements: 16, align: 16, size: 64, pad: [3, 1], type: 'f32', View: Float32Array },\n    mat4x3h: { numElements: 16, align: 8, size: 32, pad: [3, 1], type: 'u16', View: Uint16Array },\n    mat2x4f: { numElements: 8, align: 16, size: 32, type: 'f32', View: Float32Array },\n    mat2x4h: { numElements: 8, align: 8, size: 16, type: 'u16', View: Uint16Array },\n    mat3x4f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n    mat3x4h: { numElements: 12, align: 8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n    mat4x4f: { numElements: 16, align: 16, size: 64, type: 'f32', View: Float32Array },\n    mat4x4h: { numElements: 16, align: 8, size: 32, type: 'u16', View: Uint16Array },\n    // Note: At least as of WGSL V1 you can not create a bool for uniform or storage.\n    // You can only create one in an internal struct. But, this code generates\n    // views of structs and it needs to not fail if the struct has a bool\n    bool: { numElements: 0, align: 1, size: 0, type: 'bool', View: Uint32Array },\n});\nconst kWGSLTypeInfo = createTypeDefs({\n    ...b$1,\n    'atomic<i32>': b$1.i32,\n    'atomic<u32>': b$1.u32,\n    'vec2<i32>': b$1.vec2i,\n    'vec2<u32>': b$1.vec2u,\n    'vec2<f32>': b$1.vec2f,\n    'vec2<f16>': b$1.vec2h,\n    'vec3<i32>': b$1.vec3i,\n    'vec3<u32>': b$1.vec3u,\n    'vec3<f32>': b$1.vec3f,\n    'vec3<f16>': b$1.vec3h,\n    'vec4<i32>': b$1.vec4i,\n    'vec4<u32>': b$1.vec4u,\n    'vec4<f32>': b$1.vec4f,\n    'vec4<f16>': b$1.vec4h,\n    'mat2x2<f32>': b$1.mat2x2f,\n    'mat2x2<f16>': b$1.mat2x2h,\n    'mat3x2<f32>': b$1.mat3x2f,\n    'mat3x2<f16>': b$1.mat3x2h,\n    'mat4x2<f32>': b$1.mat4x2f,\n    'mat4x2<f16>': b$1.mat4x2h,\n    'mat2x3<f32>': b$1.mat2x3f,\n    'mat2x3<f16>': b$1.mat2x3h,\n    'mat3x3<f32>': b$1.mat3x3f,\n    'mat3x3<f16>': b$1.mat3x3h,\n    'mat4x3<f32>': b$1.mat4x3f,\n    'mat4x3<f16>': b$1.mat4x3h,\n    'mat2x4<f32>': b$1.mat2x4f,\n    'mat2x4<f16>': b$1.mat2x4h,\n    'mat3x4<f32>': b$1.mat3x4f,\n    'mat3x4<f16>': b$1.mat3x4h,\n    'mat4x4<f32>': b$1.mat4x4f,\n    'mat4x4<f16>': b$1.mat4x4h,\n});\nconst kWGSLTypes = keysOf(kWGSLTypeInfo);\n\n/**\n * Set which intrinsic types to make views for.\n *\n * Example:\n *\n * Given a an array of intrinsics like this\n * `array<vec3, 200>`\n *\n * The default is to create a single `Float32Array(4 * 200)`\n * because creating 200 `Float32Array` views is not usually\n * what you want.\n *\n * If you do want individual views then you'd call\n * `setIntrinsicsToView(['vec3f'])` and now you get\n * an array of 200 `Float32Array`s.\n *\n * Note: `setIntrinsicsToView` always sets ALL types. The list you\n * pass it is the types you want views created for, all other types\n * will be reset to do the default. In other words\n *\n * ```js\n * setIntrinsicsToView(['vec3f'])\n * setIntrinsicsToView(['vec2f'])\n * ```\n *\n * Only `vec2f` will have views created. `vec3f` has been reset to the default by\n * the second call\n *\n * You can pass in `true` as the 2nd parameter to make it set which types\n * to flatten and all others will be set to have views created. For example\n * to expand all types would be `setIntrinsicsToView([], true)`. To expand\n * all except `f32` would be `setIntrinsicsToView(['f32'], true)`.\n *\n * To reset all types to the default call it with no arguments\n *\n * @param types array of types to make views for\n * @param flatten whether to flatten or expand the specified types.\n */\nfunction setIntrinsicsToView(types = [], flatten) {\n    // we need to track what we've viewed because for example `vec3f` references\n    // the same info as `vec3<f32>` so we'd set one and reset the other.\n    const visited = new Set();\n    for (const type of kWGSLTypes) {\n        const info = kWGSLTypeInfo[type];\n        if (!visited.has(info)) {\n            visited.add(info);\n            info.flatten = types.includes(type) ? flatten : !flatten;\n        }\n    }\n}\nsetIntrinsicsToView();\n// This needs to be fixed! 😱\nfunction getSizeOfTypeDef(typeDef) {\n    const asArrayDef = typeDef;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        return asArrayDef.size;\n        /*\n        if (isIntrinsic(elementType)) {\n            const asIntrinsicDef = elementType as IntrinsicDefinition;\n            const { align } = typeInfo[asIntrinsicDef.type];\n            return roundUpToMultipleOf(typeDef.size, align) * asArrayDef.numElements;\n        } else {\n            return asArrayDef.numElements * getSizeOfTypeDef(elementType);\n        }\n        */\n    }\n    else {\n        const asStructDef = typeDef;\n        const numElements = asArrayDef.numElements || 1;\n        if (asStructDef.fields) {\n            return typeDef.size * numElements;\n        }\n        else {\n            const asIntrinsicDef = typeDef;\n            const { align } = kWGSLTypeInfo[asIntrinsicDef.type];\n            return numElements > 1\n                ? roundUpToMultipleOf(typeDef.size, align) * numElements\n                : typeDef.size;\n        }\n    }\n}\n// If numElements is undefined this is NOT an array. If it is defined then it IS an array\n// Sizes for arrays are different than sizes for non-arrays. Example\n// a vec3f non array is Float32Array(3)\n// a vec3f array of 2 is Float32Array(4 * 2)\n// a vec3f array of 1 is Float32Array(4 * 1)\nfunction makeIntrinsicTypedArrayView(typeDef, buffer, baseOffset, numElements) {\n    const { size, type } = typeDef;\n    try {\n        const { View, align, size: intrinsicSize } = kWGSLTypeInfo[type];\n        const isArray = numElements !== undefined;\n        const sizeInBytes = isArray\n            ? roundUpToMultipleOf(size, align)\n            : intrinsicSize;\n        const baseNumElements = sizeInBytes / View.BYTES_PER_ELEMENT;\n        const effectiveNumElements = isArray\n            ? (numElements === 0\n                ? (buffer.byteLength - baseOffset) / sizeInBytes\n                : numElements)\n            : 1;\n        return new View(buffer, baseOffset, baseNumElements * effectiveNumElements);\n    }\n    catch {\n        throw new Error(`unknown type: ${type}`);\n    }\n}\nfunction isIntrinsic(typeDef) {\n    return !typeDef.fields &&\n        !typeDef.elementType;\n}\n/**\n * Creates a set of named TypedArray views on an ArrayBuffer. If you don't\n * pass in an ArrayBuffer, one will be created. If you're using an unsized\n * array then you must pass in your own arraybuffer\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Stuff {\n *    direction: vec3f,\n *    strength: f32,\n *    matrix: mat4x4f,\n * };\n * @group(0) @binding(0) var<uniform> uni: Stuff;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const views = makeTypedArrayViews(devs.uniforms.uni.typeDefinition);\n * ```\n *\n * views would effectively be\n *\n * ```js\n * views = {\n *   direction: Float32Array(arrayBuffer, 0, 3),\n *   strength: Float32Array(arrayBuffer, 3, 4),\n *   matrix: Float32Array(arraybuffer, 4, 20),\n * };\n * ```\n *\n * You can use the views directly or you can use {@link setStructuredView}\n *\n * @param typeDef Definition of the various types of views.\n * @param arrayBuffer Optional ArrayBuffer to use (if one provided one will be created)\n * @param offset Optional offset in existing ArrayBuffer to start the views.\n * @returns A bunch of named TypedArray views and the ArrayBuffer\n */\nfunction makeTypedArrayViews(typeDef, arrayBuffer, offset) {\n    const baseOffset = offset || 0;\n    const buffer = arrayBuffer || new ArrayBuffer(getSizeOfTypeDef(typeDef));\n    const makeViews = (typeDef, baseOffset) => {\n        const asArrayDef = typeDef;\n        const elementType = asArrayDef.elementType;\n        if (elementType) {\n            // TODO: Should be optional? Per Type? Depth set? Per field?\n            // The issue is, if we have `array<vec4, 1000>` we don't likely\n            // want 1000 `Float32Array(4)` views. We want 1 `Float32Array(1000 * 4)` view.\n            // On the other hand, if we have `array<mat4x4, 10>` the maybe we do want\n            // 10 `Float32Array(16)` views since you might want to do\n            // `mat4.perspective(fov, aspect, near, far, foo.bar.arrayOf10Mat4s[3])`;\n            if (isIntrinsic(elementType) && kWGSLTypeInfo[elementType.type].flatten) {\n                return makeIntrinsicTypedArrayView(elementType, buffer, baseOffset, asArrayDef.numElements);\n            }\n            else {\n                const { size } = getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef);\n                const effectiveNumElements = asArrayDef.numElements === 0\n                    ? (buffer.byteLength - baseOffset) / size\n                    : asArrayDef.numElements;\n                return range(effectiveNumElements, i => makeViews(elementType, baseOffset + size * i));\n            }\n        }\n        else if (typeof typeDef === 'string') {\n            throw Error('unreachable');\n        }\n        else {\n            const fields = typeDef.fields;\n            if (fields) {\n                const views = {};\n                for (const [name, { type, offset }] of Object.entries(fields)) {\n                    views[name] = makeViews(type, baseOffset + offset);\n                }\n                return views;\n            }\n            else {\n                return makeIntrinsicTypedArrayView(typeDef, buffer, baseOffset);\n            }\n        }\n    };\n    return { views: makeViews(typeDef, baseOffset), arrayBuffer: buffer };\n}\n/**\n * Given a set of TypeArrayViews and matching JavaScript data\n * sets the content of the views.\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Stuff {\n *    direction: vec3f,\n *    strength: f32,\n *    matrix: mat4x4f,\n * };\n * @group(0) @binding(0) var<uniform> uni: Stuff;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const views = makeTypedArrayViews(devs.uniforms.uni.typeDefinition);\n *\n * setStructuredViews({\n *   direction: [1, 2, 3],\n *   strength: 45,\n *   matrix: [\n *     1, 0, 0, 0,\n *     0, 1, 0, 0,\n *     0, 0, 1, 0,\n *     0, 0, 0, 1,\n *   ],\n * });\n * ```\n *\n * The code above will set the various views, which all point to different\n * locations within the same array buffer.\n *\n * See {@link makeTypedArrayViews}.\n *\n * @param data The new values\n * @param views TypedArray views as returned from {@link makeTypedArrayViews}\n */\nfunction setStructuredView(data, views) {\n    if (data === undefined) {\n        return;\n    }\n    else if (isTypedArray(views)) {\n        const view = views;\n        if (view.length === 1 && typeof data === 'number') {\n            view[0] = data;\n        }\n        else {\n            if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n                // complete hack!\n                // there's no type data here so let's guess based on the user's data\n                const dataLen = data[0].length;\n                const stride = dataLen === 3 ? 4 : dataLen;\n                for (let i = 0; i < data.length; ++i) {\n                    const offset = i * stride;\n                    view.set(data[i], offset);\n                }\n            }\n            else {\n                view.set(data);\n            }\n        }\n    }\n    else if (Array.isArray(views)) {\n        const asArray = views;\n        data.forEach((newValue, ndx) => {\n            setStructuredView(newValue, asArray[ndx]);\n        });\n    }\n    else {\n        const asViews = views;\n        for (const [key, newValue] of Object.entries(data)) {\n            const view = asViews[key];\n            if (view) {\n                setStructuredView(newValue, view);\n            }\n        }\n    }\n}\n/**\n * Given a VariableDefinition, create matching TypedArray views\n *\n * @param varDef A VariableDefinition as returned from {@link makeShaderDataDefinitions}\n * @param arrayBuffer Optional ArrayBuffer for the views\n * @param offset Optional offset into the ArrayBuffer for the views\n * @returns TypedArray views for the various named fields of the structure as well\n *    as a `set` function to make them easy to set, and the arrayBuffer\n *\n * ```js\n * const code = `\n * struct HSL {\n *   hue: f32,\n *   sat: f32,\n *   lum: f32,\n * };\n * struct MyStorage {\n *    colors: array<HSL, 4>,\n *    brightness: f32,\n *    kernel: array<f32, 9>,\n * };\n * @group(0) @binding(0) var<storage> myStorage: MyStorage;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const myUniformValues = makeStructuredView(defs.storages.myStorage);\n *\n * myUniformValues.set({\n *   colors: [\n *     ,\n *     ,\n *     { hue: 0.5, sat: 1.0, lum: 0.5 },  // only set the 3rd color\n *   ],\n *   brightness: 0.8,\n *   kernel: [\n *      1, 0, -1,\n *      2, 0, -2,\n *      1, 0, -1,\n *   ],\n * });\n * ```\n *\n * data definition can come from `defs.uniforms.<nameOfUniform>`, `defs.storages.<nameOfStorage>`\n * and `defs.structs.<nameOfStruct>`.\n *\n * What this function does:\n *\n * 1. It creates an `ArrayBuffer` of the size equal to the definition passed in (unless you pass in an existing ArrayBuffer)\n *\n * 2. It makes `TypedArray` views of to match the definition.\n *\n * 3. It returns an object with the the `ArrayBuffer`, the TypedArray views, and a `set` function which is just a wrapper\n *    for `setStructView` that passes in the views.\n *\n * For example: Given a data definition created by makeShaderDataDefinitions for this WGSL\n *\n * ```wgsl\n * struct Light {\n *   lightWorldPosition: vec3f,\n *   shininess: f32,\n *   lightDirection: vec3f,\n *   innerLimit: f32,\n *   outerLimit: f32,\n * };\n * struct Uniforms {\n *   normalMatrix: mat3x3f,\n *   worldViewProjection: mat4x4f,\n *   world: mat4x4f,\n *   color: vec4f,\n *   viewWorldPosition: vec3f,\n *   lights: array<Light, 3>,\n * };\n * @group(0) @binding(0) var<uniform> myUniforms: Uniforms;\n * ```\n *\n * `makeStructuredView(defs.uniforms.myUniforms)` would return this\n *\n * ```js\n * const arrayBuffer = new ArrayBuffer(368)\n * const views = {\n *   normalMatrix: new Float32Array(arrayBuffer, 0, 12),\n *   worldViewProjection: new Float32Array(arrayBuffer, 48, 16),\n *   world: new Float32Array(arrayBuffer, 112, 16),\n *   color: new Float32Array(arrayBuffer, 176, 4),\n *   viewWorldPosition: new Float32Array(arrayBuffer, 192, 3),\n *   lights: [\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 208, 3),\n *       shininess: new Float32Array(arrayBuffer, 220, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 224, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 236, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 240, 1),\n *     },\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 256, 3),\n *       shininess: new Float32Array(arrayBuffer, 268, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 272, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 284, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 288, 1),\n *     },\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 304, 3),\n *       shininess: new Float32Array(arrayBuffer, 316, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 320, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 332, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 336, 1),\n *     },\n *   ],\n *   mode: new Uint32Array(UniformsValues, 352, 1),\n * };\n * result = {\n *   arrayBuffer,\n *   views,\n *   set(data: any) {\n *     setStructuredView(data, views.views);\n *   },\n * }\n * ```\n *\n * From this, you can see you can set the value in the array buffer for any field/member/property\n * directly. Example\n *\n * ```js\n * result.views.lights[2].lightDirection.set([7, 8, 9]);\n * result.views.lights[2].innerLimit[0] = 4;\n * ```\n *\n * `set` just takes a JS object and matches property names to the view names.\n *\n * ```js\n * result.set({\n *   color: [1, 1, 0, 1],\n *   viewWorldPosition: [12, 34, 56],\n *   mode: 8,\n * });\n * ```\n *\n * Is equivalent to\n *\n * ```js\n * result.views.color.set([1, 1, 0, 1]);\n * result.views.worldViewPosition.set([12, 34, 56]);\n * result.views.mode[0] = 8;\n * ```\n *\n * Further, `set` is just a short cut for `setStructuredView` passing in the root\n * `result'views`.\n *\n * So, for example, if you want to set the light at index 2, this would work.\n *\n * ```js\n * setStructuredView({\n *   lightWorldPosition: [1, 2, 3],\n *   shininess: 4,\n *   lightDirection: [5, 6, 7],\n *   innerLimit: 8,\n *   outerLimit: 9,\n * }, result.views.lights[2]);\n * ```\n */\nfunction makeStructuredView(varDef, arrayBuffer, offset = 0) {\n    const asVarDef = varDef;\n    const typeDef = asVarDef.group === undefined ? varDef : asVarDef.typeDefinition;\n    const views = makeTypedArrayViews(typeDef, arrayBuffer, offset);\n    return {\n        ...views,\n        set(data) {\n            setStructuredView(data, views.views);\n        },\n    };\n}\nconst s_views = new WeakMap();\nfunction getViewsByCtor(arrayBuffer) {\n    let viewsByCtor = s_views.get(arrayBuffer);\n    if (!viewsByCtor) {\n        viewsByCtor = new Map();\n        s_views.set(arrayBuffer, viewsByCtor);\n    }\n    return viewsByCtor;\n}\nfunction getView(arrayBuffer, Ctor) {\n    const viewsByCtor = getViewsByCtor(arrayBuffer);\n    let view = viewsByCtor.get(Ctor);\n    if (!view) {\n        view = new Ctor(arrayBuffer);\n        viewsByCtor.set(Ctor, view);\n    }\n    return view;\n}\n// Is this something like [1,2,3]?\nfunction isArrayLikeOfNumber(data) {\n    return isTypedArray(data) || Array.isArray(data) && typeof data[0] === 'number';\n}\nfunction setIntrinsicFromArrayLikeOfNumber(typeDef, data, arrayBuffer, offset) {\n    const asIntrinsicDefinition = typeDef;\n    const type = kWGSLTypeInfo[asIntrinsicDefinition.type];\n    const view = getView(arrayBuffer, type.View);\n    const index = offset / view.BYTES_PER_ELEMENT;\n    if (typeof data === 'number') {\n        view[index] = data;\n    }\n    else {\n        view.set(data, index);\n    }\n}\n/**\n * Sets values on an existing array buffer from a TypeDefinition\n * @param typeDef A type definition provided by {@link makeShaderDataDefinitions}\n * @param data The source data\n * @param arrayBuffer The arrayBuffer who's data to set.\n * @param offset An offset in the arrayBuffer to start at.\n */\nfunction setTypedValues(typeDef, data, arrayBuffer, offset = 0) {\n    const asArrayDef = typeDef;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        // It's ArrayDefinition\n        if (isIntrinsic(elementType)) {\n            const asIntrinsicDef = elementType;\n            if (isArrayLikeOfNumber(data)) {\n                setIntrinsicFromArrayLikeOfNumber(asIntrinsicDef, data, arrayBuffer, offset);\n                return;\n            }\n        }\n        data.forEach((newValue, ndx) => {\n            setTypedValues(elementType, newValue, arrayBuffer, offset + elementType.size * ndx);\n        });\n        return;\n    }\n    const asStructDef = typeDef;\n    const fields = asStructDef.fields;\n    if (fields) {\n        // It's StructDefinition\n        for (const [key, newValue] of Object.entries(data)) {\n            const fieldDef = fields[key];\n            if (fieldDef) {\n                setTypedValues(fieldDef.type, newValue, arrayBuffer, offset + fieldDef.offset);\n            }\n        }\n    }\n    else {\n        // It's IntrinsicDefinition\n        setIntrinsicFromArrayLikeOfNumber(typeDef, data, arrayBuffer, offset);\n    }\n}\n/**\n * Same as {@link setTypedValues} except it takes a {@link VariableDefinition}.\n * @param varDef A variable definition provided by {@link makeShaderDataDefinitions}\n * @param data The source data\n * @param arrayBuffer The arrayBuffer who's data to set.\n * @param offset An offset in the arrayBuffer to start at.\n */\nfunction setStructuredValues(varDef, data, arrayBuffer, offset = 0) {\n    setTypedValues(varDef.typeDefinition, data, arrayBuffer, offset);\n}\nfunction getAlignmentOfTypeDef(typeDef) {\n    const asArrayDef = typeDef;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        return getAlignmentOfTypeDef(elementType);\n    }\n    const asStructDef = typeDef;\n    const fields = asStructDef.fields;\n    if (fields) {\n        return Object.values(fields).reduce((max, { type }) => Math.max(max, getAlignmentOfTypeDef(type)), 0);\n    }\n    const { type } = typeDef;\n    const { align } = kWGSLTypeInfo[type];\n    return align;\n}\nfunction getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef) {\n    const asArrayDef = typeDef;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        const unalignedSize = elementType.size;\n        const align = getAlignmentOfTypeDef(elementType);\n        return {\n            unalignedSize,\n            align,\n            size: roundUpToMultipleOf(unalignedSize, align),\n        };\n    }\n    const asStructDef = typeDef;\n    const fields = asStructDef.fields;\n    if (fields) {\n        const lastField = Object.values(fields).pop();\n        if (lastField.type.size === 0) {\n            return getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(lastField.type);\n        }\n    }\n    return {\n        size: 0,\n        unalignedSize: 0,\n        align: 1,\n    };\n}\n/**\n * Returns the size, align, and unalignedSize of \"the\" unsized array element. Unsized arrays are only\n * allowed at the outer most level or the last member of a top level struct.\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Foo {\n *   a: u32,\n *   b: array<vec3f>,\n * };\n * @group(0) @binding(0) var<storage> f: Foo;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const { size, align, unalignedSize } = getSizeAndAlignmentOfUnsizedArrayElement(\n *    defs.storages.f);\n * // size = 16   (since you need to allocate 16 bytes per element)\n * // align = 16  (since vec3f needs to be aligned to 16 bytes)\n * // unalignedSize = 12 (since only 12 bytes are used for a vec3f)\n * ```\n *\n * Generally you only need size. Example:\n *\n * ```js\n * const code = `\n * struct Foo {\n *   a: u32,\n *   b: array<vec3f>,\n * };\n * @group(0) @binding(0) var<storage> f: Foo;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const { size } = getSizeAndAlignmentOfUnsizedArrayElement(defs.storages.f);\n * const numElements = 10;\n * const views = makeStructuredViews(\n *    defs.storages.f,\n *    new ArrayBuffer(defs.storages.f.size + size * numElements));\n * ```\n *\n * @param varDef A variable definition provided by {@link makeShaderDataDefinitions}\n * @returns the size, align, and unalignedSize in bytes of the unsized array element in this type definition.\n *   If there is no unsized array, size = 0.\n */\nfunction getSizeAndAlignmentOfUnsizedArrayElement(varDef) {\n    const asVarDef = varDef;\n    const typeDef = asVarDef.group === undefined ? varDef : asVarDef.typeDefinition;\n    return getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef);\n}\n\nclass e{constructor(e,t){this.name=e,this.attributes=t,this.size=0;}get isArray(){return  false}get isStruct(){return  false}get isTemplate(){return  false}get isPointer(){return  false}getTypeName(){return this.name}}class t{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0;}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class n extends e{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=false;}get isStruct(){return  true}}class s extends e{constructor(e,t){super(e,t),this.count=0,this.stride=0;}get isArray(){return  true}getTypeName(){return `array<${this.format.getTypeName()}, ${this.count}>`}}class r extends e{constructor(e,t,n){super(e,n),this.format=t;}get isPointer(){return  true}getTypeName(){return `&${this.format.getTypeName()}`}}class a extends e{constructor(e,t,n,s){super(e,n),this.format=t,this.access=s;}get isTemplate(){return  true}getTypeName(){let e=this.name;if(null!==this.format){if('vec2'===e||'vec3'===e||'vec4'===e||'mat2x2'===e||'mat2x3'===e||'mat2x4'===e||'mat3x2'===e||'mat3x3'===e||'mat3x4'===e||'mat4x2'===e||'mat4x3'===e||'mat4x4'===e){if('f32'===this.format.name)return e+='f',e;if('i32'===this.format.name)return e+='i',e;if('u32'===this.format.name)return e+='u',e;if('bool'===this.format.name)return e+='b',e;if('f16'===this.format.name)return e+='h',e}e+=`<${this.format.name}>`;}else if('vec2'===e||'vec3'===e||'vec4'===e)return e;return e}}var i;(e=>{e[e.Uniform=0]='Uniform',e[e.Storage=1]='Storage',e[e.Texture=2]='Texture',e[e.Sampler=3]='Sampler',e[e.StorageTexture=4]='StorageTexture';})(i||(i={}));class o{constructor(e,t,n,s,r,a,i){this.name=e,this.type=t,this.group=n,this.binding=s,this.attributes=r,this.resourceType=a,this.access=i;}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class l{constructor(e,t){this.name=e,this.type=t;}}class c{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s,this.interpolation=null;}}class u{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s;}}class h{constructor(e,t,n,s){this.name=e,this.type=t,this.attributes=n,this.id=s;}}class f{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n;}}class p{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=false,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n;}}class d{constructor(){this.vertex=[],this.fragment=[],this.compute=[];}}const m=new Float32Array(1),_=new Int32Array(m.buffer),g=new Uint16Array(1);function x(e){m[0]=e;const t=_[0],n=t>>31&1;let s=t>>23&255,r=8388607&t;if(255===s)return g[0]=n<<15|31744|(0!==r?512:0),g[0];if(0===s){if(0===r)return g[0]=n<<15,g[0];r|=8388608;let e=113;for(;!(8388608&r);)r<<=1,e--;return s=127-e,r&=8388607,s>0?(r=(r>>126-s)+(r>>127-s&1),g[0]=n<<15|s<<10|r>>13,g[0]):(g[0]=n<<15,g[0])}return s=s-127+15,s>=31?(g[0]=n<<15|31744,g[0]):s<=0?s<-10?(g[0]=n<<15,g[0]):(r=(8388608|r)>>1-s,g[0]=n<<15|r>>13,g[0]):(r>>=13,g[0]=n<<15|s<<10|r,g[0])}const y=new Uint32Array(1),b=new Float32Array(y.buffer,0,1);function v(e){const t=112+(e>>6&31)<<23|(63&e)<<17;return y[0]=t,b[0]}function w(e,t,n,s,r,a,i,o,l){const c=s*(i>>=r)*(a>>=r)+n*i+t*o;switch(l){case 'r8unorm':return [k(e,c,'8unorm',1)[0]];case 'r8snorm':return [k(e,c,'8snorm',1)[0]];case 'r8uint':return [k(e,c,'8uint',1)[0]];case 'r8sint':return [k(e,c,'8sint',1)[0]];case 'rg8unorm':{const t=k(e,c,'8unorm',2);return [t[0],t[1]]}case 'rg8snorm':{const t=k(e,c,'8snorm',2);return [t[0],t[1]]}case 'rg8uint':{const t=k(e,c,'8uint',2);return [t[0],t[1]]}case 'rg8sint':{const t=k(e,c,'8sint',2);return [t[0],t[1]]}case 'rgba8unorm-srgb':case 'rgba8unorm':{const t=k(e,c,'8unorm',4);return [t[0],t[1],t[2],t[3]]}case 'rgba8snorm':{const t=k(e,c,'8snorm',4);return [t[0],t[1],t[2],t[3]]}case 'rgba8uint':{const t=k(e,c,'8uint',4);return [t[0],t[1],t[2],t[3]]}case 'rgba8sint':{const t=k(e,c,'8sint',4);return [t[0],t[1],t[2],t[3]]}case 'bgra8unorm-srgb':case 'bgra8unorm':{const t=k(e,c,'8unorm',4);return [t[2],t[1],t[0],t[3]]}case 'r16uint':return [k(e,c,'16uint',1)[0]];case 'r16sint':return [k(e,c,'16sint',1)[0]];case 'r16float':return [k(e,c,'16float',1)[0]];case 'rg16uint':{const t=k(e,c,'16uint',2);return [t[0],t[1]]}case 'rg16sint':{const t=k(e,c,'16sint',2);return [t[0],t[1]]}case 'rg16float':{const t=k(e,c,'16float',2);return [t[0],t[1]]}case 'rgba16uint':{const t=k(e,c,'16uint',4);return [t[0],t[1],t[2],t[3]]}case 'rgba16sint':{const t=k(e,c,'16sint',4);return [t[0],t[1],t[2],t[3]]}case 'rgba16float':{const t=k(e,c,'16float',4);return [t[0],t[1],t[2],t[3]]}case 'r32uint':return [k(e,c,'32uint',1)[0]];case 'r32sint':return [k(e,c,'32sint',1)[0]];case 'depth16unorm':case 'depth24plus':case 'depth24plus-stencil8':case 'depth32float':case 'depth32float-stencil8':case 'r32float':return [k(e,c,'32float',1)[0]];case 'rg32uint':{const t=k(e,c,'32uint',2);return [t[0],t[1]]}case 'rg32sint':{const t=k(e,c,'32sint',2);return [t[0],t[1]]}case 'rg32float':{const t=k(e,c,'32float',2);return [t[0],t[1]]}case 'rgba32uint':{const t=k(e,c,'32uint',4);return [t[0],t[1],t[2],t[3]]}case 'rgba32sint':{const t=k(e,c,'32sint',4);return [t[0],t[1],t[2],t[3]]}case 'rgba32float':{const t=k(e,c,'32float',4);return [t[0],t[1],t[2],t[3]]}case 'rg11b10ufloat':{const t=new Uint32Array(e.buffer,c,1)[0],n=(4192256&t)>>11,s=(4290772992&t)>>22;return [v(2047&t),v(n),function(e){const t=112+(e>>5&31)<<23|(31&e)<<18;return y[0]=t,b[0]}(s),1]}}return null}function k(e,t,n,s){const r=[0,0,0,0];for(let c=0;c<s;++c)switch(n){case '8unorm':r[c]=e[t]/255,t++;break;case '8snorm':r[c]=e[t]/255*2-1,t++;break;case '8uint':r[c]=e[t],t++;break;case '8sint':r[c]=e[t]-127,t++;break;case '16uint':r[c]=e[t]|e[t+1]<<8,t+=2;break;case '16sint':r[c]=(e[t]|e[t+1]<<8)-32768,t+=2;break;case '16float':r[c]=(a=e[t]|e[t+1]<<8,i=undefined,o=undefined,l=undefined,i=(32768&a)>>15,l=1023&a,0==(o=(31744&a)>>10)?(i?-1:1)*Math.pow(2,-14)*(l/Math.pow(2,10)):31==o?l?NaN:1/0*(i?-1:1):(i?-1:1)*Math.pow(2,o-15)*(1+l/Math.pow(2,10))),t+=2;break;case '32uint':case '32sint':r[c]=e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24,t+=4;break;case '32float':r[c]=new Float32Array(e.buffer,t,1)[0],t+=4;}var a,i,o,l;return r}function I(e,t,n,s,r){for(let a=0;a<s;++a)switch(n){case '8unorm':e[t]=255*r[a],t++;break;case '8snorm':e[t]=.5*(r[a]+1)*255,t++;break;case '8uint':e[t]=r[a],t++;break;case '8sint':e[t]=r[a]+127,t++;break;case '16uint':new Uint16Array(e.buffer,t,1)[0]=r[a],t+=2;break;case '16sint':new Int16Array(e.buffer,t,1)[0]=r[a],t+=2;break;case '16float':{const n=x(r[a]);new Uint16Array(e.buffer,t,1)[0]=n,t+=2;break}case '32uint':new Uint32Array(e.buffer,t,1)[0]=r[a],t+=4;break;case '32sint':new Int32Array(e.buffer,t,1)[0]=r[a],t+=4;break;case '32float':new Float32Array(e.buffer,t,1)[0]=r[a],t+=4;}return r}const T={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},'rgba8unorm-srgb':{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},'bgra8unorm-srgb':{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,channels:2},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:false,isDepthStencil:true,hasDepth:false,hasStencil:true,channels:1},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:false,isDepthStencil:true,hasDepth:true,hasStencil:false,channels:1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,isDepthStencil:true,hasDepth:true,hasStencil:false,depthOnlyFormat:'depth32float',channels:1},'depth24plus-stencil8':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,isDepthStencil:true,hasDepth:true,hasStencil:true,depthOnlyFormat:'depth32float',channels:1},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,isDepthStencil:true,hasDepth:true,hasStencil:false,channels:1},'depth32float-stencil8':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:false,isDepthStencil:true,hasDepth:true,hasStencil:true,stencilOnlyFormat:'depth32float',channels:1},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:false,channels:4},'bc1-rgba-unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc1-rgba-unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc2-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc2-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc3-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc3-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc4-r-unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:1},'bc4-r-snorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:1},'bc5-rg-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:2},'bc5-rg-snorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:2},'bc6h-rgb-ufloat':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc6h-rgb-float':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc7-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'bc7-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'etc2-rgb8unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'etc2-rgb8unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'etc2-rgb8a1unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'etc2-rgb8a1unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'etc2-rgba8unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'etc2-rgba8unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'eac-r11unorm':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:true,channels:1},'eac-r11snorm':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:true,channels:1},'eac-rg11unorm':{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:true,channels:2},'eac-rg11snorm':{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:true,channels:2},'astc-4x4-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'astc-4x4-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:true,channels:4},'astc-5x4-unorm':{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:true,channels:4},'astc-5x4-unorm-srgb':{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:true,channels:4},'astc-5x5-unorm':{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:true,channels:4},'astc-5x5-unorm-srgb':{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:true,channels:4},'astc-6x5-unorm':{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:true,channels:4},'astc-6x5-unorm-srgb':{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:true,channels:4},'astc-6x6-unorm':{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:true,channels:4},'astc-6x6-unorm-srgb':{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:true,channels:4},'astc-8x5-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:true,channels:4},'astc-8x5-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:true,channels:4},'astc-8x6-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:true,channels:4},'astc-8x6-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:true,channels:4},'astc-8x8-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:true,channels:4},'astc-8x8-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:true,channels:4},'astc-10x5-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:true,channels:4},'astc-10x5-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:true,channels:4},'astc-10x6-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:true,channels:4},'astc-10x6-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:true,channels:4},'astc-10x8-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:true,channels:4},'astc-10x8-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:true,channels:4},'astc-10x10-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:true,channels:4},'astc-10x10-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:true,channels:4},'astc-12x10-unorm':{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:true,channels:4},'astc-12x10-unorm-srgb':{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:true,channels:4},'astc-12x12-unorm':{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:true,channels:4},'astc-12x12-unorm-srgb':{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:true,channels:4}};class S{constructor(){this.id=S._id++,this.line=0;}get isAstNode(){return  true}get astNodeType(){return ''}search(e){e(this);}searchBlock(e,t){if(e){t(A.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(E.instance);}}constEvaluate(e,t){throw new Error('Cannot evaluate node')}constEvaluateString(e){return this.constEvaluate(e).toString()}}S._id=0;class A extends S{}A.instance=new A;class E extends S{}E.instance=new E;const $=new Set(['all','all','any','select','arrayLength','abs','acos','acosh','asin','asinh','atan','atanh','atan2','ceil','clamp','cos','cosh','countLeadingZeros','countOneBits','countTrailingZeros','cross','degrees','determinant','distance','dot','dot4U8Packed','dot4I8Packed','exp','exp2','extractBits','faceForward','firstLeadingBit','firstTrailingBit','floor','fma','fract','frexp','insertBits','inverseSqrt','ldexp','length','log','log2','max','min','mix','modf','normalize','pow','quantizeToF16','radians','reflect','refract','reverseBits','round','saturate','sign','sin','sinh','smoothStep','sqrt','step','tan','tanh','transpose','trunc','dpdx','dpdxCoarse','dpdxFine','dpdy','dpdyCoarse','dpdyFine','fwidth','fwidthCoarse','fwidthFine','textureDimensions','textureGather','textureGatherCompare','textureLoad','textureNumLayers','textureNumLevels','textureNumSamples','textureSample','textureSampleBias','textureSampleCompare','textureSampleCompareLevel','textureSampleGrad','textureSampleLevel','textureSampleBaseClampToEdge','textureStore','atomicLoad','atomicStore','atomicAdd','atomicSub','atomicMax','atomicMin','atomicAnd','atomicOr','atomicXor','atomicExchange','atomicCompareExchangeWeak','pack4x8snorm','pack4x8unorm','pack4xI8','pack4xU8','pack4x8Clamp','pack4xU8Clamp','pack2x16snorm','pack2x16unorm','pack2x16float','unpack4x8snorm','unpack4x8unorm','unpack4xI8','unpack4xU8','unpack2x16snorm','unpack2x16unorm','unpack2x16float','storageBarrier','textureBarrier','workgroupBarrier','workgroupUniformLoad','subgroupAdd','subgroupExclusiveAdd','subgroupInclusiveAdd','subgroupAll','subgroupAnd','subgroupAny','subgroupBallot','subgroupBroadcast','subgroupBroadcastFirst','subgroupElect','subgroupMax','subgroupMin','subgroupMul','subgroupExclusiveMul','subgroupInclusiveMul','subgroupOr','subgroupShuffle','subgroupShuffleDown','subgroupShuffleUp','subgroupShuffleXor','subgroupXor','quadBroadcast','quadSwapDiagonal','quadSwapX','quadSwapY']);class L extends S{constructor(){super();}}class C extends L{constructor(e,t,n,s,r,a){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=s,this.startLine=r,this.endLine=a;}get astNodeType(){return 'function'}search(e){if(this.attributes)for(const t of this.attributes)e(t);e(this);for(const t of this.args)e(t);this.searchBlock(this.body,e);}}class D extends L{constructor(e){super(),this.expression=e;}get astNodeType(){return 'staticAssert'}search(e){this.expression.search(e);}}class N extends L{constructor(e,t){super(),this.condition=e,this.body=t;}get astNodeType(){return 'while'}search(e){this.condition.search(e),this.searchBlock(this.body,e);}}class V extends L{constructor(e,t){super(),this.body=e,this.loopId=t;}get astNodeType(){return 'continuing'}search(e){this.searchBlock(this.body,e);}}class O extends L{constructor(e,t,n,s){super(),this.init=e,this.condition=t,this.increment=n,this.body=s;}get astNodeType(){return 'for'}search(e){var t,n,s;null===(t=this.init)||undefined===t||t.search(e),null===(n=this.condition)||undefined===n||n.search(e),null===(s=this.increment)||undefined===s||s.search(e),this.searchBlock(this.body,e);}}class B extends L{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r;}get astNodeType(){return 'var'}search(e){var t;e(this),null===(t=this.value)||undefined===t||t.search(e);}}class F extends L{constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n;}get astNodeType(){return 'override'}search(e){var t;null===(t=this.value)||undefined===t||t.search(e);}}class M extends L{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r;}get astNodeType(){return 'let'}search(e){var t;e(this),null===(t=this.value)||undefined===t||t.search(e);}}class U extends L{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r;}get astNodeType(){return 'const'}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),null===(t=this.value)||undefined===t||t.search(e);}}var P,W,q,H;(e=>{e.increment='++',e.decrement='--';})(P||(P={})),(e=>{e.parse=function(t){const n=t;if('parse'==n)throw new Error('Invalid value for IncrementOperator');return e[n]};})(P||(P={}));class z extends L{constructor(e,t){super(),this.operator=e,this.variable=t;}get astNodeType(){return 'increment'}search(e){this.variable.search(e);}}(e=>{e.assign='=',e.addAssign='+=',e.subtractAssin='-=',e.multiplyAssign='*=',e.divideAssign='/=',e.moduloAssign='%=',e.andAssign='&=',e.orAssign='|=',e.xorAssign='^=',e.shiftLeftAssign='<<=',e.shiftRightAssign='>>=';})(W||(W={})),(e=>{e.parse=function(e){const t=e;if('parse'==t)throw new Error('Invalid value for AssignOperator');return t};})(W||(W={}));class R extends L{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n;}get astNodeType(){return 'assign'}search(e){this.variable.search(e),this.value.search(e);}}class G extends L{constructor(e,t){super(),this.name=e,this.args=t;}get astNodeType(){return 'call'}isBuiltin(){return $.has(this.name)}search(e){for(const t of this.args)t.search(e);e(this);}}class X extends L{constructor(e,t){super(),this.body=e,this.continuing=t;}get astNodeType(){return 'loop'}}class j extends L{constructor(e,t){super(),this.condition=e,this.cases=t;}get astNodeType(){return 'switch'}}class Z extends L{constructor(e,t,n,s){super(),this.condition=e,this.body=t,this.elseif=n,this.else=s;}get astNodeType(){return 'if'}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e);}}class Q extends L{constructor(e){super(),this.value=e;}get astNodeType(){return 'return'}search(e){var t;null===(t=this.value)||undefined===t||t.search(e);}}class Y extends L{constructor(e){super(),this.name=e;}get astNodeType(){return 'enable'}}class K extends L{constructor(e){super(),this.extensions=e;}get astNodeType(){return 'requires'}}class J extends L{constructor(e,t){super(),this.severity=e,this.rule=t;}get astNodeType(){return 'diagnostic'}}class ee extends L{constructor(e,t){super(),this.name=e,this.type=t;}get astNodeType(){return 'alias'}}class te extends L{constructor(){super();}get astNodeType(){return 'discard'}}class ne extends L{constructor(){super(),this.condition=null,this.loopId=-1;}get astNodeType(){return 'break'}}class se extends L{constructor(){super(),this.loopId=-1;}get astNodeType(){return 'continue'}}class re extends L{constructor(e){super(),this.attributes=null,this.name=e;}get astNodeType(){return 'type'}get isStruct(){return  false}get isArray(){return  false}static maxFormatType(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=re._priority.get(t.name);re._priority.get(e[n].name)<s&&(t=e[n]);}return 'x32'===t.name?re.i32:t}getTypeName(){return this.name}}re.x32=new re('x32'),re.f32=new re('f32'),re.i32=new re('i32'),re.u32=new re('u32'),re.f16=new re('f16'),re.bool=new re('bool'),re.void=new re('void'),re._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class ae extends re{constructor(e){super(e);}}class ie extends re{constructor(e,t,n,s){super(e),this.members=t,this.startLine=n,this.endLine=s;}get astNodeType(){return 'struct'}get isStruct(){return  true}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return  -1}search(e){for(const t of this.members)e(t);}}class oe extends re{constructor(e,t,n){super(e),this.format=t,this.access=n;}get astNodeType(){return 'template'}getTypeName(){let e=this.name;if(null!==this.format){if('vec2'===e||'vec3'===e||'vec4'===e||'mat2x2'===e||'mat2x3'===e||'mat2x4'===e||'mat3x2'===e||'mat3x3'===e||'mat3x4'===e||'mat4x2'===e||'mat4x3'===e||'mat4x4'===e){if('f32'===this.format.name)return e+='f',e;if('i32'===this.format.name)return e+='i',e;if('u32'===this.format.name)return e+='u',e;if('bool'===this.format.name)return e+='b',e;if('f16'===this.format.name)return e+='h',e}e+=`<${this.format.name}>`;}else if('vec2'===e||'vec3'===e||'vec4'===e)return e;return e}}oe.vec2f=new oe('vec2',re.f32,null),oe.vec3f=new oe('vec3',re.f32,null),oe.vec4f=new oe('vec4',re.f32,null),oe.vec2i=new oe('vec2',re.i32,null),oe.vec3i=new oe('vec3',re.i32,null),oe.vec4i=new oe('vec4',re.i32,null),oe.vec2u=new oe('vec2',re.u32,null),oe.vec3u=new oe('vec3',re.u32,null),oe.vec4u=new oe('vec4',re.u32,null),oe.vec2h=new oe('vec2',re.f16,null),oe.vec3h=new oe('vec3',re.f16,null),oe.vec4h=new oe('vec4',re.f16,null),oe.vec2b=new oe('vec2',re.bool,null),oe.vec3b=new oe('vec3',re.bool,null),oe.vec4b=new oe('vec4',re.bool,null),oe.mat2x2f=new oe('mat2x2',re.f32,null),oe.mat2x3f=new oe('mat2x3',re.f32,null),oe.mat2x4f=new oe('mat2x4',re.f32,null),oe.mat3x2f=new oe('mat3x2',re.f32,null),oe.mat3x3f=new oe('mat3x3',re.f32,null),oe.mat3x4f=new oe('mat3x4',re.f32,null),oe.mat4x2f=new oe('mat4x2',re.f32,null),oe.mat4x3f=new oe('mat4x3',re.f32,null),oe.mat4x4f=new oe('mat4x4',re.f32,null),oe.mat2x2h=new oe('mat2x2',re.f16,null),oe.mat2x3h=new oe('mat2x3',re.f16,null),oe.mat2x4h=new oe('mat2x4',re.f16,null),oe.mat3x2h=new oe('mat3x2',re.f16,null),oe.mat3x3h=new oe('mat3x3',re.f16,null),oe.mat3x4h=new oe('mat3x4',re.f16,null),oe.mat4x2h=new oe('mat4x2',re.f16,null),oe.mat4x3h=new oe('mat4x3',re.f16,null),oe.mat4x4h=new oe('mat4x4',re.f16,null),oe.mat2x2i=new oe('mat2x2',re.i32,null),oe.mat2x3i=new oe('mat2x3',re.i32,null),oe.mat2x4i=new oe('mat2x4',re.i32,null),oe.mat3x2i=new oe('mat3x2',re.i32,null),oe.mat3x3i=new oe('mat3x3',re.i32,null),oe.mat3x4i=new oe('mat3x4',re.i32,null),oe.mat4x2i=new oe('mat4x2',re.i32,null),oe.mat4x3i=new oe('mat4x3',re.i32,null),oe.mat4x4i=new oe('mat4x4',re.i32,null),oe.mat2x2u=new oe('mat2x2',re.u32,null),oe.mat2x3u=new oe('mat2x3',re.u32,null),oe.mat2x4u=new oe('mat2x4',re.u32,null),oe.mat3x2u=new oe('mat3x2',re.u32,null),oe.mat3x3u=new oe('mat3x3',re.u32,null),oe.mat3x4u=new oe('mat3x4',re.u32,null),oe.mat4x2u=new oe('mat4x2',re.u32,null),oe.mat4x3u=new oe('mat4x3',re.u32,null),oe.mat4x4u=new oe('mat4x4',re.u32,null);class le extends re{constructor(e,t,n,s){super(e),this.storage=t,this.type=n,this.access=s;}get astNodeType(){return 'pointer'}}class ce extends re{constructor(e,t,n,s){super(e),this.attributes=t,this.format=n,this.count=s;}get astNodeType(){return 'array'}get isArray(){return  true}}class ue extends re{constructor(e,t,n){super(e),this.format=t,this.access=n;}get astNodeType(){return 'sampler'}}class he extends S{constructor(){super(),this.postfix=null;}}class fe extends he{constructor(e){super(),this.value=e;}get astNodeType(){return 'stringExpr'}toString(){return this.value}constEvaluateString(){return this.value}}class pe extends he{constructor(e,t){super(),this.type=e,this.args=t;}get astNodeType(){return 'createExpr'}search(e){if(e(this),this.args)for(const t of this.args)t.search(e);}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class de extends he{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t;}get astNodeType(){return 'callExpr'}setCachedReturnValue(e){this.cachedReturnValue=e;}get isBuiltin(){return $.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this);}}class me extends he{constructor(e){super(),this.name=e;}get astNodeType(){return 'varExpr'}search(e){e(this),this.postfix&&this.postfix.search(e);}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class _e extends he{constructor(e,t){super(),this.name=e,this.initializer=t;}get astNodeType(){return 'constExpr'}constEvaluate(e,t){if(this.initializer){const t=e.evalExpression(this.initializer,e.context);return null!==t&&this.postfix?t.getSubData(e,this.postfix,e.context):t}return null}search(e){this.initializer.search(e);}}class ge extends he{constructor(e,t){super(),this.value=e,this.type=t;}get astNodeType(){return 'literalExpr'}constEvaluate(e,t){return undefined!==t&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof Oe}get isVector(){return this.value instanceof Fe||this.value instanceof Me}get scalarValue(){return this.value instanceof Oe?this.value.value:(console.error('Value is not scalar.'),0)}get vectorValue(){return this.value instanceof Fe||this.value instanceof Me?this.value.data:(console.error('Value is not a vector or matrix.'),new Float32Array(0))}}class xe extends he{constructor(e,t){super(),this.type=e,this.value=t;}get astNodeType(){return 'bitcastExpr'}search(e){this.value.search(e);}}class be extends he{constructor(e){super(),this.index=e;}search(e){this.index.search(e);}}class ve extends he{constructor(){super();}}class we extends ve{constructor(e,t){super(),this.operator=e,this.right=t;}get astNodeType(){return 'unaryOp'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e);}}class ke extends ve{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n;}get astNodeType(){return 'binaryOp'}_getPromotedType(e,t){return e.name===t.name?e:'f32'===e.name||'f32'===t.name?re.f32:'u32'===e.name||'u32'===t.name?re.u32:re.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e);}}class Ie extends S{constructor(e){super(),this.body=e;}}class Te extends he{constructor(){super();}get astNodeType(){return 'default'}}class Se extends Ie{constructor(e,t){super(t),this.selectors=e;}get astNodeType(){return 'case'}search(e){this.searchBlock(this.body,e);}}class Ae extends Ie{constructor(e){super(e);}get astNodeType(){return 'default'}search(e){this.searchBlock(this.body,e);}}class Ee extends S{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n;}get astNodeType(){return 'argument'}}class $e extends S{constructor(e,t){super(),this.condition=e,this.body=t;}get astNodeType(){return 'elseif'}search(e){this.condition.search(e),this.searchBlock(this.body,e);}}class Le extends S{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n;}get astNodeType(){return 'member'}}class Ce extends S{constructor(e,t){super(),this.name=e,this.value=t;}get astNodeType(){return 'attribute'}}class De{constructor(e,t){this.parent=null,this.typeInfo=e,this.parent=t,this.id=De._id++;}clone(){throw `Clone: Not implemented for ${this.constructor.name}`}setDataValue(e,t,n,s){console.error(`SetDataValue: Not implemented for ${this.constructor.name}`);}getSubData(e,t,n){return console.error(`GetDataValue: Not implemented for ${this.constructor.name}`),null}toString(){return `<${this.typeInfo.getTypeName()}>`}}De._id=0;class Ne extends De{constructor(){super(new e('void',null),null);}toString(){return 'void'}}Ne.void=new Ne;class Ve extends De{constructor(e){super(new r('pointer',e.typeInfo,null),null),this.reference=e;}clone(){return this}setDataValue(e,t,n,s){this.reference.setDataValue(e,t,n,s);}getSubData(e,t,n){return t?this.reference.getSubData(e,t,n):this}toString(){return `&${this.reference.toString()}`}}class Oe extends De{constructor(e,t,n=null){super(t,n),e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array?this.data=e:'x32'===this.typeInfo.name?e-Math.floor(e)!=0?this.data=new Float32Array([e]):this.data=e>=0?new Uint32Array([e]):new Int32Array([e]):'i32'===this.typeInfo.name||'bool'===this.typeInfo.name?this.data=new Int32Array([e]):'u32'===this.typeInfo.name?this.data=new Uint32Array([e]):'f32'===this.typeInfo.name||'f16'===this.typeInfo.name?this.data=new Float32Array([e]):console.error('ScalarData2: Invalid type',t);}clone(){if(this.data instanceof Float32Array)return new Oe(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new Oe(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new Oe(new Uint32Array(this.data),this.typeInfo,null);throw 'ScalarData: Invalid data type'}get value(){return this.data[0]}set value(e){this.data[0]=e;}setDataValue(e,t,n,s){if(n)return void console.error('SetDataValue: Scalar data does not support postfix',n);if(!(t instanceof Oe))return void console.error('SetDataValue: Invalid value',t);let r=t.data[0];'i32'===this.typeInfo.name||'u32'===this.typeInfo.name?r=Math.floor(r):'bool'===this.typeInfo.name&&(r=r?1:0),this.data[0]=r;}getSubData(e,t,n){return t?(console.error('getSubData: Scalar data does not support postfix',t),null):this}toString(){return `${this.value}`}}function Be(e,t,n){const s=t.length;return 2===s?'f32'===n?new Fe(new Float32Array(t),e.getTypeInfo('vec2f')):'i32'===n||'bool'===n?new Fe(new Int32Array(t),e.getTypeInfo('vec2i')):'u32'===n?new Fe(new Uint32Array(t),e.getTypeInfo('vec2u')):'f16'===n?new Fe(new Float32Array(t),e.getTypeInfo('vec2h')):(console.error(`getSubData: Unknown format ${n}`),null):3===s?'f32'===n?new Fe(new Float32Array(t),e.getTypeInfo('vec3f')):'i32'===n||'bool'===n?new Fe(new Int32Array(t),e.getTypeInfo('vec3i')):'u32'===n?new Fe(new Uint32Array(t),e.getTypeInfo('vec3u')):'f16'===n?new Fe(new Float32Array(t),e.getTypeInfo('vec3h')):(console.error(`getSubData: Unknown format ${n}`),null):4===s?'f32'===n?new Fe(new Float32Array(t),e.getTypeInfo('vec4f')):'i32'===n||'bool'===n?new Fe(new Int32Array(t),e.getTypeInfo('vec4i')):'u32'===n?new Fe(new Uint32Array(t),e.getTypeInfo('vec4u')):'f16'===n?new Fe(new Float32Array(t),e.getTypeInfo('vec4h')):(console.error(`getSubData: Unknown format ${n}`),null):(console.error(`getSubData: Invalid vector size ${t.length}`),null)}class Fe extends De{constructor(e,t,n=null){if(super(t,n),e instanceof Float32Array||e instanceof Uint32Array||e instanceof Int32Array)this.data=e;else {const t=this.typeInfo.name;'vec2f'===t||'vec3f'===t||'vec4f'===t?this.data=new Float32Array(e):'vec2i'===t||'vec3i'===t||'vec4i'===t?this.data=new Int32Array(e):'vec2u'===t||'vec3u'===t||'vec4u'===t?this.data=new Uint32Array(e):'vec2h'===t||'vec3h'===t||'vec4h'===t?this.data=new Float32Array(e):'vec2b'===t||'vec3b'===t||'vec4b'===t?this.data=new Int32Array(e):'vec2'===t||'vec3'===t||'vec4'===t?this.data=new Float32Array(e):console.error(`VectorData: Invalid type ${t}`);}}clone(){if(this.data instanceof Float32Array)return new Fe(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new Fe(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new Fe(new Uint32Array(this.data),this.typeInfo,null);throw 'VectorData: Invalid data type'}setDataValue(e,t,n,s){n instanceof fe?console.error('TODO: Set vector postfix'):t instanceof Fe?this.data=t.data:console.error('SetDataValue: Invalid value',t);}getSubData(e,t,n){if(null===t)return this;let s=e.getTypeInfo('f32');if(this.typeInfo instanceof a)s=this.typeInfo.format||s;else {const t=this.typeInfo.name;'vec2f'===t||'vec3f'===t||'vec4f'===t?s=e.getTypeInfo('f32'):'vec2i'===t||'vec3i'===t||'vec4i'===t?s=e.getTypeInfo('i32'):'vec2b'===t||'vec3b'===t||'vec4b'===t?s=e.getTypeInfo('bool'):'vec2u'===t||'vec3u'===t||'vec4u'===t?s=e.getTypeInfo('u32'):'vec2h'===t||'vec3h'===t||'vec4h'===t?s=e.getTypeInfo('f16'):console.error(`GetSubData: Unknown type ${t}`);}let r=this;for(;null!==t&&null!==r;){if(t instanceof be){const a=t.index;let i=-1;if(a instanceof ge){if(!(a.value instanceof Oe))return console.error(`GetSubData: Invalid array index ${a.value}`),null;i=a.value.value;}else {const t=e.evalExpression(a,n);if(!(t instanceof Oe))return console.error('GetSubData: Unknown index type',a),null;i=t.value;}if(i<0||i>=r.data.length)return console.error('GetSubData: Index out of range',i),null;if(r.data instanceof Float32Array){const e=new Float32Array(r.data.buffer,r.data.byteOffset+4*i,1);return new Oe(e,s)}if(r.data instanceof Int32Array){const e=new Int32Array(r.data.buffer,r.data.byteOffset+4*i,1);return new Oe(e,s)}if(r.data instanceof Uint32Array){const e=new Uint32Array(r.data.buffer,r.data.byteOffset+4*i,1);return new Oe(e,s)}throw 'GetSubData: Invalid data type'}if(!(t instanceof fe))return console.error('GetSubData: Unknown postfix',t),null;{const n=t.value.toLowerCase();if(1===n.length){let e=0;if('x'===n||'r'===n)e=0;else if('y'===n||'g'===n)e=1;else if('z'===n||'b'===n)e=2;else {if('w'!==n&&'a'!==n)return console.error(`GetSubData: Unknown member ${n}`),null;e=3;}if(this.data instanceof Float32Array){let t=new Float32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Oe(t,s,this)}if(this.data instanceof Int32Array){let t=new Int32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Oe(t,s,this)}if(this.data instanceof Uint32Array){let t=new Uint32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new Oe(t,s,this)}}const a=[];for(const e of n)'x'===e||'r'===e?a.push(this.data[0]):'y'===e||'g'===e?a.push(this.data[1]):'z'===e||'b'===e?a.push(this.data[2]):'w'===e||'a'===e?a.push(this.data[3]):console.error(`GetDataValue: Unknown member ${e}`);r=Be(e,a,s.name);}t=t.postfix;}return r}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class Me extends De{constructor(e,t,n=null){super(t,n),e instanceof Float32Array?this.data=e:this.data=new Float32Array(e);}clone(){return new Me(new Float32Array(this.data),this.typeInfo,null)}setDataValue(e,t,n,s){n instanceof fe?console.error('TODO: Set matrix postfix'):t instanceof Me?this.data=t.data:console.error('SetDataValue: Invalid value',t);}getSubData(e,t,n){if(null===t)return this;const s=this.typeInfo.name;if(e.getTypeInfo('f32'),this.typeInfo instanceof a)this.typeInfo.format;else if(s.endsWith('f'))e.getTypeInfo('f32');else if(s.endsWith('i'))e.getTypeInfo('i32');else if(s.endsWith('u'))e.getTypeInfo('u32');else {if(!s.endsWith('h'))return console.error(`GetDataValue: Unknown type ${s}`),null;e.getTypeInfo('f16');}if(t instanceof be){const r=t.index;let a=-1;if(r instanceof ge){if(!(r.value instanceof Oe))return console.error(`GetDataValue: Invalid array index ${r.value}`),null;a=r.value.value;}else {const t=e.evalExpression(r,n);if(!(t instanceof Oe))return console.error('GetDataValue: Unknown index type',r),null;a=t.value;}if(a<0||a>=this.data.length)return console.error('GetDataValue: Index out of range',a),null;const i=s.endsWith('h')?'h':'f';let o;if('mat2x2'===s||'mat2x2f'===s||'mat2x2h'===s||'mat3x2'===s||'mat3x2f'===s||'mat3x2h'===s||'mat4x2'===s||'mat4x2f'===s||'mat4x2h'===s)o=new Fe(new Float32Array(this.data.buffer,this.data.byteOffset+2*a*4,2),e.getTypeInfo(`vec2${i}`));else if('mat2x3'===s||'mat2x3f'===s||'mat2x3h'===s||'mat3x3'===s||'mat3x3f'===s||'mat3x3h'===s||'mat4x3'===s||'mat4x3f'===s||'mat4x3h'===s)o=new Fe(new Float32Array(this.data.buffer,this.data.byteOffset+3*a*4,3),e.getTypeInfo(`vec3${i}`));else {if('mat2x4'!==s&&'mat2x4f'!==s&&'mat2x4h'!==s&&'mat3x4'!==s&&'mat3x4f'!==s&&'mat3x4h'!==s&&'mat4x4'!==s&&'mat4x4f'!==s&&'mat4x4h'!==s)return console.error(`GetDataValue: Unknown type ${s}`),null;o=new Fe(new Float32Array(this.data.buffer,this.data.byteOffset+4*a*4,4),e.getTypeInfo(`vec4${i}`));}return t.postfix?o.getSubData(e,t.postfix,n):o}return console.error('GetDataValue: Invalid postfix',t),null}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class Ue extends De{constructor(e,t,n=0,s=null){super(t,s),this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n;}clone(){const e=new Uint8Array(new Uint8Array(this.buffer,this.offset,this.typeInfo.size));return new Ue(e.buffer,this.typeInfo,0,null)}setDataValue(t,r,a,i){if(null===r)return void console.log('setDataValue: NULL data.');let o=this.offset,l=this.typeInfo;for(;a;){if(a instanceof be)if(l instanceof s){const e=a.index;if(e instanceof ge){if(!(e.value instanceof Oe))return void console.error(`SetDataValue: Invalid index type ${e.value}`);o+=e.value.value*l.stride;}else {const n=t.evalExpression(e,i);if(!(n instanceof Oe))return void console.error('SetDataValue: Unknown index type',e);o+=n.value*l.stride;}l=l.format;}else console.error(`SetDataValue: Type ${l.getTypeName()} is not an array`);else {if(!(a instanceof fe))return void console.error('SetDataValue: Unknown postfix type',a);{const t=a.value;if(l instanceof n){let e=false;for(const n of l.members)if(n.name===t){o+=n.offset,l=n.type,e=true;break}if(!e)return void console.error(`SetDataValue: Member ${t} not found`)}else if(l instanceof e){const e=l.getTypeName();let n=0;if('x'===t||'r'===t)n=0;else if('y'===t||'g'===t)n=1;else if('z'===t||'b'===t)n=2;else {if('w'!==t&&'a'!==t)return void console.error(`SetDataValue: Unknown member ${t}`);n=3;}if(!(r instanceof Oe))return void console.error('SetDataValue: Invalid value',r);const s=r.value;return 'vec2f'===e?void(new Float32Array(this.buffer,o,2)[n]=s):'vec3f'===e?void(new Float32Array(this.buffer,o,3)[n]=s):'vec4f'===e?void(new Float32Array(this.buffer,o,4)[n]=s):'vec2i'===e?void(new Int32Array(this.buffer,o,2)[n]=s):'vec3i'===e?void(new Int32Array(this.buffer,o,3)[n]=s):'vec4i'===e?void(new Int32Array(this.buffer,o,4)[n]=s):'vec2u'===e?void(new Uint32Array(this.buffer,o,2)[n]=s):'vec3u'===e?void(new Uint32Array(this.buffer,o,3)[n]=s):'vec4u'===e?void(new Uint32Array(this.buffer,o,4)[n]=s):void console.error(`SetDataValue: Type ${e} is not a struct`)}}}a=a.postfix;}this.setData(t,r,l,o,i);}setData(e,t,n,s,r){const a=n.getTypeName();if('f32'!==a&&'f16'!==a)if('i32'!==a&&'atomic<i32>'!==a&&'x32'!==a)if('u32'!==a&&'atomic<u32>'!==a)if('bool'!==a)if('vec2f'!==a&&'vec2h'!==a)if('vec3f'!==a&&'vec3h'!==a)if('vec4f'!==a&&'vec4h'!==a)if('vec2i'!==a)if('vec3i'!==a)if('vec4i'!==a)if('vec2u'!==a)if('vec3u'!==a)if('vec4u'!==a)if('vec2b'!==a)if('vec3b'!==a)if('vec4b'!==a)if('mat2x2f'!==a&&'mat2x2h'!==a)if('mat2x3f'!==a&&'mat2x3h'!==a)if('mat2x4f'!==a&&'mat2x4h'!==a)if('mat3x2f'!==a&&'mat3x2h'!==a)if('mat3x3f'!==a&&'mat3x3h'!==a)if('mat3x4f'!==a&&'mat3x4h'!==a)if('mat4x2f'!==a&&'mat4x2h'!==a)if('mat4x3f'!==a&&'mat4x3h'!==a)if('mat4x4f'!==a&&'mat4x4h'!==a)if(t instanceof Ue){if(n===t.typeInfo){return void new Uint8Array(this.buffer,s,t.buffer.byteLength).set(new Uint8Array(t.buffer))}console.error('SetDataValue: Type mismatch',a,t.typeInfo.getTypeName());}else console.error(`SetData: Unknown type ${a}`);else {const e=new Float32Array(this.buffer,s,16);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11],e[12]=t.data[12],e[13]=t.data[13],e[14]=t.data[14],e[15]=t.data[15]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]);}else {const e=new Float32Array(this.buffer,s,12);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11]);}else {const e=new Float32Array(this.buffer,s,8);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7]);}else {const e=new Float32Array(this.buffer,s,12);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11]);}else {const e=new Float32Array(this.buffer,s,9);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8]);}else {const e=new Float32Array(this.buffer,s,6);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5]);}else {const e=new Float32Array(this.buffer,s,8);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7]);}else {const e=new Float32Array(this.buffer,s,6);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5]);}else {const e=new Float32Array(this.buffer,s,4);t instanceof Me?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]);}else {const e=new Uint32Array(this.buffer,s,4);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]);}else {const e=new Uint32Array(this.buffer,s,3);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]);}else {const e=new Uint32Array(this.buffer,s,2);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]);}else {const e=new Uint32Array(this.buffer,s,4);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]);}else {const e=new Uint32Array(this.buffer,s,3);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]);}else {const e=new Uint32Array(this.buffer,s,2);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]);}else {const e=new Int32Array(this.buffer,s,4);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]);}else {const e=new Int32Array(this.buffer,s,3);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]);}else {const e=new Int32Array(this.buffer,s,2);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]);}else {const e=new Float32Array(this.buffer,s,4);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]);}else {const e=new Float32Array(this.buffer,s,3);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2]);}else {const e=new Float32Array(this.buffer,s,2);t instanceof Fe?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1]);}else t instanceof Oe&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof Oe&&(new Uint32Array(this.buffer,s,1)[0]=t.value);else t instanceof Oe&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof Oe&&(new Float32Array(this.buffer,s,1)[0]=t.value);}getSubData(t,r,i){var o,l,c;if(null===r)return this;let u=this.offset,h=this.typeInfo;for(;r;){if(r instanceof be){const e=r.index,n=e instanceof he?t.evalExpression(e,i):e;let a=0;if(n instanceof Oe?a=n.value:'number'==typeof n?a=n:console.error('GetDataValue: Invalid index type',e),h instanceof s)u+=a*h.stride,h=h.format;else {const e=h.getTypeName();'mat4x4'===e||'mat4x4f'===e||'mat4x4h'===e?(u+=16*a,h=t.getTypeInfo('vec4f')):console.error(`getDataValue: Type ${h.getTypeName()} is not an array`);}}else {if(!(r instanceof fe))return console.error('GetDataValue: Unknown postfix type',r),null;{const s=r.value;if(h instanceof n){let e=false;for(const t of h.members)if(t.name===s){u+=t.offset,h=t.type,e=true;break}if(!e)return console.error(`GetDataValue: Member ${s} not found`),null}else if(h instanceof e){const e=h.getTypeName();if('vec2f'===e||'vec3f'===e||'vec4f'===e||'vec2i'===e||'vec3i'===e||'vec4i'===e||'vec2u'===e||'vec3u'===e||'vec4u'===e||'vec2b'===e||'vec3b'===e||'vec4b'===e||'vec2h'===e||'vec3h'===e||'vec4h'===e||'vec2'===e||'vec3'===e||'vec4'===e){if(s.length>0&&s.length<5){let n='f';const r=[];for(let a=0;a<s.length;++a){const i=s[a].toLowerCase();let o=0;if('x'===i||'r'===i)o=0;else if('y'===i||'g'===i)o=1;else if('z'===i||'b'===i)o=2;else {if('w'!==i&&'a'!==i)return console.error(`Unknown member ${s}`),null;o=3;}if(1===s.length){if(e.endsWith('f'))return this.buffer.byteLength<u+4*o+4?(console.log('Insufficient buffer data'),null):new Oe(new Float32Array(this.buffer,u+4*o,1),t.getTypeInfo('f32'),this);if(e.endsWith('h'))return new Oe(new Float32Array(this.buffer,u+4*o,1),t.getTypeInfo('f16'),this);if(e.endsWith('i'))return new Oe(new Int32Array(this.buffer,u+4*o,1),t.getTypeInfo('i32'),this);if(e.endsWith('b'))return new Oe(new Int32Array(this.buffer,u+4*o,1),t.getTypeInfo('bool'),this);if(e.endsWith('u'))return new Oe(new Uint32Array(this.buffer,u+4*o,1),t.getTypeInfo('i32'),this)}if('vec2f'===e)r.push(new Float32Array(this.buffer,u,2)[o]);else if('vec3f'===e){if(u+12>=this.buffer.byteLength)return console.log('Insufficient buffer data'),null;const e=new Float32Array(this.buffer,u,3);r.push(e[o]);}else if('vec4f'===e)r.push(new Float32Array(this.buffer,u,4)[o]);else if('vec2i'===e)n='i',r.push(new Int32Array(this.buffer,u,2)[o]);else if('vec3i'===e)n='i',r.push(new Int32Array(this.buffer,u,3)[o]);else if('vec4i'===e)n='i',r.push(new Int32Array(this.buffer,u,4)[o]);else if('vec2u'===e){n='u';const e=new Uint32Array(this.buffer,u,2);r.push(e[o]);}else 'vec3u'===e?(n='u',r.push(new Uint32Array(this.buffer,u,3)[o])):'vec4u'===e&&(n='u',r.push(new Uint32Array(this.buffer,u,4)[o]));}return 2===r.length?h=t.getTypeInfo(`vec2${n}`):3===r.length?h=t.getTypeInfo(`vec3${n}`):4===r.length?h=t.getTypeInfo(`vec4${n}`):console.error(`GetDataValue: Invalid vector length ${r.length}`),new Fe(r,h,null)}return console.error(`GetDataValue: Unknown member ${s}`),null}return console.error(`GetDataValue: Type ${e} is not a struct`),null}}}r=r.postfix;}const f=h.getTypeName();return 'f32'===f?new Oe(new Float32Array(this.buffer,u,1),h,this):'i32'===f?new Oe(new Int32Array(this.buffer,u,1),h,this):'u32'===f?new Oe(new Uint32Array(this.buffer,u,1),h,this):'vec2f'===f?new Fe(new Float32Array(this.buffer,u,2),h,this):'vec3f'===f?new Fe(new Float32Array(this.buffer,u,3),h,this):'vec4f'===f?new Fe(new Float32Array(this.buffer,u,4),h,this):'vec2i'===f?new Fe(new Int32Array(this.buffer,u,2),h,this):'vec3i'===f?new Fe(new Int32Array(this.buffer,u,3),h,this):'vec4i'===f?new Fe(new Int32Array(this.buffer,u,4),h,this):'vec2u'===f?new Fe(new Uint32Array(this.buffer,u,2),h,this):'vec3u'===f?new Fe(new Uint32Array(this.buffer,u,3),h,this):'vec4u'===f?new Fe(new Uint32Array(this.buffer,u,4),h,this):h instanceof a&&'atomic'===h.name?'u32'===(null===(o=h.format)||undefined===o?undefined:o.name)?new Oe(new Uint32Array(this.buffer,u,1)[0],h.format,this):'i32'===(null===(l=h.format)||undefined===l?undefined:l.name)?new Oe(new Int32Array(this.buffer,u,1)[0],h.format,this):(console.error(`GetDataValue: Invalid atomic format ${null===(c=h.format)||undefined===c?undefined:c.name}`),null):new Ue(this.buffer,h,u,this)}toString(){let e='';if(this.typeInfo instanceof s)if('f32'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`;}else if('i32'===this.typeInfo.format.name){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`;}else if('u32'===this.typeInfo.format.name){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`;}else if('vec2f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`;}else if('vec3f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`;}else if('vec4f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`;}else e='[...]';else this.typeInfo instanceof n?e+='{...}':e='[...]';return e}}class Pe extends De{constructor(e,t,n,s){super(t,null),this.data=e,this.descriptor=n,this.view=s;}clone(){return new Pe(this.data,this.typeInfo,this.descriptor,this.view)}get width(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>0?null!==(e=n[0])&&undefined!==e?e:0:n instanceof Object&&null!==(t=n.width)&&undefined!==t?t:0}get height(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>1?null!==(e=n[1])&&undefined!==e?e:0:n instanceof Object&&null!==(t=n.height)&&undefined!==t?t:0}get depthOrArrayLayers(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>2?null!==(e=n[2])&&undefined!==e?e:0:n instanceof Object&&null!==(t=n.depthOrArrayLayers)&&undefined!==t?t:0}get format(){var e;return this.descriptor&&null!==(e=this.descriptor.format)&&undefined!==e?e:'rgba8unorm'}get sampleCount(){var e;return this.descriptor&&null!==(e=this.descriptor.sampleCount)&&undefined!==e?e:1}get mipLevelCount(){var e;return this.descriptor&&null!==(e=this.descriptor.mipLevelCount)&&undefined!==e?e:1}get dimension(){var e;return this.descriptor&&null!==(e=this.descriptor.dimension)&&undefined!==e?e:'2d'}getMipLevelSize(e){if(e>=this.mipLevelCount)return [0,0,0];const t=[this.width,this.height,this.depthOrArrayLayers];for(let n=0;n<t.length;++n)t[n]=Math.max(1,t[n]>>e);return t}get texelByteSize(){const e=this.format,t=T[e];return t?t.isDepthStencil?4:t.bytesPerBlock:0}get bytesPerRow(){return this.width*this.texelByteSize}get isDepthStencil(){const e=this.format,t=T[e];return !!t&&t.isDepthStencil}getGpuSize(){const e=this.format,t=T[e],n=this.width;if(!e||n<=0||!t)return  -1;const s=this.height,r=this.depthOrArrayLayers,a=this.dimension;return n/t.blockWidth*('1d'===a?1:s/t.blockHeight)*t.bytesPerBlock*r}getPixel(e,t,n=0,s=0){const r=this.texelByteSize,a=this.bytesPerRow,i=this.height,o=this.data[s];return w(new Uint8Array(o),e,t,n,s,i,a,r,this.format)}setPixel(e,t,n,s,r){const a=this.texelByteSize,i=this.bytesPerRow,o=this.height,l=this.data[s];!function(e,t,n,s,r,a,i,o,l,c){const u=s*(i>>=r)*(a>>=r)+n*i+t*o;switch(l){case 'r8unorm':return void I(e,u,'8unorm',1,c);case 'r8snorm':return void I(e,u,'8snorm',1,c);case 'r8uint':return void I(e,u,'8uint',1,c);case 'r8sint':return void I(e,u,'8sint',1,c);case 'rg8unorm':return void I(e,u,'8unorm',2,c);case 'rg8snorm':return void I(e,u,'8snorm',2,c);case 'rg8uint':return void I(e,u,'8uint',2,c);case 'rg8sint':return void I(e,u,'8sint',2,c);case 'rgba8unorm-srgb':case 'rgba8unorm':case 'bgra8unorm-srgb':case 'bgra8unorm':return void I(e,u,'8unorm',4,c);case 'rgba8snorm':return void I(e,u,'8snorm',4,c);case 'rgba8uint':return void I(e,u,'8uint',4,c);case 'rgba8sint':return void I(e,u,'8sint',4,c);case 'r16uint':return void I(e,u,'16uint',1,c);case 'r16sint':return void I(e,u,'16sint',1,c);case 'r16float':return void I(e,u,'16float',1,c);case 'rg16uint':return void I(e,u,'16uint',2,c);case 'rg16sint':return void I(e,u,'16sint',2,c);case 'rg16float':return void I(e,u,'16float',2,c);case 'rgba16uint':return void I(e,u,'16uint',4,c);case 'rgba16sint':return void I(e,u,'16sint',4,c);case 'rgba16float':return void I(e,u,'16float',4,c);case 'r32uint':return void I(e,u,'32uint',1,c);case 'r32sint':return void I(e,u,'32sint',1,c);case 'depth16unorm':case 'depth24plus':case 'depth24plus-stencil8':case 'depth32float':case 'depth32float-stencil8':case 'r32float':return void I(e,u,'32float',1,c);case 'rg32uint':return void I(e,u,'32uint',2,c);case 'rg32sint':return void I(e,u,'32sint',2,c);case 'rg32float':return void I(e,u,'32float',2,c);case 'rgba32uint':return void I(e,u,'32uint',4,c);case 'rgba32sint':return void I(e,u,'32sint',4,c);case 'rgba32float':return void I(e,u,'32float',4,c);case 'rg11b10ufloat':console.error('TODO: rg11b10ufloat not supported for writing');}}(new Uint8Array(l),e,t,n,s,o,i,a,this.format,r);}}(e=>{e[e.token=0]='token',e[e.keyword=1]='keyword',e[e.reserved=2]='reserved';})(H||(H={}));class We{constructor(e,t,n){this.name=e,this.type=t,this.rule=n;}toString(){return this.name}}class qe{}q=qe,qe.none=new We('',H.reserved,''),qe.eof=new We('EOF',H.token,''),qe.reserved={asm:new We('asm',H.reserved,'asm'),bf16:new We('bf16',H.reserved,'bf16'),do:new We('do',H.reserved,'do'),enum:new We('enum',H.reserved,'enum'),f16:new We('f16',H.reserved,'f16'),f64:new We('f64',H.reserved,'f64'),handle:new We('handle',H.reserved,'handle'),i8:new We('i8',H.reserved,'i8'),i16:new We('i16',H.reserved,'i16'),i64:new We('i64',H.reserved,'i64'),mat:new We('mat',H.reserved,'mat'),premerge:new We('premerge',H.reserved,'premerge'),regardless:new We('regardless',H.reserved,'regardless'),typedef:new We('typedef',H.reserved,'typedef'),u8:new We('u8',H.reserved,'u8'),u16:new We('u16',H.reserved,'u16'),u64:new We('u64',H.reserved,'u64'),unless:new We('unless',H.reserved,'unless'),using:new We('using',H.reserved,'using'),vec:new We('vec',H.reserved,'vec'),void:new We('void',H.reserved,'void')},qe.keywords={array:new We('array',H.keyword,'array'),atomic:new We('atomic',H.keyword,'atomic'),bool:new We('bool',H.keyword,'bool'),f32:new We('f32',H.keyword,'f32'),i32:new We('i32',H.keyword,'i32'),mat2x2:new We('mat2x2',H.keyword,'mat2x2'),mat2x3:new We('mat2x3',H.keyword,'mat2x3'),mat2x4:new We('mat2x4',H.keyword,'mat2x4'),mat3x2:new We('mat3x2',H.keyword,'mat3x2'),mat3x3:new We('mat3x3',H.keyword,'mat3x3'),mat3x4:new We('mat3x4',H.keyword,'mat3x4'),mat4x2:new We('mat4x2',H.keyword,'mat4x2'),mat4x3:new We('mat4x3',H.keyword,'mat4x3'),mat4x4:new We('mat4x4',H.keyword,'mat4x4'),ptr:new We('ptr',H.keyword,'ptr'),sampler:new We('sampler',H.keyword,'sampler'),sampler_comparison:new We('sampler_comparison',H.keyword,'sampler_comparison'),struct:new We('struct',H.keyword,'struct'),texture_1d:new We('texture_1d',H.keyword,'texture_1d'),texture_2d:new We('texture_2d',H.keyword,'texture_2d'),texture_2d_array:new We('texture_2d_array',H.keyword,'texture_2d_array'),texture_3d:new We('texture_3d',H.keyword,'texture_3d'),texture_cube:new We('texture_cube',H.keyword,'texture_cube'),texture_cube_array:new We('texture_cube_array',H.keyword,'texture_cube_array'),texture_multisampled_2d:new We('texture_multisampled_2d',H.keyword,'texture_multisampled_2d'),texture_storage_1d:new We('texture_storage_1d',H.keyword,'texture_storage_1d'),texture_storage_2d:new We('texture_storage_2d',H.keyword,'texture_storage_2d'),texture_storage_2d_array:new We('texture_storage_2d_array',H.keyword,'texture_storage_2d_array'),texture_storage_3d:new We('texture_storage_3d',H.keyword,'texture_storage_3d'),texture_depth_2d:new We('texture_depth_2d',H.keyword,'texture_depth_2d'),texture_depth_2d_array:new We('texture_depth_2d_array',H.keyword,'texture_depth_2d_array'),texture_depth_cube:new We('texture_depth_cube',H.keyword,'texture_depth_cube'),texture_depth_cube_array:new We('texture_depth_cube_array',H.keyword,'texture_depth_cube_array'),texture_depth_multisampled_2d:new We('texture_depth_multisampled_2d',H.keyword,'texture_depth_multisampled_2d'),texture_external:new We('texture_external',H.keyword,'texture_external'),u32:new We('u32',H.keyword,'u32'),vec2:new We('vec2',H.keyword,'vec2'),vec3:new We('vec3',H.keyword,'vec3'),vec4:new We('vec4',H.keyword,'vec4'),bitcast:new We('bitcast',H.keyword,'bitcast'),block:new We('block',H.keyword,'block'),break:new We('break',H.keyword,'break'),case:new We('case',H.keyword,'case'),continue:new We('continue',H.keyword,'continue'),continuing:new We('continuing',H.keyword,'continuing'),default:new We('default',H.keyword,'default'),diagnostic:new We('diagnostic',H.keyword,'diagnostic'),discard:new We('discard',H.keyword,'discard'),else:new We('else',H.keyword,'else'),enable:new We('enable',H.keyword,'enable'),fallthrough:new We('fallthrough',H.keyword,'fallthrough'),false:new We('false',H.keyword,'false'),fn:new We('fn',H.keyword,'fn'),for:new We('for',H.keyword,'for'),function:new We('function',H.keyword,'function'),if:new We('if',H.keyword,'if'),let:new We('let',H.keyword,'let'),const:new We('const',H.keyword,'const'),loop:new We('loop',H.keyword,'loop'),while:new We('while',H.keyword,'while'),private:new We('private',H.keyword,'private'),read:new We('read',H.keyword,'read'),read_write:new We('read_write',H.keyword,'read_write'),return:new We('return',H.keyword,'return'),requires:new We('requires',H.keyword,'requires'),storage:new We('storage',H.keyword,'storage'),switch:new We('switch',H.keyword,'switch'),true:new We('true',H.keyword,'true'),alias:new We('alias',H.keyword,'alias'),type:new We('type',H.keyword,'type'),uniform:new We('uniform',H.keyword,'uniform'),var:new We('var',H.keyword,'var'),override:new We('override',H.keyword,'override'),workgroup:new We('workgroup',H.keyword,'workgroup'),write:new We('write',H.keyword,'write'),r8unorm:new We('r8unorm',H.keyword,'r8unorm'),r8snorm:new We('r8snorm',H.keyword,'r8snorm'),r8uint:new We('r8uint',H.keyword,'r8uint'),r8sint:new We('r8sint',H.keyword,'r8sint'),r16uint:new We('r16uint',H.keyword,'r16uint'),r16sint:new We('r16sint',H.keyword,'r16sint'),r16float:new We('r16float',H.keyword,'r16float'),rg8unorm:new We('rg8unorm',H.keyword,'rg8unorm'),rg8snorm:new We('rg8snorm',H.keyword,'rg8snorm'),rg8uint:new We('rg8uint',H.keyword,'rg8uint'),rg8sint:new We('rg8sint',H.keyword,'rg8sint'),r32uint:new We('r32uint',H.keyword,'r32uint'),r32sint:new We('r32sint',H.keyword,'r32sint'),r32float:new We('r32float',H.keyword,'r32float'),rg16uint:new We('rg16uint',H.keyword,'rg16uint'),rg16sint:new We('rg16sint',H.keyword,'rg16sint'),rg16float:new We('rg16float',H.keyword,'rg16float'),rgba8unorm:new We('rgba8unorm',H.keyword,'rgba8unorm'),rgba8unorm_srgb:new We('rgba8unorm_srgb',H.keyword,'rgba8unorm_srgb'),rgba8snorm:new We('rgba8snorm',H.keyword,'rgba8snorm'),rgba8uint:new We('rgba8uint',H.keyword,'rgba8uint'),rgba8sint:new We('rgba8sint',H.keyword,'rgba8sint'),bgra8unorm:new We('bgra8unorm',H.keyword,'bgra8unorm'),bgra8unorm_srgb:new We('bgra8unorm_srgb',H.keyword,'bgra8unorm_srgb'),rgb10a2unorm:new We('rgb10a2unorm',H.keyword,'rgb10a2unorm'),rg11b10float:new We('rg11b10float',H.keyword,'rg11b10float'),rg32uint:new We('rg32uint',H.keyword,'rg32uint'),rg32sint:new We('rg32sint',H.keyword,'rg32sint'),rg32float:new We('rg32float',H.keyword,'rg32float'),rgba16uint:new We('rgba16uint',H.keyword,'rgba16uint'),rgba16sint:new We('rgba16sint',H.keyword,'rgba16sint'),rgba16float:new We('rgba16float',H.keyword,'rgba16float'),rgba32uint:new We('rgba32uint',H.keyword,'rgba32uint'),rgba32sint:new We('rgba32sint',H.keyword,'rgba32sint'),rgba32float:new We('rgba32float',H.keyword,'rgba32float'),static_assert:new We('static_assert',H.keyword,'static_assert')},qe.tokens={decimal_float_literal:new We('decimal_float_literal',H.token,/((-?[0-9]*\\.[0-9]+|-?[0-9]+\\.[0-9]*)((e|E)(\\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new We('hex_float_literal',H.token,/-?0x((([0-9a-fA-F]*\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\.[0-9a-fA-F]*)((p|P)(\\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\\+|-)?[0-9]+[fh]?))/),int_literal:new We('int_literal',H.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new We('uint_literal',H.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new We('name',H.token,/([_\\p{XID_Start}][\\p{XID_Continue}]+)|([\\p{XID_Start}])/u),ident:new We('ident',H.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new We('and',H.token,'&'),and_and:new We('and_and',H.token,'&&'),arrow:new We('arrow ',H.token,'->'),attr:new We('attr',H.token,'@'),forward_slash:new We('forward_slash',H.token,'/'),bang:new We('bang',H.token,'!'),bracket_left:new We('bracket_left',H.token,'['),bracket_right:new We('bracket_right',H.token,']'),brace_left:new We('brace_left',H.token,'{'),brace_right:new We('brace_right',H.token,'}'),colon:new We('colon',H.token,':'),comma:new We('comma',H.token,','),equal:new We('equal',H.token,'='),equal_equal:new We('equal_equal',H.token,'=='),not_equal:new We('not_equal',H.token,'!='),greater_than:new We('greater_than',H.token,'>'),greater_than_equal:new We('greater_than_equal',H.token,'>='),shift_right:new We('shift_right',H.token,'>>'),less_than:new We('less_than',H.token,'<'),less_than_equal:new We('less_than_equal',H.token,'<='),shift_left:new We('shift_left',H.token,'<<'),modulo:new We('modulo',H.token,'%'),minus:new We('minus',H.token,'-'),minus_minus:new We('minus_minus',H.token,'--'),period:new We('period',H.token,'.'),plus:new We('plus',H.token,'+'),plus_plus:new We('plus_plus',H.token,'++'),or:new We('or',H.token,'|'),or_or:new We('or_or',H.token,'||'),paren_left:new We('paren_left',H.token,'('),paren_right:new We('paren_right',H.token,')'),semicolon:new We('semicolon',H.token,';'),star:new We('star',H.token,'*'),tilde:new We('tilde',H.token,'~'),underscore:new We('underscore',H.token,'_'),xor:new We('xor',H.token,'^'),plus_equal:new We('plus_equal',H.token,'+='),minus_equal:new We('minus_equal',H.token,'-='),times_equal:new We('times_equal',H.token,'*='),division_equal:new We('division_equal',H.token,'/='),modulo_equal:new We('modulo_equal',H.token,'%='),and_equal:new We('and_equal',H.token,'&='),or_equal:new We('or_equal',H.token,'|='),xor_equal:new We('xor_equal',H.token,'^='),shift_right_equal:new We('shift_right_equal',H.token,'>>='),shift_left_equal:new We('shift_left_equal',H.token,'<<=')},qe.simpleTokens={'@':q.tokens.attr,'{':q.tokens.brace_left,'}':q.tokens.brace_right,':':q.tokens.colon,',':q.tokens.comma,'(':q.tokens.paren_left,')':q.tokens.paren_right,';':q.tokens.semicolon},qe.literalTokens={'&':q.tokens.and,'&&':q.tokens.and_and,'->':q.tokens.arrow,'/':q.tokens.forward_slash,'!':q.tokens.bang,'[':q.tokens.bracket_left,']':q.tokens.bracket_right,'=':q.tokens.equal,'==':q.tokens.equal_equal,'!=':q.tokens.not_equal,'>':q.tokens.greater_than,'>=':q.tokens.greater_than_equal,'>>':q.tokens.shift_right,'<':q.tokens.less_than,'<=':q.tokens.less_than_equal,'<<':q.tokens.shift_left,'%':q.tokens.modulo,'-':q.tokens.minus,'--':q.tokens.minus_minus,'.':q.tokens.period,'+':q.tokens.plus,'++':q.tokens.plus_plus,'|':q.tokens.or,'||':q.tokens.or_or,'*':q.tokens.star,'~':q.tokens.tilde,_:q.tokens.underscore,'^':q.tokens.xor,'+=':q.tokens.plus_equal,'-=':q.tokens.minus_equal,'*=':q.tokens.times_equal,'/=':q.tokens.division_equal,'%=':q.tokens.modulo_equal,'&=':q.tokens.and_equal,'|=':q.tokens.or_equal,'^=':q.tokens.xor_equal,'>>=':q.tokens.shift_right_equal,'<<=':q.tokens.shift_left_equal},qe.regexTokens={decimal_float_literal:q.tokens.decimal_float_literal,hex_float_literal:q.tokens.hex_float_literal,int_literal:q.tokens.int_literal,uint_literal:q.tokens.uint_literal,ident:q.tokens.ident},qe.storage_class=[q.keywords.function,q.keywords.private,q.keywords.workgroup,q.keywords.uniform,q.keywords.storage],qe.access_mode=[q.keywords.read,q.keywords.write,q.keywords.read_write],qe.sampler_type=[q.keywords.sampler,q.keywords.sampler_comparison],qe.sampled_texture_type=[q.keywords.texture_1d,q.keywords.texture_2d,q.keywords.texture_2d_array,q.keywords.texture_3d,q.keywords.texture_cube,q.keywords.texture_cube_array],qe.multisampled_texture_type=[q.keywords.texture_multisampled_2d],qe.storage_texture_type=[q.keywords.texture_storage_1d,q.keywords.texture_storage_2d,q.keywords.texture_storage_2d_array,q.keywords.texture_storage_3d],qe.depth_texture_type=[q.keywords.texture_depth_2d,q.keywords.texture_depth_2d_array,q.keywords.texture_depth_cube,q.keywords.texture_depth_cube_array,q.keywords.texture_depth_multisampled_2d],qe.texture_external_type=[q.keywords.texture_external],qe.any_texture_type=[...q.sampled_texture_type,...q.multisampled_texture_type,...q.storage_texture_type,...q.depth_texture_type,...q.texture_external_type],qe.texel_format=[q.keywords.r8unorm,q.keywords.r8snorm,q.keywords.r8uint,q.keywords.r8sint,q.keywords.r16uint,q.keywords.r16sint,q.keywords.r16float,q.keywords.rg8unorm,q.keywords.rg8snorm,q.keywords.rg8uint,q.keywords.rg8sint,q.keywords.r32uint,q.keywords.r32sint,q.keywords.r32float,q.keywords.rg16uint,q.keywords.rg16sint,q.keywords.rg16float,q.keywords.rgba8unorm,q.keywords.rgba8unorm_srgb,q.keywords.rgba8snorm,q.keywords.rgba8uint,q.keywords.rgba8sint,q.keywords.bgra8unorm,q.keywords.bgra8unorm_srgb,q.keywords.rgb10a2unorm,q.keywords.rg11b10float,q.keywords.rg32uint,q.keywords.rg32sint,q.keywords.rg32float,q.keywords.rgba16uint,q.keywords.rgba16sint,q.keywords.rgba16float,q.keywords.rgba32uint,q.keywords.rgba32sint,q.keywords.rgba32float],qe.const_literal=[q.tokens.int_literal,q.tokens.uint_literal,q.tokens.decimal_float_literal,q.tokens.hex_float_literal,q.keywords.true,q.keywords.false],qe.literal_or_ident=[q.tokens.ident,q.tokens.int_literal,q.tokens.uint_literal,q.tokens.decimal_float_literal,q.tokens.hex_float_literal,q.tokens.name],qe.element_count_expression=[q.tokens.int_literal,q.tokens.uint_literal,q.tokens.ident],qe.template_types=[q.keywords.vec2,q.keywords.vec3,q.keywords.vec4,q.keywords.mat2x2,q.keywords.mat2x3,q.keywords.mat2x4,q.keywords.mat3x2,q.keywords.mat3x3,q.keywords.mat3x4,q.keywords.mat4x2,q.keywords.mat4x3,q.keywords.mat4x4,q.keywords.atomic,q.keywords.bitcast,...q.any_texture_type],qe.attribute_name=[q.tokens.ident,q.keywords.block,q.keywords.diagnostic],qe.assignment_operators=[q.tokens.equal,q.tokens.plus_equal,q.tokens.minus_equal,q.tokens.times_equal,q.tokens.division_equal,q.tokens.modulo_equal,q.tokens.and_equal,q.tokens.or_equal,q.tokens.xor_equal,q.tokens.shift_right_equal,q.tokens.shift_left_equal],qe.increment_operators=[q.tokens.plus_plus,q.tokens.minus_minus];class He{constructor(e,t,n,s,r){this.type=e,this.lexeme=t,this.line=n,this.start=s,this.end=r;}toString(){return this.lexeme}isTemplateType(){return  -1!=qe.template_types.indexOf(this.type)}isArrayType(){return this.type==qe.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class ze{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:'';}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw `Invalid syntax at line ${this._line}`;return this._tokens.push(new He(qe.eof,'',this._line,this._current,this._current)),this._tokens}scanToken(){let e=this._advance();if('\\n'==e)return this._line++,true;if(this._isWhitespace(e))return  true;if('/'==e){if('/'==this._peekAhead()){for(;'\\n'!=e;){if(this._isAtEnd())return  true;e=this._advance();}return this._line++,true}if('*'==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return  true;if(e=this._advance(),'\\n'==e)this._line++;else if('*'==e){if('/'==this._peekAhead()&&(this._advance(),t--,0==t))return  true}else '/'==e&&'*'==this._peekAhead()&&(this._advance(),t++);}return  true}}const t=qe.simpleTokens[e];if(t)return this._addToken(t),true;let n=qe.none;const s=this._isAlpha(e),r='_'===e;if(this._isAlphaNumeric(e)){let t=this._peekAhead();for(;this._isAlphaNumeric(t);)e+=this._advance(),t=this._peekAhead();}if(s){const t=qe.keywords[e];if(t)return this._addToken(t),true}if(s||r)return this._addToken(qe.tokens.ident),true;for(;;){let t=this._findType(e);const s=this._peekAhead();if('-'==e&&this._tokens.length>0){if('='==s)return this._current++,e+=s,this._addToken(qe.tokens.minus_equal),true;if('-'==s)return this._current++,e+=s,this._addToken(qe.tokens.minus_minus),true;const n=this._tokens.length-1;if((-1!=qe.literal_or_ident.indexOf(this._tokens[n].type)||this._tokens[n].type==qe.tokens.paren_right)&&'>'!=s)return this._addToken(t),true}if('>'==e&&('>'==s||'='==s)){let e=false,n=this._tokens.length-1;for(let t=0;t<5&&n>=0&&-1===qe.assignment_operators.indexOf(this._tokens[n].type);++t,--n)if(this._tokens[n].type===qe.tokens.less_than){n>0&&this._tokens[n-1].isArrayOrTemplateType()&&(e=true);break}if(e)return this._addToken(t),true}if(t===qe.none){let s=e,r=0;const a=2;for(let e=0;e<a;++e)if(s+=this._peekAhead(e),t=this._findType(s),t!==qe.none){r=e;break}if(t===qe.none)return n!==qe.none&&(this._current--,this._addToken(n),true);e=s,this._current+=r+1;}if(n=t,this._isAtEnd())break;e+=this._advance();}return n!==qe.none&&(this._addToken(n),true)}_findType(e){for(const t in qe.regexTokens){const n=qe.regexTokens[t];if(this._match(e,n.rule))return n}const t=qe.literalTokens[e];return t||qe.none}_match(e,t){const n=t.exec(e);return n&&0==n.index&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return !this._isNumeric(e)&&!this._isWhitespace(e)&&'_'!==e&&'.'!==e&&'('!==e&&')'!==e&&'['!==e&&']'!==e&&'{'!==e&&'}'!==e&&','!==e&&';'!==e&&':'!==e&&'='!==e&&'!'!==e&&'<'!==e&&'>'!==e&&'+'!==e&&'-'!==e&&'*'!==e&&'/'!==e&&'%'!==e&&'&'!==e&&'|'!==e&&'^'!==e&&'~'!==e&&'@'!==e&&'#'!==e&&'?'!==e&&'\\''!==e&&'`'!==e&&'\"'!==e&&'\\\\'!==e&&'\\n'!==e&&'\\r'!==e&&'\\t'!==e&&'\\0'!==e}_isNumeric(e){return e>='0'&&e<='9'}_isAlphaNumeric(e){return this._isAlpha(e)||this._isNumeric(e)||'_'===e}_isWhitespace(e){return ' '==e||'\\t'==e||'\\r'==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?'\\0':this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new He(e,t,this._line,this._start,this._current));}}function Re(e){return Array.isArray(e)||(null==e?undefined:e.buffer)instanceof ArrayBuffer}const Ge=new Float32Array(1),Xe=new Uint32Array(Ge.buffer),je=new Uint32Array(Ge.buffer),Ze=new Int32Array(1),Qe=new Float32Array(Ze.buffer),Ye=new Uint32Array(Ze.buffer),Ke=new Uint32Array(1),Je=new Float32Array(Ke.buffer),et=new Int32Array(Ke.buffer);function tt(e,t,n){if(t===n)return e;if('f32'===t){if('i32'===n||'x32'===n)return Ge[0]=e,Xe[0];if('u32'===n)return Ge[0]=e,je[0]}else if('i32'===t||'x32'===t){if('f32'===n)return Ze[0]=e,Qe[0];if('u32'===n)return Ze[0]=e,Ye[0]}else if('u32'===t){if('f32'===n)return Ke[0]=e,Je[0];if('i32'===n||'x32'===n)return Ke[0]=e,et[0]}return console.error(`Unsupported cast from ${t} to ${n}`),e}class nt{constructor(e){this.resources=null,this.inUse=false,this.info=null,this.node=e;}}class st{constructor(e,t){this.align=e,this.size=t;}}class rt{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new d,this.functions=[],this._types=new Map,this._functions=new Map;}_isStorageTexture(e){return 'texture_storage_1d'==e.name||'texture_storage_2d'==e.name||'texture_storage_2d_array'==e.name||'texture_storage_3d'==e.name}updateAST(e){for(const t of e)t instanceof C&&this._functions.set(t.name,new nt(t));for(const t of e)if(t instanceof ie){const e=this.getTypeInfo(t,null);e instanceof n&&this.structs.push(e);}for(const t of e)if(t instanceof ee)this.aliases.push(this._getAliasInfo(t));else if(t instanceof F){const e=t,n=this._getAttributeNum(e.attributes,'id',0),s=null!=e.type?this.getTypeInfo(e.type,e.attributes):null;this.overrides.push(new h(e.name,s,e.attributes,n));}else if(this._isUniformVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=new o(e.name,r,n,s,e.attributes,i.Uniform,e.access);a.access||(a.access='read'),this.uniforms.push(a);}else if(this._isStorageVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=this._isStorageTexture(r),l=new o(e.name,r,n,s,e.attributes,a?i.StorageTexture:i.Storage,e.access);l.access||(l.access='read'),this.storage.push(l);}else if(this._isTextureVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=this._isStorageTexture(r),l=new o(e.name,r,n,s,e.attributes,a?i.StorageTexture:i.Texture,e.access);l.access||(l.access='read'),a?this.storage.push(l):this.textures.push(l);}else if(this._isSamplerVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),a=new o(e.name,r,n,s,e.attributes,i.Sampler,e.access);this.samplers.push(a);}else;for(const t of e)if(t instanceof C){const e=this._getAttribute(t,'vertex'),n=this._getAttribute(t,'fragment'),s=this._getAttribute(t,'compute'),r=e||n||s,a=new p(t.name,null==r?undefined:r.name,t.attributes);a.attributes=t.attributes,a.startLine=t.startLine,a.endLine=t.endLine,this.functions.push(a),this._functions.get(t.name).info=a,r&&(this._functions.get(t.name).inUse=true,a.inUse=true,a.resources=this._findResources(t,!!r),a.inputs=this._getInputs(t.args),a.outputs=this._getOutputs(t.returnType),this.entry[r.name].push(a)),a.arguments=t.args.map((e=>new f(e.name,this.getTypeInfo(e.type,e.attributes),e.attributes))),a.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null;}for(const e of this._functions.values())e.info&&(e.info.inUse=e.inUse,this._addCalls(e.node,e.info.calls));for(const e of this._functions.values())e.node.search((t=>{var n,s,r;if(t instanceof Ce){if(t.value)if(Re(t.value))for(const s of t.value)for(const t of this.overrides)s===t.name&&(null===(n=e.info)||undefined===n||n.overrides.push(t));else for(const n of this.overrides)t.value===n.name&&(null===(s=e.info)||undefined===s||s.overrides.push(n));}else if(t instanceof me)for(const n of this.overrides)t.name===n.name&&(null===(r=e.info)||undefined===r||r.overrides.push(n));}));for(const e of this.uniforms)this._markStructsInUse(e.type);for(const e of this.storage)this._markStructsInUse(e.type);}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=true,e.members)for(const t of e.members)this._markStructsInUse(t.type);}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else {const t=this._getAlias(e.name);t&&this._markStructsInUse(t);}}_addCalls(e,t){var n;for(const s of e.calls){const e=null===(n=this._functions.get(s.name))||undefined===n?undefined:n.info;e&&t.add(e);}}findResource(e,t,n){if(n){for(const s of this.entry.compute)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n;for(const s of this.entry.vertex)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n;for(const s of this.entry.fragment)if(s.name===n)for(const n of s.resources)if(n.group==e&&n.binding==t)return n}for(const n of this.uniforms)if(n.group==e&&n.binding==t)return n;for(const n of this.storage)if(n.group==e&&n.binding==t)return n;for(const n of this.textures)if(n.group==e&&n.binding==t)return n;for(const n of this.samplers)if(n.group==e&&n.binding==t)return n;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t);}_findResources(e,t){const n=[],s=this,r=[];return e.search((a=>{if(a instanceof A)r.push({});else if(a instanceof E)r.pop();else if(a instanceof B){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e);}else if(a instanceof pe){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type);}else if(a instanceof M){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e);}else if(a instanceof me){const e=a;if(r.length>0){if(r[r.length-1][e.name])return}const t=s._findResource(e.name);t&&n.push(t);}else if(a instanceof de){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=true),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources));}else if(a instanceof G){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=true),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources));}})),[...new Map(n.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),undefined===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1);}for(const n of this.uniforms){t(n.group,n.binding);e[n.group][n.binding]=n;}for(const n of this.storage){t(n.group,n.binding);e[n.group][n.binding]=n;}for(const n of this.textures){t(n.group,n.binding);e[n.group][n.binding]=n;}for(const n of this.samplers){t(n.group,n.binding);e[n.group][n.binding]=n;}return e}_getOutputs(e,t=undefined){if(undefined===t&&(t=[]),e instanceof ie)this._getStructOutputs(e,t);else {const n=this._getOutputInfo(e);null!==n&&t.push(n);}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof ie)this._getStructOutputs(n.type,t);else {const e=this._getAttribute(n,'location')||this._getAttribute(n,'builtin');if(null!==e){const s=this.getTypeInfo(n.type,n.type.attributes),r=this._parseInt(e.value),a=new u(n.name,s,e.name,r);t.push(a);}}}_getOutputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this.getTypeInfo(e,e.attributes),s=this._parseInt(t.value);return new u('',n,t.name,s)}return null}_getInputs(e,t=undefined){ undefined===t&&(t=[]);for(const n of e)if(n.type instanceof ie)this._getStructInputs(n.type,t);else {const e=this._getInputInfo(n);null!==e&&t.push(e);}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof ie)this._getStructInputs(n.type,t);else {const e=this._getInputInfo(n);null!==e&&t.push(e);}}_getInputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this._getAttribute(e,'interpolation'),s=this.getTypeInfo(e.type,e.attributes),r=this._parseInt(t.value),a=new c(e.name,s,t.name,r);return null!==n&&(a.interpolation=this._parseString(n.value)),a}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new l(e.name,this.getTypeInfo(e.type,null))}getTypeInfoByName(e){for(const t of this.structs)if(t.name==e)return t;for(const t of this.aliases)if(t.name==e)return t.type;return null}getTypeInfo(i,o=null){if(this._types.has(i))return this._types.get(i);if(i instanceof le){const e=i.type?this.getTypeInfo(i.type,i.attributes):null,t=new r(i.name,e,o);return this._types.set(i,t),this._updateTypeInfo(t),t}if(i instanceof ce){const e=i,t=e.format?this.getTypeInfo(e.format,e.attributes):null,n=new s(e.name,o);return n.format=t,n.count=e.count,this._types.set(i,n),this._updateTypeInfo(n),n}if(i instanceof ie){const e=i,s=new n(e.name,o);s.startLine=e.startLine,s.endLine=e.endLine;for(const n of e.members){const e=this.getTypeInfo(n.type,n.attributes);s.members.push(new t(n.name,e,n.attributes));}return this._types.set(i,s),this._updateTypeInfo(s),s}if(i instanceof ue){const t=i,n=t.format instanceof re,s=t.format?n?this.getTypeInfo(t.format,null):new e(t.format,null):null,r=new a(t.name,s,o,t.access);return this._types.set(i,r),this._updateTypeInfo(r),r}if(i instanceof oe){const e=i,t=e.format?this.getTypeInfo(e.format,null):null,n=new a(e.name,t,o,e.access);return this._types.set(i,n),this._updateTypeInfo(n),n}const l=new e(i.name,o);return this._types.set(i,l),this._updateTypeInfo(l),l}_updateTypeInfo(e){var t,a,i;const o=this._getTypeSize(e);if(e.size=null!==(t=null==o?undefined:o.size)&&undefined!==t?t:0,e instanceof s&&e.format){const t=this._getTypeSize(e.format);e.stride=Math.max(null!==(a=null==t?undefined:t.size)&&undefined!==a?a:0,null!==(i=null==t?undefined:t.align)&&undefined!==i?i:0),this._updateTypeInfo(e.format);}e instanceof r&&this._updateTypeInfo(e.format),e instanceof n&&this._updateStructInfo(e);}_updateStructInfo(e){var t;let n=0,s=0,r=0,a=0;for(let i=0,o=e.members.length;i<o;++i){const o=e.members[i],l=this._getTypeSize(o);if(!l)continue;null!==(t=this._getAlias(o.type.name))&&undefined!==t||o.type;const c=l.align,u=l.size;n=this._roundUp(c,n+s),s=u,r=n,a=Math.max(a,c),o.offset=n,o.size=u,this._updateTypeInfo(o.type);}e.size=this._roundUp(a,r+s),e.align=a;}_getTypeSize(r){var a,i;if(null==r)return null;const o=this._getAttributeNum(r.attributes,'size',0),l=this._getAttributeNum(r.attributes,'align',0);if(r instanceof t&&(r=r.type),r instanceof e){const e=this._getAlias(r.name);null!==e&&(r=e);}{const e=rt._typeInfo[r.name];if(undefined!==e){const t='f16'===(null===(a=r.format)||undefined===a?undefined:a.name)?2:1;return new st(Math.max(l,e.align/t),Math.max(o,e.size/t))}}{const e=rt._typeInfo[r.name.substring(0,r.name.length-1)];if(e){const t='h'===r.name[r.name.length-1]?2:1;return new st(Math.max(l,e.align/t),Math.max(o,e.size/t))}}if(r instanceof s){let e=r,t=8,n=8;const s=this._getTypeSize(e.format);null!==s&&(n=s.size,t=s.align);return n=e.count*this._getAttributeNum(null!==(i=null==r?undefined:r.attributes)&&undefined!==i?i:null,'stride',this._roundUp(t,n)),o&&(n=o),new st(Math.max(l,t),Math.max(o,n))}if(r instanceof n){let e=0,t=0,n=0,s=0,a=0;for(const t of r.members){const r=this._getTypeSize(t.type);null!==r&&(e=Math.max(r.align,e),n=this._roundUp(r.align,n+s),s=r.size,a=n);}return t=this._roundUp(e,a+s),new st(Math.max(l,e),Math.max(o,t))}return null}_isUniformVar(e){return e instanceof B&&'uniform'==e.storage}_isStorageVar(e){return e instanceof B&&'storage'==e.storage}_isTextureVar(e){return e instanceof B&&null!==e.type&&-1!=rt._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof B&&null!==e.type&&-1!=rt._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const s=n.attributes;for(let e of s)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let s of e)if(s.name==t){let e=null!==s&&null!==s.value?s.value:n;return e instanceof Array&&(e=e[0]),'number'==typeof e?e:'string'==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}rt._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},rt._textureTypes=qe.any_texture_type.map((e=>e.name)),rt._samplerTypes=qe.sampler_type.map((e=>e.name));let at=0;class it{constructor(e,t,n){this.id=at++,this.name=e,this.value=t,this.node=n;}clone(){return new it(this.name,this.value,this.node)}}class ot{constructor(e){this.id=at++,this.name=e.name,this.node=e;}clone(){return new ot(this.node)}}class lt{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName='',this.id=at++,e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName);}getVariable(e){var t;return this.variables.has(e)?null!==(t=this.variables.get(e))&&undefined!==t?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?null!==(t=this.functions.get(e))&&undefined!==t?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new it(e,t,null!=n?n:null));}setVariable(e,t,n){const s=this.getVariable(e);null!==s?s.value=t:this.createVariable(e,t,n);}getVariableValue(e){var t;const n=this.getVariable(e);return null!==(t=null==n?undefined:n.value)&&undefined!==t?t:null}clone(){return new lt(this)}}class ct{evalExpression(e,t){return null}getTypeInfo(e){return null}getVariableName(e,t){return ''}}class ut{constructor(e){this.exec=e;}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let s=true;if(n instanceof Fe)return n.data.forEach((e=>{e||(s=false);})),new Oe(s?1:0,this.getTypeInfo('bool'));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe){const e=n.data.some((e=>e));return new Oe(e?1:0,this.getTypeInfo('bool'))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof Oe))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.evalExpression(n,t);if(s instanceof Ue&&0===s.typeInfo.size){const e=s.typeInfo,t=s.buffer.byteLength/e.stride;return new Oe(t,this.getTypeInfo('u32'))}return new Oe(s.typeInfo.size,this.getTypeInfo('u32'))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.abs(e))),n.typeInfo);const s=n;return new Oe(Math.abs(s.value),s.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.acos(e))),n.typeInfo);const s=n;return new Oe(Math.acos(s.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.acosh(e))),n.typeInfo);const s=n;return new Oe(Math.acosh(s.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.asin(e))),n.typeInfo);const s=n;return new Oe(Math.asin(s.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.asinh(e))),n.typeInfo);const s=n;return new Oe(Math.asinh(s.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.atan(e))),n.typeInfo);const s=n;return new Oe(Math.atan(s.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.atanh(e))),n.typeInfo);const s=n;return new Oe(Math.atanh(s.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe)return new Fe(n.data.map(((e,t)=>Math.atan2(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Oe(Math.atan2(r.value,a.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.ceil(e))),n.typeInfo);const s=n;return new Oe(Math.ceil(s.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Fe&&s instanceof Fe&&r instanceof Fe)return new Fe(n.data.map(((e,t)=>this._clamp(e,s.data[t],r.data[t]))),n.typeInfo);const a=n,i=s,o=r;return new Oe(this._clamp(a.value,i.value,o.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.cos(e))),n.typeInfo);const s=n;return new Oe(Math.cos(s.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.cosh(e))),n.typeInfo);const s=n;return new Oe(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.clz32(e))),n.typeInfo);const s=n;return new Oe(Math.clz32(s.value),n.typeInfo)}_countOneBits(e){let t=0;for(;0!==e;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>this._countOneBits(e))),n.typeInfo);const s=n;return new Oe(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(e){if(0===e)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>this._countTrailingZeros(e))),n.typeInfo);const s=n;return new Oe(this._countTrailingZeros(s.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe){if(3!==n.data.length||3!==s.data.length)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const t=n.data,r=s.data;return new Fe([t[1]*r[2]-r[1]*t[2],t[2]*r[0]-r[2]*t[0],t[0]*r[1]-r[0]*t[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),s=180/Math.PI;if(n instanceof Fe)return new Fe(n.data.map((e=>e*s)),n.typeInfo);return new Oe(n.value*s,this.getTypeInfo('f32'))}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Me){const e=n.data,t=n.typeInfo.getTypeName(),s=t.endsWith('h')?this.getTypeInfo('f16'):this.getTypeInfo('f32');if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t)return new Oe(e[0]*e[3]-e[1]*e[2],s);if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t)return new Oe(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t)console.error(`TODO: Determinant for ${t}`);else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t)console.error(`TODO: Determinant for ${t}`);else {if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t)return new Oe(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);'mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t||'mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t||'mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t?console.error(`TODO: Determinant for ${t}`):'mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t||console.error(`TODO: Determinant for ${t}`);}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe){let e=0;for(let t=0;t<n.data.length;++t)e+=(n.data[t]-s.data[t])*(n.data[t]-s.data[t]);return new Oe(Math.sqrt(e),this.getTypeInfo('f32'))}const r=n,a=s;return new Oe(Math.abs(r.value-a.value),n.typeInfo)}_dot(e,t){let n=0;for(let s=0;s<e.length;++s)n+=t[s]*e[s];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);return n instanceof Fe&&s instanceof Fe?new Oe(this._dot(n.data,s.data),this.getTypeInfo('f32')):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.exp(e))),n.typeInfo);const s=n;return new Oe(Math.exp(s.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.pow(2,e))),n.typeInfo);const s=n;return new Oe(Math.pow(2,s.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if('u32'!==s.typeInfo.name&&'x32'!==s.typeInfo.name)return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const a=s.value,i=r.value;if(n instanceof Fe)return new Fe(n.data.map((e=>e>>a&(1<<i)-1)),n.typeInfo);if('i32'!==n.typeInfo.name&&'x32'!==n.typeInfo.name)return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const o=n.value;return new Oe(o>>a&(1<<i)-1,this.getTypeInfo('i32'))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Fe&&s instanceof Fe&&r instanceof Fe){const e=this._dot(s.data,r.data);return new Fe(e<0?Array.from(n.data):n.data.map((e=>-e)),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return 0===e?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>this._firstLeadingBit(e))),n.typeInfo);const s=n;return new Oe(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(e){return 0===e?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>this._firstTrailingBit(e))),n.typeInfo);const s=n;return new Oe(this._firstTrailingBit(s.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.floor(e))),n.typeInfo);const s=n;return new Oe(Math.floor(s.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Fe&&s instanceof Fe&&r instanceof Fe)return n.data.length!==s.data.length||n.data.length!==r.data.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new Fe(n.data.map(((e,t)=>e*s.data[t]+r.data[t])),n.typeInfo);const a=n,i=s,o=r;return new Oe(a.value*i.value+o.value,a.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>e-Math.floor(e))),n.typeInfo);const s=n;return new Oe(s.value-Math.floor(s.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t),a=this.exec.evalExpression(e.args[3],t);if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const i=r.value,o=(1<<a.value)-1<<i,l=~o;if(n instanceof Fe&&s instanceof Fe)return new Fe(n.data.map(((e,t)=>e&l|s.data[t]<<i&o)),n.typeInfo);const c=n.value,u=s.value;return new Oe(c&l|u<<i&o,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>1/Math.sqrt(e))),n.typeInfo);const s=n;return new Oe(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe){let e=0;return n.data.forEach((t=>{e+=t*t;})),new Oe(Math.sqrt(e),this.getTypeInfo('f32'))}const s=n;return new Oe(Math.abs(s.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.log(e))),n.typeInfo);const s=n;return new Oe(Math.log(s.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.log2(e))),n.typeInfo);const s=n;return new Oe(Math.log2(s.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe)return new Fe(n.data.map(((e,t)=>Math.max(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Oe(Math.max(r.value,a.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe)return new Fe(n.data.map(((e,t)=>Math.min(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Oe(Math.min(r.value,a.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Fe&&s instanceof Fe&&r instanceof Fe)return new Fe(n.data.map(((e,t)=>n.data[t]*(1-r.data[t])+s.data[t]*r.data[t])),n.typeInfo);const a=s,i=r;return new Oe(n.value*(1-i.value)+a.value*i.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe)return new Fe(n.data.map(((e,t)=>e%s.data[t])),n.typeInfo);const r=s;return new Oe(n.value%r.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe){const s=this.Length(e,t).value;return new Fe(n.data.map((e=>e/s)),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe)return new Fe(n.data.map(((e,t)=>Math.pow(e,s.data[t]))),n.typeInfo);const r=n,a=s;return new Oe(Math.pow(r.value,a.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>e)),n.typeInfo);return new Oe(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>e*Math.PI/180)),n.typeInfo);return new Oe(n.value*Math.PI/180,this.getTypeInfo('f32'))}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Fe&&s instanceof Fe){const e=this._dot(n.data,s.data);return new Fe(n.data.map(((t,n)=>t-2*e*s.data[n])),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Fe&&s instanceof Fe&&r instanceof Oe){const e=this._dot(s.data,n.data);return new Fe(n.data.map(((t,n)=>{const a=1-r.value*r.value*(1-e*e);if(a<0)return 0;const i=Math.sqrt(a);return r.value*t-(r.value*e+i)*s.data[n]})),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.round(e))),n.typeInfo);const s=n;return new Oe(Math.round(s.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.min(Math.max(e,0),1))),n.typeInfo);const s=n;return new Oe(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.sign(e))),n.typeInfo);const s=n;return new Oe(Math.sign(s.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.sin(e))),n.typeInfo);const s=n;return new Oe(Math.sin(s.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.sinh(e))),n.typeInfo);const s=n;return new Oe(Math.sinh(s.value),n.typeInfo)}_smoothstep(e,t,n){const s=Math.min(Math.max((n-e)/(t-e),0),1);return s*s*(3-2*s)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(r instanceof Fe&&n instanceof Fe&&s instanceof Fe)return new Fe(r.data.map(((e,t)=>this._smoothstep(n.data[t],s.data[t],e))),r.typeInfo);const a=n,i=s,o=r;return new Oe(this._smoothstep(a.value,i.value,o.value),r.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.sqrt(e))),n.typeInfo);const s=n;return new Oe(Math.sqrt(s.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(s instanceof Fe&&n instanceof Fe)return new Fe(s.data.map(((e,t)=>e<n.data[t]?0:1)),s.typeInfo);const r=n;return new Oe(s.value<r.value?0:1,r.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.tan(e))),n.typeInfo);const s=n;return new Oe(Math.tan(s.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.tanh(e))),n.typeInfo);const s=n;return new Oe(Math.tanh(s.value),n.typeInfo)}_getTransposeType(e){const t=e.getTypeName();return 'mat2x2f'===t||'mat2x2h'===t?e:'mat2x3f'===t?this.getTypeInfo('mat3x2f'):'mat2x3h'===t?this.getTypeInfo('mat3x2h'):'mat2x4f'===t?this.getTypeInfo('mat4x2f'):'mat2x4h'===t?this.getTypeInfo('mat4x2h'):'mat3x2f'===t?this.getTypeInfo('mat2x3f'):'mat3x2h'===t?this.getTypeInfo('mat2x3h'):'mat3x3f'===t||'mat3x3h'===t?e:'mat3x4f'===t?this.getTypeInfo('mat4x3f'):'mat3x4h'===t?this.getTypeInfo('mat4x3h'):'mat4x2f'===t?this.getTypeInfo('mat2x4f'):'mat4x2h'===t?this.getTypeInfo('mat2x4h'):'mat4x3f'===t?this.getTypeInfo('mat3x4f'):'mat4x3h'===t?this.getTypeInfo('mat3x4h'):('mat4x4f'===t||'mat4x4h'===t||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof Me))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const s=this._getTransposeType(n.typeInfo);if('mat2x2'===n.typeInfo.name||'mat2x2f'===n.typeInfo.name||'mat2x2h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[2],e[1],e[3]],s)}if('mat2x3'===n.typeInfo.name||'mat2x3f'===n.typeInfo.name||'mat2x3h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[3],e[6],e[1],e[4],e[7]],s)}if('mat2x4'===n.typeInfo.name||'mat2x4f'===n.typeInfo.name||'mat2x4h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13]],s)}if('mat3x2'===n.typeInfo.name||'mat3x2f'===n.typeInfo.name||'mat3x2h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[3],e[1],e[4],e[2],e[5]],s)}if('mat3x3'===n.typeInfo.name||'mat3x3f'===n.typeInfo.name||'mat3x3h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]],s)}if('mat3x4'===n.typeInfo.name||'mat3x4f'===n.typeInfo.name||'mat3x4h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14]],s)}if('mat4x2'===n.typeInfo.name||'mat4x2f'===n.typeInfo.name||'mat4x2h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[4],e[1],e[5],e[2],e[6]],s)}if('mat4x3'===n.typeInfo.name||'mat4x3f'===n.typeInfo.name||'mat4x3h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]],s)}if('mat4x4'===n.typeInfo.name||'mat4x4f'===n.typeInfo.name||'mat4x4h'===n.typeInfo.name){const e=n.data;return new Me([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Fe)return new Fe(n.data.map((e=>Math.trunc(e))),n.typeInfo);const s=n;return new Oe(Math.trunc(s.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error('TODO: dpdxFine'),null}Dpdy(e,t){return console.error('TODO: dpdy'),null}DpdyCoarse(e,t){return console.error('TODO: dpdyCoarse'),null}DpdyFine(e,t){return console.error('TODO: dpdyFine'),null}Fwidth(e,t){return console.error('TODO: fwidth'),null}FwidthCoarse(e,t){return console.error('TODO: fwidthCoarse'),null}FwidthFine(e,t){return console.error('TODO: fwidthFine'),null}TextureDimensions(e,t){const n=e.args[0],s=e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0;if(n instanceof me){const r=n.name,a=t.getVariableValue(r);if(a instanceof Pe){if(s<0||s>=a.mipLevelCount)return console.error(`Invalid mip level for textureDimensions. Line ${e.line}`),null;const t=a.getMipLevelSize(s),n=a.dimension;return '1d'===n?new Oe(t[0],this.getTypeInfo('u32')):'3d'===n?new Fe(t,this.getTypeInfo('vec3u')):'2d'===n?new Fe(t.slice(0,2),this.getTypeInfo('vec2u')):(console.error(`Invalid texture dimension ${n} not found. Line ${e.line}`),null)}return console.error(`Texture ${r} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error('TODO: textureGather'),null}TextureGatherCompare(e,t){return console.error('TODO: textureGatherCompare'),null}TextureLoad(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0;if(!(s instanceof Fe)||2!==s.data.length)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof me){const a=n.name,i=t.getVariableValue(a);if(i instanceof Pe){const t=Math.floor(s.data[0]),n=Math.floor(s.data[1]);if(t<0||t>=i.width||n<0||n>=i.height)return console.error(`Texture ${a} out of bounds. Line ${e.line}`),null;const o=i.getPixel(t,n,0,r);return null===o?(console.error(`Invalid texture format for textureLoad. Line ${e.line}`),null):new Fe(o,this.getTypeInfo('vec4f'))}return console.error(`Texture ${a} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){const n=e.args[0];if(n instanceof me){const s=n.name,r=t.getVariableValue(s);return r instanceof Pe?new Oe(r.depthOrArrayLayers,this.getTypeInfo('u32')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLayers. Line ${e.line}`),null}TextureNumLevels(e,t){const n=e.args[0];if(n instanceof me){const s=n.name,r=t.getVariableValue(s);return r instanceof Pe?new Oe(r.mipLevelCount,this.getTypeInfo('u32')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLevels. Line ${e.line}`),null}TextureNumSamples(e,t){const n=e.args[0];if(n instanceof me){const s=n.name,r=t.getVariableValue(s);return r instanceof Pe?new Oe(r.sampleCount,this.getTypeInfo('u32')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumSamples. Line ${e.line}`),null}TextureSample(e,t){return console.error('TODO: textureSample'),null}TextureSampleBias(e,t){return console.error('TODO: textureSampleBias'),null}TextureSampleCompare(e,t){return console.error('TODO: textureSampleCompare'),null}TextureSampleCompareLevel(e,t){return console.error('TODO: textureSampleCompareLevel'),null}TextureSampleGrad(e,t){return console.error('TODO: textureSampleGrad'),null}TextureSampleLevel(e,t){return console.error('TODO: textureSampleLevel'),null}TextureSampleBaseClampToEdge(e,t){return console.error('TODO: textureSampleBaseClampToEdge'),null}TextureStore(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=4===e.args.length?this.exec.evalExpression(e.args[2],t).value:0,a=4===e.args.length?this.exec.evalExpression(e.args[3],t).data:this.exec.evalExpression(e.args[2],t).data;if(4!==a.length)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(s instanceof Fe)||2!==s.data.length)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof me){const i=n.name,o=t.getVariableValue(i);if(o instanceof Pe){const t=o.getMipLevelSize(0),n=Math.floor(s.data[0]),l=Math.floor(s.data[1]);return n<0||n>=t[0]||l<0||l>=t[1]?(console.error(`Texture ${i} out of bounds. Line ${e.line}`),null):(o.setPixel(n,l,0,r,Array.from(a)),null)}return console.error(`Texture ${i} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t);return t.getVariable(s).value.getSubData(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t);return o instanceof Oe&&i instanceof Oe&&(o.value=i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value+=i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicSub(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value-=i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicMax(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value=Math.max(o.value,i.value)),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicMin(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value=Math.min(o.value,i.value)),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicAnd(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value=o.value&i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicOr(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value=o.value|i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicXor(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value=o.value^i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicExchange(e,t){let n=e.args[0];n instanceof we&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getSubData(this.exec,n.postfix,t),l=new Oe(o.value,o.typeInfo);return o instanceof Oe&&i instanceof Oe&&(o.value=i.value),r.value instanceof Ue&&r.value.setDataValue(this.exec,o,n.postfix,t),l}AtomicCompareExchangeWeak(e,t){return console.error('TODO: atomicCompareExchangeWeak'),null}Pack4x8snorm(e,t){return console.error('TODO: pack4x8snorm'),null}Pack4x8unorm(e,t){return console.error('TODO: pack4x8unorm'),null}Pack4xI8(e,t){return console.error('TODO: pack4xI8'),null}Pack4xU8(e,t){return console.error('TODO: pack4xU8'),null}Pack4x8Clamp(e,t){return console.error('TODO: pack4x8Clamp'),null}Pack4xU8Clamp(e,t){return console.error('TODO: pack4xU8Clamp'),null}Pack2x16snorm(e,t){return console.error('TODO: pack2x16snorm'),null}Pack2x16unorm(e,t){return console.error('TODO: pack2x16unorm'),null}Pack2x16float(e,t){return console.error('TODO: pack2x16float'),null}Unpack4x8snorm(e,t){return console.error('TODO: unpack4x8snorm'),null}Unpack4x8unorm(e,t){return console.error('TODO: unpack4x8unorm'),null}Unpack4xI8(e,t){return console.error('TODO: unpack4xI8'),null}Unpack4xU8(e,t){return console.error('TODO: unpack4xU8'),null}Unpack2x16snorm(e,t){return console.error('TODO: unpack2x16snorm'),null}Unpack2x16unorm(e,t){return console.error('TODO: unpack2x16unorm'),null}Unpack2x16float(e,t){return console.error('TODO: unpack2x16float'),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error('TODO: subgroupAdd'),null}SubgroupExclusiveAdd(e,t){return console.error('TODO: subgroupExclusiveAdd'),null}SubgroupInclusiveAdd(e,t){return console.error('TODO: subgroupInclusiveAdd'),null}SubgroupAll(e,t){return console.error('TODO: subgroupAll'),null}SubgroupAnd(e,t){return console.error('TODO: subgroupAnd'),null}SubgroupAny(e,t){return console.error('TODO: subgroupAny'),null}SubgroupBallot(e,t){return console.error('TODO: subgroupBallot'),null}SubgroupBroadcast(e,t){return console.error('TODO: subgroupBroadcast'),null}SubgroupBroadcastFirst(e,t){return console.error('TODO: subgroupBroadcastFirst'),null}SubgroupElect(e,t){return console.error('TODO: subgroupElect'),null}SubgroupMax(e,t){return console.error('TODO: subgroupMax'),null}SubgroupMin(e,t){return console.error('TODO: subgroupMin'),null}SubgroupMul(e,t){return console.error('TODO: subgroupMul'),null}SubgroupExclusiveMul(e,t){return console.error('TODO: subgroupExclusiveMul'),null}SubgroupInclusiveMul(e,t){return console.error('TODO: subgroupInclusiveMul'),null}SubgroupOr(e,t){return console.error('TODO: subgroupOr'),null}SubgroupShuffle(e,t){return console.error('TODO: subgroupShuffle'),null}SubgroupShuffleDown(e,t){return console.error('TODO: subgroupShuffleDown'),null}SubgroupShuffleUp(e,t){return console.error('TODO: subgroupShuffleUp'),null}SubgroupShuffleXor(e,t){return console.error('TODO: subgroupShuffleXor'),null}SubgroupXor(e,t){return console.error('TODO: subgroupXor'),null}QuadBroadcast(e,t){return console.error('TODO: quadBroadcast'),null}QuadSwapDiagonal(e,t){return console.error('TODO: quadSwapDiagonal'),null}QuadSwapX(e,t){return console.error('TODO: quadSwapX'),null}QuadSwapY(e,t){return console.error('TODO: quadSwapY'),null}}const ht={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4},ft={mat2x2:[2,2,4],mat2x2f:[2,2,4],mat2x2h:[2,2,4],mat2x3:[2,3,6],mat2x3f:[2,3,6],mat2x3h:[2,3,6],mat2x4:[2,4,8],mat2x4f:[2,4,8],mat2x4h:[2,4,8],mat3x2:[3,2,6],mat3x2f:[3,2,6],mat3x2h:[3,2,6],mat3x3:[3,3,9],mat3x3f:[3,3,9],mat3x3h:[3,3,9],mat3x4:[3,4,12],mat3x4f:[3,4,12],mat3x4h:[3,4,12],mat4x2:[4,2,8],mat4x2f:[4,2,8],mat4x2h:[4,2,8],mat4x3:[4,3,12],mat4x3f:[4,3,12],mat4x3h:[4,3,12],mat4x4:[4,4,16],mat4x4f:[4,4,16],mat4x4h:[4,4,16]};class pt extends ct{constructor(e,t){var n;super(),this.ast=null!=e?e:[],this.reflection=new rt,this.reflection.updateAST(this.ast),this.context=null!==(n=null==t?undefined:t.clone())&&undefined!==n?n:new lt,this.builtins=new ut(this),this.typeInfo={bool:this.getTypeInfo(re.bool),i32:this.getTypeInfo(re.i32),u32:this.getTypeInfo(re.u32),f32:this.getTypeInfo(re.f32),f16:this.getTypeInfo(re.f16),vec2f:this.getTypeInfo(oe.vec2f),vec2u:this.getTypeInfo(oe.vec2u),vec2i:this.getTypeInfo(oe.vec2i),vec2h:this.getTypeInfo(oe.vec2h),vec3f:this.getTypeInfo(oe.vec3f),vec3u:this.getTypeInfo(oe.vec3u),vec3i:this.getTypeInfo(oe.vec3i),vec3h:this.getTypeInfo(oe.vec3h),vec4f:this.getTypeInfo(oe.vec4f),vec4u:this.getTypeInfo(oe.vec4u),vec4i:this.getTypeInfo(oe.vec4i),vec4h:this.getTypeInfo(oe.vec4h),mat2x2f:this.getTypeInfo(oe.mat2x2f),mat2x3f:this.getTypeInfo(oe.mat2x3f),mat2x4f:this.getTypeInfo(oe.mat2x4f),mat3x2f:this.getTypeInfo(oe.mat3x2f),mat3x3f:this.getTypeInfo(oe.mat3x3f),mat3x4f:this.getTypeInfo(oe.mat3x4f),mat4x2f:this.getTypeInfo(oe.mat4x2f),mat4x3f:this.getTypeInfo(oe.mat4x3f),mat4x4f:this.getTypeInfo(oe.mat4x4f)};}getVariableValue(e){var t,n;const r=null!==(n=null===(t=this.context.getVariable(e))||undefined===t?undefined:t.value)&&undefined!==n?n:null;if(null===r)return null;if(r instanceof Oe)return r.value;if(r instanceof Fe)return Array.from(r.data);if(r instanceof Me)return Array.from(r.data);if(r instanceof Ue&&r.typeInfo instanceof s){if('u32'===r.typeInfo.format.name)return Array.from(new Uint32Array(r.buffer,r.offset,r.typeInfo.count));if('i32'===r.typeInfo.format.name)return Array.from(new Int32Array(r.buffer,r.offset,r.typeInfo.count));if('f32'===r.typeInfo.format.name)return Array.from(new Float32Array(r.buffer,r.offset,r.typeInfo.count))}return console.error(`Unsupported return variable type ${r.typeInfo.name}`),null}execute(e){(e=null!=e?e:{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context);}dispatchWorkgroups(e,t,n,s){const r=this.context.clone();(s=null!=s?s:{}).constants&&this._setOverrides(s.constants,r),this._execStatements(this.ast,r);const a=r.getFunction(e);if(!a)return void console.error(`Function ${e} not found`);if('number'==typeof t)t=[t,1,1];else {if(0===t.length)return void console.error('Invalid dispatch count');1===t.length?t=[t[0],1,1]:2===t.length?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]]);}const i=t[0],o=t[1],l=t[2],c=this.getTypeInfo('vec3u');r.setVariable('@num_workgroups',new Fe(t,c));for(const e in n)for(const t in n[e]){const s=n[e][t];r.variables.forEach((n=>{var r;const a=n.node;if(null==a?undefined:a.attributes){let i=null,o=null;for(const e of a.attributes)'binding'===e.name?i=e.value:'group'===e.name&&(o=e.value);if(t==i&&e==o)if(undefined!==s.texture&&undefined!==s.descriptor){const e=new Pe(s.texture,this.getTypeInfo(a.type),s.descriptor,null!==(r=s.texture.view)&&undefined!==r?r:null);n.value=e;}else undefined!==s.uniform?n.value=new Ue(s.uniform,this.getTypeInfo(a.type)):n.value=new Ue(s,this.getTypeInfo(a.type));}}));}for(let e=0;e<l;++e)for(let t=0;t<o;++t)for(let n=0;n<i;++n)r.setVariable('@workgroup_id',new Fe([n,t,e],this.getTypeInfo('vec3u'))),this._dispatchWorkgroup(a,[n,t,e],r);}execStatement(e,t){if(e instanceof Q)return this.evalExpression(e.value,t);if(e instanceof ne){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof Oe))throw new Error('Invalid break-if condition');if(!n.value)return null}return pt._breakObj}if(e instanceof se)return pt._continueObj;if(e instanceof M)this._let(e,t);else if(e instanceof B)this._var(e,t);else if(e instanceof U)this._const(e,t);else if(e instanceof C)this._function(e,t);else {if(e instanceof Z)return this._if(e,t);if(e instanceof j)return this._switch(e,t);if(e instanceof O)return this._for(e,t);if(e instanceof N)return this._while(e,t);if(e instanceof X)return this._loop(e,t);if(e instanceof V){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof R)this._assign(e,t);else if(e instanceof z)this._increment(e,t);else {if(e instanceof ie)return null;if(e instanceof F){const n=e.name;null===t.getVariable(n)&&t.setVariable(n,new Oe(0,this.getTypeInfo('u32')));}else if(e instanceof G)this._call(e,t);else {if(e instanceof J)return null;if(e instanceof ee)return null;console.error('Invalid statement type.',e,`Line ${e.line}`);}}}return null}evalExpression(e,t){return e instanceof ke?this._evalBinaryOp(e,t):e instanceof ge?this._evalLiteral(e,t):e instanceof me?this._evalVariable(e,t):e instanceof de?this._evalCall(e,t):e instanceof pe?this._evalCreate(e,t):e instanceof _e?this._evalConst(e,t):e instanceof xe?this._evalBitcast(e,t):e instanceof we?this._evalUnaryOp(e,t):(console.error('Invalid expression type',e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof re){const t=this.reflection.getTypeInfo(e);if(null!==t)return t}let n=null!==(t=this.typeInfo[e])&&undefined!==t?t:null;return null!==n||(n=this.reflection.getTypeInfoByName(e)),n}_setOverrides(e,t){for(const n in e){const s=e[n],r=this.reflection.getOverrideInfo(n);null!==r?(null===r.type&&(r.type=this.getTypeInfo('u32')),'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new Oe(s,r.type)):'bool'===r.type.name?t.setVariable(n,new Oe(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Fe(s,r.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`);}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof Oe?e.value:parseInt(t.value[0]);}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof Oe?e.value:parseInt(t.value[1]);}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof Oe?e.value:parseInt(t.value[2]);}}const r=this.getTypeInfo('vec3u'),a=this.getTypeInfo('u32');n.setVariable('@workgroup_size',new Fe(s,r));const i=s[0],o=s[1],l=s[2];for(let c=0,u=0;c<l;++c)for(let l=0;l<o;++l)for(let o=0;o<i;++o,++u){const i=[o,l,c],h=[o+t[0]*s[0],l+t[1]*s[1],c+t[2]*s[2]];n.setVariable('@local_invocation_id',new Fe(i,r)),n.setVariable('@global_invocation_id',new Fe(h,r)),n.setVariable('@local_invocation_index',new Oe(u,a)),this._dispatchExec(e,n);}}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);undefined!==r&&t.variables.set(n.name,r);}this._execStatements(e.node.body,t);}getVariableName(e,t){for(;e instanceof we;)e=e.right;return e instanceof me?e.name:(console.error('Unknown variable type',e,'Line',e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const e=t.clone(),s=this._execStatements(n,e);if(s)return s;continue}const e=this.execStatement(n,t);if(e)return e}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(s){for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.setVariable(r.name,a,r);}this._execStatements(s.node.body,n);}else if(e.isBuiltin)this._callBuiltinFunction(e,n);else {this.getTypeInfo(e.name)&&this._evalCreate(e,t);}}_increment(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);s?'++'===e.operator?s.value instanceof Oe?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):'--'===e.operator?s.value instanceof Oe?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`);}_getVariableData(e,t){if(e instanceof me){const n=this.getVariableName(e,t),s=t.getVariable(n);return null===s?(console.error(`Variable ${n} not found. Line ${e.line}`),null):s.value.getSubData(this,e.postfix,t)}if(e instanceof we){if('*'===e.operator){const n=this._getVariableData(e.right,t);return n instanceof Ve?n.reference.getSubData(this,e.postfix,t):(console.error(`Variable ${e.right} is not a pointer. Line ${e.line}`),null)}if('&'===e.operator){const n=this._getVariableData(e.right,t);return new Ve(n)}}return null}_assign(e,t){let n=null,s='<var>',r=null;if(e.variable instanceof we){const n=this._getVariableData(e.variable,t),s=this.evalExpression(e.value,t),r=e.operator;if('='===r){if(n instanceof Oe||n instanceof Fe||n instanceof Me){if(s instanceof Oe||s instanceof Fe||s instanceof Me&&n.data.length===s.data.length)return void n.data.set(s.data);console.error(`Invalid assignment. Line ${e.line}`);}else if(n instanceof Ue&&s instanceof Ue&&n.buffer.byteLength-n.offset>=s.buffer.byteLength-s.offset)return void(n.buffer.byteLength%4==0?new Uint32Array(n.buffer,n.offset,n.typeInfo.size/4).set(new Uint32Array(s.buffer,s.offset,s.typeInfo.size/4)):new Uint8Array(n.buffer,n.offset,n.typeInfo.size).set(new Uint8Array(s.buffer,s.offset,s.typeInfo.size)));return console.error(`Invalid assignment. Line ${e.line}`),null}if('+='===r)return n instanceof Oe||n instanceof Fe||n instanceof Me?s instanceof Oe||s instanceof Fe||s instanceof Me?void n.data.set(s.data.map(((e,t)=>n.data[t]+e))):void console.error(`Invalid assignment . Line ${e.line}`):void console.error(`Invalid assignment. Line ${e.line}`);if('-='===r)return (n instanceof Oe||n instanceof Fe||n instanceof Me)&&(s instanceof Oe||s instanceof Fe||s instanceof Me)?void n.data.set(s.data.map(((e,t)=>n.data[t]-e))):void console.error(`Invalid assignment. Line ${e.line}`)}if(e.variable instanceof we){if('*'===e.variable.operator){s=this.getVariableName(e.variable.right,t);const r=t.getVariable(s);if(!(r&&r.value instanceof Ve))return void console.error(`Variable ${s} is not a pointer. Line ${e.line}`);n=r.value.reference;let a=e.variable.postfix;if(!a){let t=e.variable.right;for(;t instanceof we;){if(t.postfix){a=t.postfix;break}t=t.right;}}a&&(n=n.getSubData(this,a,t));}}else {r=e.variable.postfix,s=this.getVariableName(e.variable,t);const a=t.getVariable(s);if(null===a)return void console.error(`Variable ${s} not found. Line ${e.line}`);n=a.value;}if(n instanceof Ve&&(n=n.reference),null===n)return void console.error(`Variable ${s} not found. Line ${e.line}`);const a=this.evalExpression(e.value,t),i=e.operator;if('='===i)if(n instanceof Ue)n.setDataValue(this,a,r,t);else if(r){if(!(n instanceof Fe||n instanceof Me))return void console.error(`Variable ${s} is not a vector or matrix. Line ${e.line}`);if(r instanceof be){const i=this.evalExpression(r.index,t).value;if(n instanceof Fe){if(!(a instanceof Oe))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[i]=a.value;}else {if(!(n instanceof Me))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const i=this.evalExpression(r.index,t).value;if(i<0)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(a instanceof Fe))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);{const t=n.typeInfo.getTypeName();if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t){if(!(i<2&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1];}else if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t){if(!(i<2&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2];}else if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t){if(!(i<2&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3];}else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t){if(!(i<3&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1];}else if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t){if(!(i<3&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2];}else if('mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t){if(!(i<3&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3];}else if('mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t){if(!(i<4&&2===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1];}else if('mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t){if(!(i<4&&3===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2];}else {if('mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t)return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(!(i<4&&4===a.data.length))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3];}}}}}else if(r instanceof fe){const t=r.value;if(!(n instanceof Fe))return void console.error(`Invalid assignment to ${t}. Variable ${s} is not a vector. Line ${e.line}`);if(a instanceof Oe){if(t.length>1)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);if('x'===t)n.data[0]=a.value;else if('y'===t){if(n.data.length<2)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[1]=a.value;}else if('z'===t){if(n.data.length<3)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[2]=a.value;}else if('w'===t){if(n.data.length<4)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);n.data[3]=a.value;}}else {if(!(a instanceof Fe))return void console.error(`Invalid assignment to ${s}. Line ${e.line}`);if(t.length!==a.data.length)return void console.error(`Invalid assignment to ${t} for variable ${s}. Line ${e.line}`);for(let r=0;r<t.length;++r){const i=t[r];if('x'===i||'r'===i)n.data[0]=a.data[r];else if('y'===i||'g'===i){if(a.data.length<2)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[1]=a.data[r];}else if('z'===i||'b'===i){if(a.data.length<3)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[2]=a.data[r];}else {if('w'!==i&&'a'!==i)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);if(a.data.length<4)return void console.error(`Invalid assignment to ${i} for variable ${s}. Line ${e.line}`);n.data[3]=a.data[r];}}}}}else n instanceof Oe&&a instanceof Oe?n.value=a.value:n instanceof Fe&&a instanceof Fe||n instanceof Me&&a instanceof Me?n.data.set(a.data):console.error(`Invalid assignment to ${s}. Line ${e.line}`);else {const s=n.getSubData(this,r,t);if(s instanceof Fe&&a instanceof Oe){const t=s.data,n=a.value;if('+='===i)for(let e=0;e<t.length;++e)t[e]+=n;else if('-='===i)for(let e=0;e<t.length;++e)t[e]-=n;else if('*='===i)for(let e=0;e<t.length;++e)t[e]*=n;else if('/='===i)for(let e=0;e<t.length;++e)t[e]/=n;else if('%='===i)for(let e=0;e<t.length;++e)t[e]%=n;else if('&='===i)for(let e=0;e<t.length;++e)t[e]&=n;else if('|='===i)for(let e=0;e<t.length;++e)t[e]|=n;else if('^='===i)for(let e=0;e<t.length;++e)t[e]^=n;else if('<<='===i)for(let e=0;e<t.length;++e)t[e]<<=n;else if('>>='===i)for(let e=0;e<t.length;++e)t[e]>>=n;else console.error(`Invalid operator ${i}. Line ${e.line}`);}else if(s instanceof Fe&&a instanceof Fe){const t=s.data,n=a.data;if(t.length!==n.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if('+='===i)for(let e=0;e<t.length;++e)t[e]+=n[e];else if('-='===i)for(let e=0;e<t.length;++e)t[e]-=n[e];else if('*='===i)for(let e=0;e<t.length;++e)t[e]*=n[e];else if('/='===i)for(let e=0;e<t.length;++e)t[e]/=n[e];else if('%='===i)for(let e=0;e<t.length;++e)t[e]%=n[e];else if('&='===i)for(let e=0;e<t.length;++e)t[e]&=n[e];else if('|='===i)for(let e=0;e<t.length;++e)t[e]|=n[e];else if('^='===i)for(let e=0;e<t.length;++e)t[e]^=n[e];else if('<<='===i)for(let e=0;e<t.length;++e)t[e]<<=n[e];else if('>>='===i)for(let e=0;e<t.length;++e)t[e]>>=n[e];else console.error(`Invalid operator ${i}. Line ${e.line}`);}else {if(!(s instanceof Oe&&a instanceof Oe))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);'+='===i?s.value+=a.value:'-='===i?s.value-=a.value:'*='===i?s.value*=a.value:'/='===i?s.value/=a.value:'%='===i?s.value%=a.value:'&='===i?s.value&=a.value:'|='===i?s.value|=a.value:'^='===i?s.value^=a.value:'<<='===i?s.value<<=a.value:'>>='===i?s.value>>=a.value:console.error(`Invalid operator ${i}. Line ${e.line}`);}n instanceof Ue&&n.setDataValue(this,s,r,t);}}_function(e,t){const n=new ot(e);t.functions.set(e.name,n);}_const(e,t){let n=null;null!==e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e);}_let(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof we||(n=n.clone());}else {const s=e.type.name;if('f32'===s||'i32'===s||'u32'===s||'bool'===s||'f16'===s||'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2b'===s||'vec3b'===s||'vec4b'===s||'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s||'array'===s){const s=new pe(e.type,[]);n=this._evalCreate(s,t);}}t.createVariable(e.name,n,e);}_var(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof we||(n=n.clone());}else {if(null===e.type)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);const s=e.type.name;if('f32'===s||'i32'===s||'u32'===s||'bool'===s||'f16'===s||'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2b'===s||'vec3b'===s||'vec4b'===s||'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s||e.type instanceof ce||e.type instanceof ie||e.type instanceof oe){const s=new pe(e.type,[]);n=this._evalCreate(s,t);}}t.createVariable(e.name,n,e);}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof Oe))return console.error(`Invalid if condition. Line ${e.line}`),null;let s=null;for(const r of e.cases)if(r instanceof Se)for(const a of r.selectors){if(a instanceof Te){s=r;continue}const i=this.evalExpression(a,t);if(!(i instanceof Oe))return console.error(`Invalid case selector. Line ${e.line}`),null;if(i.value===n.value)return this._execStatements(r.body,t)}else r instanceof Ae&&(s=r);return s?this._execStatements(s.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof Oe))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const n of e.elseif){const s=this.evalExpression(n.condition,t);if(!(s instanceof Oe))return console.error(`Invalid if condition. Line ${e.line}`),null;if(s.value)return this._execStatements(n.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof Oe?e.value:(console.error('Expected scalar value.',e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===pt._breakObj)break;if(null!==n&&n!==pt._continueObj)return n;this.execStatement(e.increment,t);}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===pt._breakObj)break;if(n===pt._continueObj){if(e.continuing){if(this._execStatements(e.continuing.body,t)===pt._breakObj)break}}else if(null!==n)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===pt._breakObj)break;if(n!==pt._continueObj&&null!==n)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),s=e.type;if(n instanceof Oe){const e=tt(n.value,n.typeInfo.name,s.name);return new Oe(e,this.getTypeInfo(s))}if(n instanceof Fe){const t=n.typeInfo.getTypeName();let r='';if(t.endsWith('f'))r='f32';else if(t.endsWith('i'))r='i32';else if(t.endsWith('u'))r='u32';else if(t.endsWith('b'))r='bool';else {if(!t.endsWith('h'))return console.error(`Unknown vector type ${t}. Line ${e.line}`),null;r='f16';}const a=s.getTypeName();let i='';if(a.endsWith('f'))i='f32';else if(a.endsWith('i'))i='i32';else if(a.endsWith('u'))i='u32';else if(a.endsWith('b'))i='bool';else {if(!a.endsWith('h'))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;i='f16';}const o=function(e,t,n){if(t===n)return e;const s=new Array(e.length);for(let r=0;r<e.length;r++)s[r]=tt(e[r],t,n);return s}(Array.from(n.data),r,i);return new Fe(o,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){return t.getVariableValue(e.name).clone().getSubData(this,e.postfix,t)}_evalCreate(e,t){var r;if(e instanceof pe){if(null===e.type)return Ne.void;switch(e.type.getTypeName()){case 'bool':case 'i32':case 'u32':case 'f32':case 'f16':return this._callConstructorValue(e,t);case 'vec2':case 'vec3':case 'vec4':case 'vec2f':case 'vec3f':case 'vec4f':case 'vec2h':case 'vec3h':case 'vec4h':case 'vec2i':case 'vec3i':case 'vec4i':case 'vec2u':case 'vec3u':case 'vec4u':case 'vec2b':case 'vec3b':case 'vec4b':return this._callConstructorVec(e,t);case 'mat2x2':case 'mat2x2f':case 'mat2x2h':case 'mat2x3':case 'mat2x3f':case 'mat2x3h':case 'mat2x4':case 'mat2x4f':case 'mat2x4h':case 'mat3x2':case 'mat3x2f':case 'mat3x2h':case 'mat3x3':case 'mat3x3f':case 'mat3x3h':case 'mat3x4':case 'mat3x4f':case 'mat3x4h':case 'mat4x2':case 'mat4x2f':case 'mat4x2h':case 'mat4x3':case 'mat4x3f':case 'mat4x3h':case 'mat4x4':case 'mat4x4f':case 'mat4x4h':return this._callConstructorMatrix(e,t)}}const a=e instanceof pe?e.type.name:e.name,i=e instanceof pe?this.getTypeInfo(e.type):this.getTypeInfo(e.name);if(null===i)return console.error(`Unknown type ${a}. Line ${e.line}`),null;if(0===i.size)return null;const o=new Ue(new ArrayBuffer(i.size),i,0);if(i instanceof n){if(e.args)for(let n=0;n<e.args.length;++n){const s=i.members[n],r=e.args[n],a=this.evalExpression(r,t);o.setData(this,a,s.type,s.offset,t);}}else if(i instanceof s){let n=0;if(e.args)for(let s=0;s<e.args.length;++s){const a=e.args[s],l=this.evalExpression(a,t);null===i.format&&('x32'===(null===(r=l.typeInfo)||undefined===r?undefined:r.name)?i.format=this.getTypeInfo('i32'):i.format=l.typeInfo),o.setData(this,l,i.format,n,t),n+=i.stride;}}else console.error(`Unknown type \"${a}\". Line ${e.line}`);return e instanceof pe?o.getSubData(this,e.postfix,t):o}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),s=n.name;if('x32'===s||'u32'===s||'f32'===s||'f16'===s||'i32'===s||'bool'===s){return new Oe(e.scalarValue,n)}return 'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s?this._callConstructorVec(e,t):'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return null===n?n:n.getSubData(this,e.postfix,t)}_maxFormatTypeInfo(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=pt._priority.get(t.name);pt._priority.get(e[n].name)<s&&(t=e[n]);}return 'x32'===t.name?this.getTypeInfo('i32'):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t);if('&'===e.operator)return new Ve(n);if('*'===e.operator)return n instanceof Ve?n.reference.getSubData(this,e.postfix,t):(console.error(`Invalid dereference. Line ${e.line}`),null);const s=n instanceof Oe?n.value:n instanceof Fe?Array.from(n.data):null;switch(e.operator){case '+':{if(Re(s)){const e=s.map(((e,t)=>+e));return new Fe(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Oe(+e,t)}case '-':{if(Re(s)){const e=s.map(((e,t)=>-e));return new Fe(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Oe(-e,t)}case '!':{if(Re(s)){const e=s.map(((e,t)=>e?0:1));return new Fe(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Oe(e?0:1,t)}case '~':{if(Re(s)){const e=s.map(((e,t)=>~e));return new Fe(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new Oe(~e,t)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),s=this.evalExpression(e.right,t),r=n instanceof Oe?n.value:n instanceof Fe||n instanceof Me?Array.from(n.data):null,a=s instanceof Oe?s.value:s instanceof Fe||s instanceof Me?Array.from(s.data):null;switch(e.operator){case '+':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e+s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t+e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e+t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t+i,o)}case '-':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e-s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t-e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e-t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t-i,o)}case '*':{if(Re(r)&&Re(a)){const t=r,i=a;if(n instanceof Me&&s instanceof Me){const r=function(e,t,n,s){if(undefined===ft[t.name]||undefined===ft[s.name])return null;const r=ft[t.name][0],a=ft[t.name][1],i=ft[s.name][0];if(r!==ft[s.name][1])return null;const o=new Array(i*a);for(let t=0;t<a;t++)for(let s=0;s<i;s++){let l=0;for(let i=0;i<r;i++)l+=e[i*a+t]*n[s*r+i];o[t*i+s]=l;}return o}(t,n.typeInfo,i,s.typeInfo);if(null===r)return console.error(`Matrix multiplication failed. Line ${e.line}.`),null;const a=ft[s.typeInfo.name][0],o=ft[n.typeInfo.name][1],l=this.getTypeInfo(`mat${a}x${o}f`);return new Me(r,l)}if(n instanceof Me&&s instanceof Fe){const r=function(e,t,n,s){if(undefined===ft[t.name]||undefined===ht[s.name])return null;const r=ft[t.name][0],a=ft[t.name][1];if(r!==n.length)return null;const i=new Array(a);for(let t=0;t<a;t++){let s=0;for(let i=0;i<r;i++)s+=e[i*a+t]*n[i];i[t]=s;}return i}(t,n.typeInfo,i,s.typeInfo);return null===r?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new Fe(r,s.typeInfo)}if(n instanceof Fe&&s instanceof Me){const r=function(e,t,n,s){if(undefined===ht[t.name]||undefined===ft[s.name])return null;const r=ft[s.name][0],a=ft[s.name][1];if(a!==e.length)return null;const i=[];for(let t=0;t<r;t++){let s=0;for(let i=0;i<a;i++)s+=e[i]*n[i*r+t];i[t]=s;}return i}(t,n.typeInfo,i,s.typeInfo);return null===r?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new Fe(r,n.typeInfo)}{if(t.length!==i.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const s=t.map(((e,t)=>e*i[t]));return new Fe(s,n.typeInfo)}}if(Re(r)){const e=a,t=r.map(((t,n)=>t*e));return n instanceof Me?new Me(t,n.typeInfo):new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e*t));return s instanceof Me?new Me(t,s.typeInfo):new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t*i,o)}case '%':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e%s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t%e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e%t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t%i,o)}case '/':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e/s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t/e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e/t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t/i,o)}case '&':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t&e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e&t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t&i,o)}case '|':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e|s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t|e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e|t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t|i,o)}case '^':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e^s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t^e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e^t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t^i,o)}case '<<':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<<s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t<<e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e<<t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t<<i,o)}case '>>':{if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>>s[t]));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t>>e));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e>>t));return new Fe(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new Oe(t>>i,o)}case '>':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t>e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e>t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r>a?1:0,this.getTypeInfo('bool'));case '<':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t<e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e<t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r<a?1:0,this.getTypeInfo('bool'));case '==':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e===s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t==e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e==t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r===a?1:0,this.getTypeInfo('bool'));case '!=':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e!==s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t!==e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e!==t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r!==a?1:0,this.getTypeInfo('bool'));case '>=':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>=s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t>=e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e>=t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r>=a?1:0,this.getTypeInfo('bool'));case '<=':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<=s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t<=e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e<=t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r<=a?1:0,this.getTypeInfo('bool'));case '&&':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&&s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t&&e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e&&t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r&&a?1:0,this.getTypeInfo('bool'));case '||':if(Re(r)&&Re(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e||s[t]?1:0));return new Fe(i,n.typeInfo)}if(Re(r)){const e=a,t=r.map(((t,n)=>t||e?1:0));return new Fe(t,n.typeInfo)}if(Re(a)){const e=r,t=a.map(((t,n)=>e||t?1:0));return new Fe(t,s.typeInfo)}return new Oe(r||a?1:0,this.getTypeInfo('bool'))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(null!==e.cachedReturnValue)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(!s){if(e.isBuiltin)return this._callBuiltinFunction(e,n);return this.getTypeInfo(e.name)?this._evalCreate(e,t):(console.error(`Unknown function \"${e.name}\". Line ${e.line}`),null)}for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.createVariable(r.name,a,r);}return this._execStatements(s.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case 'all':return this.builtins.All(e,t);case 'any':return this.builtins.Any(e,t);case 'select':return this.builtins.Select(e,t);case 'arrayLength':return this.builtins.ArrayLength(e,t);case 'abs':return this.builtins.Abs(e,t);case 'acos':return this.builtins.Acos(e,t);case 'acosh':return this.builtins.Acosh(e,t);case 'asin':return this.builtins.Asin(e,t);case 'asinh':return this.builtins.Asinh(e,t);case 'atan':return this.builtins.Atan(e,t);case 'atanh':return this.builtins.Atanh(e,t);case 'atan2':return this.builtins.Atan2(e,t);case 'ceil':return this.builtins.Ceil(e,t);case 'clamp':return this.builtins.Clamp(e,t);case 'cos':return this.builtins.Cos(e,t);case 'cosh':return this.builtins.Cosh(e,t);case 'countLeadingZeros':return this.builtins.CountLeadingZeros(e,t);case 'countOneBits':return this.builtins.CountOneBits(e,t);case 'countTrailingZeros':return this.builtins.CountTrailingZeros(e,t);case 'cross':return this.builtins.Cross(e,t);case 'degrees':return this.builtins.Degrees(e,t);case 'determinant':return this.builtins.Determinant(e,t);case 'distance':return this.builtins.Distance(e,t);case 'dot':return this.builtins.Dot(e,t);case 'dot4U8Packed':return this.builtins.Dot4U8Packed(e,t);case 'dot4I8Packed':return this.builtins.Dot4I8Packed(e,t);case 'exp':return this.builtins.Exp(e,t);case 'exp2':return this.builtins.Exp2(e,t);case 'extractBits':return this.builtins.ExtractBits(e,t);case 'faceForward':return this.builtins.FaceForward(e,t);case 'firstLeadingBit':return this.builtins.FirstLeadingBit(e,t);case 'firstTrailingBit':return this.builtins.FirstTrailingBit(e,t);case 'floor':return this.builtins.Floor(e,t);case 'fma':return this.builtins.Fma(e,t);case 'fract':return this.builtins.Fract(e,t);case 'frexp':return this.builtins.Frexp(e,t);case 'insertBits':return this.builtins.InsertBits(e,t);case 'inverseSqrt':return this.builtins.InverseSqrt(e,t);case 'ldexp':return this.builtins.Ldexp(e,t);case 'length':return this.builtins.Length(e,t);case 'log':return this.builtins.Log(e,t);case 'log2':return this.builtins.Log2(e,t);case 'max':return this.builtins.Max(e,t);case 'min':return this.builtins.Min(e,t);case 'mix':return this.builtins.Mix(e,t);case 'modf':return this.builtins.Modf(e,t);case 'normalize':return this.builtins.Normalize(e,t);case 'pow':return this.builtins.Pow(e,t);case 'quantizeToF16':return this.builtins.QuantizeToF16(e,t);case 'radians':return this.builtins.Radians(e,t);case 'reflect':return this.builtins.Reflect(e,t);case 'refract':return this.builtins.Refract(e,t);case 'reverseBits':return this.builtins.ReverseBits(e,t);case 'round':return this.builtins.Round(e,t);case 'saturate':return this.builtins.Saturate(e,t);case 'sign':return this.builtins.Sign(e,t);case 'sin':return this.builtins.Sin(e,t);case 'sinh':return this.builtins.Sinh(e,t);case 'smoothStep':return this.builtins.SmoothStep(e,t);case 'sqrt':return this.builtins.Sqrt(e,t);case 'step':return this.builtins.Step(e,t);case 'tan':return this.builtins.Tan(e,t);case 'tanh':return this.builtins.Tanh(e,t);case 'transpose':return this.builtins.Transpose(e,t);case 'trunc':return this.builtins.Trunc(e,t);case 'dpdx':return this.builtins.Dpdx(e,t);case 'dpdxCoarse':return this.builtins.DpdxCoarse(e,t);case 'dpdxFine':return this.builtins.DpdxFine(e,t);case 'dpdy':return this.builtins.Dpdy(e,t);case 'dpdyCoarse':return this.builtins.DpdyCoarse(e,t);case 'dpdyFine':return this.builtins.DpdyFine(e,t);case 'fwidth':return this.builtins.Fwidth(e,t);case 'fwidthCoarse':return this.builtins.FwidthCoarse(e,t);case 'fwidthFine':return this.builtins.FwidthFine(e,t);case 'textureDimensions':return this.builtins.TextureDimensions(e,t);case 'textureGather':return this.builtins.TextureGather(e,t);case 'textureGatherCompare':return this.builtins.TextureGatherCompare(e,t);case 'textureLoad':return this.builtins.TextureLoad(e,t);case 'textureNumLayers':return this.builtins.TextureNumLayers(e,t);case 'textureNumLevels':return this.builtins.TextureNumLevels(e,t);case 'textureNumSamples':return this.builtins.TextureNumSamples(e,t);case 'textureSample':return this.builtins.TextureSample(e,t);case 'textureSampleBias':return this.builtins.TextureSampleBias(e,t);case 'textureSampleCompare':return this.builtins.TextureSampleCompare(e,t);case 'textureSampleCompareLevel':return this.builtins.TextureSampleCompareLevel(e,t);case 'textureSampleGrad':return this.builtins.TextureSampleGrad(e,t);case 'textureSampleLevel':return this.builtins.TextureSampleLevel(e,t);case 'textureSampleBaseClampToEdge':return this.builtins.TextureSampleBaseClampToEdge(e,t);case 'textureStore':return this.builtins.TextureStore(e,t);case 'atomicLoad':return this.builtins.AtomicLoad(e,t);case 'atomicStore':return this.builtins.AtomicStore(e,t);case 'atomicAdd':return this.builtins.AtomicAdd(e,t);case 'atomicSub':return this.builtins.AtomicSub(e,t);case 'atomicMax':return this.builtins.AtomicMax(e,t);case 'atomicMin':return this.builtins.AtomicMin(e,t);case 'atomicAnd':return this.builtins.AtomicAnd(e,t);case 'atomicOr':return this.builtins.AtomicOr(e,t);case 'atomicXor':return this.builtins.AtomicXor(e,t);case 'atomicExchange':return this.builtins.AtomicExchange(e,t);case 'atomicCompareExchangeWeak':return this.builtins.AtomicCompareExchangeWeak(e,t);case 'pack4x8snorm':return this.builtins.Pack4x8snorm(e,t);case 'pack4x8unorm':return this.builtins.Pack4x8unorm(e,t);case 'pack4xI8':return this.builtins.Pack4xI8(e,t);case 'pack4xU8':return this.builtins.Pack4xU8(e,t);case 'pack4x8Clamp':return this.builtins.Pack4x8Clamp(e,t);case 'pack4xU8Clamp':return this.builtins.Pack4xU8Clamp(e,t);case 'pack2x16snorm':return this.builtins.Pack2x16snorm(e,t);case 'pack2x16unorm':return this.builtins.Pack2x16unorm(e,t);case 'pack2x16float':return this.builtins.Pack2x16float(e,t);case 'unpack4x8snorm':return this.builtins.Unpack4x8snorm(e,t);case 'unpack4x8unorm':return this.builtins.Unpack4x8unorm(e,t);case 'unpack4xI8':return this.builtins.Unpack4xI8(e,t);case 'unpack4xU8':return this.builtins.Unpack4xU8(e,t);case 'unpack2x16snorm':return this.builtins.Unpack2x16snorm(e,t);case 'unpack2x16unorm':return this.builtins.Unpack2x16unorm(e,t);case 'unpack2x16float':return this.builtins.Unpack2x16float(e,t);case 'storageBarrier':return this.builtins.StorageBarrier(e,t);case 'textureBarrier':return this.builtins.TextureBarrier(e,t);case 'workgroupBarrier':return this.builtins.WorkgroupBarrier(e,t);case 'workgroupUniformLoad':return this.builtins.WorkgroupUniformLoad(e,t);case 'subgroupAdd':return this.builtins.SubgroupAdd(e,t);case 'subgroupExclusiveAdd':return this.builtins.SubgroupExclusiveAdd(e,t);case 'subgroupInclusiveAdd':return this.builtins.SubgroupInclusiveAdd(e,t);case 'subgroupAll':return this.builtins.SubgroupAll(e,t);case 'subgroupAnd':return this.builtins.SubgroupAnd(e,t);case 'subgroupAny':return this.builtins.SubgroupAny(e,t);case 'subgroupBallot':return this.builtins.SubgroupBallot(e,t);case 'subgroupBroadcast':return this.builtins.SubgroupBroadcast(e,t);case 'subgroupBroadcastFirst':return this.builtins.SubgroupBroadcastFirst(e,t);case 'subgroupElect':return this.builtins.SubgroupElect(e,t);case 'subgroupMax':return this.builtins.SubgroupMax(e,t);case 'subgroupMin':return this.builtins.SubgroupMin(e,t);case 'subgroupMul':return this.builtins.SubgroupMul(e,t);case 'subgroupExclusiveMul':return this.builtins.SubgroupExclusiveMul(e,t);case 'subgroupInclusiveMul':return this.builtins.SubgroupInclusiveMul(e,t);case 'subgroupOr':return this.builtins.SubgroupOr(e,t);case 'subgroupShuffle':return this.builtins.SubgroupShuffle(e,t);case 'subgroupShuffleDown':return this.builtins.SubgroupShuffleDown(e,t);case 'subgroupShuffleUp':return this.builtins.SubgroupShuffleUp(e,t);case 'subgroupShuffleXor':return this.builtins.SubgroupShuffleXor(e,t);case 'subgroupXor':return this.builtins.SubgroupXor(e,t);case 'quadBroadcast':return this.builtins.QuadBroadcast(e,t);case 'quadSwapDiagonal':return this.builtins.QuadSwapDiagonal(e,t);case 'quadSwapX':return this.builtins.QuadSwapX(e,t);case 'quadSwapY':return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const s=t.clone();for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this.evalExpression(e.args[t],s);s.setVariable(r.name,a,r);}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(e,t){if(!e.args||0===e.args.length)return new Oe(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n.getSubData(this,e.postfix,t).clone()}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),r=ht[s];if(undefined===r)return console.error(`Invalid vec constructor ${s}. Line ${e.line}`),null;const a=[];if(e instanceof ge)if(e.isVector){const t=e.vectorValue;for(const e of t)a.push(e);}else a.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Fe){const t=e.data;for(let e=0;e<t.length;++e){let n=t[e];a.push(n);}}else if(e instanceof Oe){let t=e.value;a.push(t);}}if(e.type instanceof oe&&null===e.type.format&&(e.type.format=oe.f32),0===a.length){const s=new Array(r).fill(0);return new Fe(s,n).getSubData(this,e.postfix,t)}if(1===a.length)for(;a.length<r;)a.push(a[0]);if(a.length<r)return console.error(`Invalid vec constructor. Line ${e.line}`),null;return new Fe(a.length>r?a.slice(0,r):a,n).getSubData(this,e.postfix,t)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),s=e.type.getTypeName(),r=ft[s];if(undefined===r)return console.error(`Invalid matrix constructor ${s}. Line ${e.line}`),null;const i=[];if(e instanceof ge)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e);}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);e instanceof Fe?i.push(...e.data):e instanceof Oe?i.push(e.value):e instanceof Me&&i.push(...e.data);}if(n instanceof a&&null===n.format&&(n.format=this.getTypeInfo('f32')),0===i.length){const s=new Array(r[2]).fill(0);return new Me(s,n).getSubData(this,e.postfix,t)}return i.length!==r[2]?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new Me(i,n).getSubData(this,e.postfix,t)}}pt._breakObj=new De(new e('BREAK',null),null),pt._continueObj=new De(new e('CONTINUE',null),null),pt._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class dt{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map;}}class mt{constructor(){this._tokens=[],this._current=0,this._currentLine=1,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new dt,this._exec=new pt,this._forwardTypeCount=0;}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e);}if(this._deferArrayCountEval.length>0){for(const e of this._deferArrayCountEval){const t=e.arrayType,n=e.countNode;if(n instanceof me){const e=n.name,s=this._context.constants.get(e);if(s)try{const e=s.constEvaluate(this._exec);t.count=e;}catch(e){}}}this._deferArrayCountEval.length=0;}if(this._forwardTypeCount>0)for(const e of t)e.search((e=>{e instanceof Le||e instanceof le?e.type=this._forwardType(e.type):e instanceof ce?e.format=this._forwardType(e.format):e instanceof B||e instanceof M||e instanceof U?e.type=this._forwardType(e.type):e instanceof C?e.returnType=this._forwardType(e.returnType):e instanceof Ee&&(e.type=this._forwardType(e.type));}));return t}_forwardType(e){if(e instanceof ae){const t=this._getType(e.name);if(t)return t}else e instanceof le?e.type=this._forwardType(e.type):e instanceof ce&&(e.format=this._forwardType(e.format));return e}_initialize(e){if(e)if('string'==typeof e){const t=new ze(e);this._tokens=t.scanTokens();}else this._tokens=e;else this._tokens=[];this._current=0;}_updateNode(e,t){return e.line=null!=t?t:this._currentLine,e}_error(e,t){return {token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==qe.eof}_match(e){if(e instanceof We)return !!this._check(e)&&(this._advance(),true);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),true}return  false}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return  false;const t=this._peek();if(e instanceof Array){const n=t.type;let s=false;for(const t of e){if(n===t)return  true;t===qe.tokens.name&&(s=true);}if(s){const e=qe.tokens.name.rule.exec(t.lexeme);if(e&&0==e.index&&e[0]==t.lexeme)return  true}return  false}if(t.type===e)return  true;if(e===qe.tokens.name){const e=qe.tokens.name.rule.exec(t.lexeme);return e&&0==e.index&&e[0]==t.lexeme}return  false}_advance(){var e,t;return this._currentLine=null!==(t=null===(e=this._peek())||undefined===e?undefined:e.line)&&undefined!==t?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(qe.tokens.semicolon)&&!this._isAtEnd(););if(this._match(qe.keywords.alias)){const e=this._type_alias();return this._consume(qe.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(qe.keywords.diagnostic)){const e=this._diagnostic();return this._consume(qe.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(qe.keywords.requires)){const e=this._requires_directive();return this._consume(qe.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(qe.keywords.enable)){const e=this._enable_directive();return this._consume(qe.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}const e=this._attribute();if(this._check(qe.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(qe.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(qe.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(qe.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(qe.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(qe.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(qe.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(qe.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(qe.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(qe.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(qe.keywords.fn))return null;const e=this._currentLine,t=this._consume(qe.tokens.ident,'Expected function name.').toString();this._consume(qe.tokens.paren_left,'Expected \\'(\\' for function arguments.');const n=[];if(!this._check(qe.tokens.paren_right))do{if(this._check(qe.tokens.paren_right))break;const e=this._attribute(),t=this._consume(qe.tokens.name,'Expected argument name.').toString();this._consume(qe.tokens.colon,'Expected \\':\\' for argument type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s,n.push(this._updateNode(new Ee(t,r,e))));}while(this._match(qe.tokens.comma));this._consume(qe.tokens.paren_right,'Expected \\')\\' after function arguments.');let s=null;if(this._match(qe.tokens.arrow)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e);}const r=this._compound_statement(),a=this._currentLine;return this._updateNode(new C(t,n,s,r,e,a),e)}_compound_statement(){const e=[];for(this._consume(qe.tokens.brace_left,'Expected \\'{\\' for block.');!this._check(qe.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t);}return this._consume(qe.tokens.brace_right,'Expected \\'}\\' for block.'),e}_statement(){for(;this._match(qe.tokens.semicolon)&&!this._isAtEnd(););if(this._check(qe.tokens.attr)&&this._attribute(),this._check(qe.keywords.if))return this._if_statement();if(this._check(qe.keywords.switch))return this._switch_statement();if(this._check(qe.keywords.loop))return this._loop_statement();if(this._check(qe.keywords.for))return this._for_statement();if(this._check(qe.keywords.while))return this._while_statement();if(this._check(qe.keywords.continuing))return this._continuing_statement();if(this._check(qe.keywords.static_assert))return this._static_assert_statement();if(this._check(qe.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(qe.keywords.return))e=this._return_statement();else if(this._check([qe.keywords.var,qe.keywords.let,qe.keywords.const]))e=this._variable_statement();else if(this._match(qe.keywords.discard))e=this._updateNode(new te);else if(this._match(qe.keywords.break)){const t=this._updateNode(new ne);if(this._currentLoop.length>0){const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id;}e=t,this._check(qe.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression());}else if(this._match(qe.keywords.continue)){const t=this._updateNode(new se);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id;}e=t;}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return null!=e&&this._consume(qe.tokens.semicolon,'Expected \\';\\' after statement.'),e}_static_assert_statement(){if(!this._match(qe.keywords.static_assert))return null;const e=this._currentLine,t=this._optional_paren_expression();return this._updateNode(new D(t),e)}_while_statement(){if(!this._match(qe.keywords.while))return null;const e=this._updateNode(new N(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(qe.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){const e=this._currentLoop.length>0?this._currentLoop[this._currentLoop.length-1].id:-1;if(!this._match(qe.keywords.continuing))return null;const t=this._currentLine,n=this._compound_statement();return this._updateNode(new V(n,e),t)}_for_statement(){if(!this._match(qe.keywords.for))return null;this._consume(qe.tokens.paren_left,'Expected \\'(\\'.');const e=this._updateNode(new O(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(qe.tokens.semicolon)?null:this._for_init(),this._consume(qe.tokens.semicolon,'Expected \\';\\'.'),e.condition=this._check(qe.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(qe.tokens.semicolon,'Expected \\';\\'.'),e.increment=this._check(qe.tokens.paren_right)?null:this._for_increment(),this._consume(qe.tokens.paren_right,'Expected \\')\\'.'),this._check(qe.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(qe.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),'Variable declaration expected.');let t=null;return this._match(qe.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new B(e.name,e.type,e.storage,e.access,t),e.line)}if(this._match(qe.keywords.let)){const e=this._currentLine,t=this._consume(qe.tokens.name,'Expected name for let.').toString();let n=null;if(this._match(qe.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e);}this._consume(qe.tokens.equal,'Expected \\'=\\' for let.');const s=this._short_circuit_or_expression();return this._updateNode(new M(t,n,null,null,s),e)}if(this._match(qe.keywords.const)){const e=this._currentLine,t=this._consume(qe.tokens.name,'Expected name for const.').toString();let n=null;if(this._match(qe.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e);}this._consume(qe.tokens.equal,'Expected \\'=\\' for const.');const s=this._short_circuit_or_expression();return null===n&&s instanceof ge&&(n=s.type),this._updateNode(new U(t,n,null,null,s),e)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(qe.increment_operators))return this._current=e,null;const n=this._consume(qe.increment_operators,'Expected increment operator');return this._updateNode(new z(n.type===qe.tokens.plus_plus?P.increment:P.decrement,t))}_assignment_statement(){let e=null;const t=this._currentLine;if(this._check(qe.tokens.brace_right))return null;let n=this._match(qe.tokens.underscore);if(n||(e=this._unary_expression()),!n&&null==e)return null;const s=this._consume(qe.assignment_operators,'Expected assignment operator.'),r=this._short_circuit_or_expression();return this._updateNode(new R(W.parse(s.lexeme),e,r),t)}_func_call_statement(){if(!this._check(qe.tokens.ident))return null;const e=this._currentLine,t=this._current,n=this._consume(qe.tokens.ident,'Expected function name.'),s=this._argument_expression_list();return null===s?(this._current=t,null):this._updateNode(new G(n.lexeme,s),e)}_loop_statement(){if(!this._match(qe.keywords.loop))return null;this._check(qe.tokens.attr)&&this._attribute(),this._consume(qe.tokens.brace_left,'Expected \\'{\\' for loop.');const e=this._updateNode(new X([],null));this._currentLoop.push(e);let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof V){e.continuing=t;break}t=this._statement();}return this._currentLoop.pop(),this._consume(qe.tokens.brace_right,'Expected \\'}\\' for loop.'),e}_switch_statement(){if(!this._match(qe.keywords.switch))return null;const e=this._updateNode(new j(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(qe.tokens.attr)&&this._attribute(),this._consume(qe.tokens.brace_left,'Expected \\'{\\' for switch.'),e.cases=this._switch_body(),null==e.cases||0==e.cases.length)throw this._error(this._previous(),'Expected \\'case\\' or \\'default\\'.');return this._consume(qe.tokens.brace_right,'Expected \\'}\\' for switch.'),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=false;for(;this._check([qe.keywords.default,qe.keywords.case]);){if(this._match(qe.keywords.case)){const n=this._case_selectors();for(const e of n)if(e instanceof Te){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');t=true;break}this._match(qe.tokens.colon),this._check(qe.tokens.attr)&&this._attribute(),this._consume(qe.tokens.brace_left,'Exected \\'{\\' for switch case.');const s=this._case_body();this._consume(qe.tokens.brace_right,'Exected \\'}\\' for switch case.'),e.push(this._updateNode(new Se(n,s)));}if(this._match(qe.keywords.default)){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');this._match(qe.tokens.colon),this._check(qe.tokens.attr)&&this._attribute(),this._consume(qe.tokens.brace_left,'Exected \\'{\\' for switch default.');const n=this._case_body();this._consume(qe.tokens.brace_right,'Exected \\'}\\' for switch default.'),e.push(this._updateNode(new Ae(n)));}}return e}_case_selectors(){const e=[];for(this._match(qe.keywords.default)?e.push(this._updateNode(new Te)):e.push(this._shift_expression());this._match(qe.tokens.comma);)this._match(qe.keywords.default)?e.push(this._updateNode(new Te)):e.push(this._shift_expression());return e}_case_body(){if(this._match(qe.keywords.fallthrough))return this._consume(qe.tokens.semicolon,'Expected \\';\\''),[];let e=this._statement();if(null==e)return [];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(qe.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(qe.tokens.attr)&&this._attribute();const n=this._compound_statement();let s=[];this._match_elseif()&&(this._check(qe.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let r=null;return this._match(qe.keywords.else)&&(this._check(qe.tokens.attr)&&this._attribute(),r=this._compound_statement()),this._updateNode(new Z(t,n,s,r),e)}_match_elseif(){return this._tokens[this._current].type===qe.keywords.else&&this._tokens[this._current+1].type===qe.keywords.if&&(this._advance(),this._advance(),true)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new $e(t,n))),this._match_elseif()&&(this._check(qe.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(qe.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new Q(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(qe.tokens.or_or);)e=this._updateNode(new ke(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(qe.tokens.and_and);)e=this._updateNode(new ke(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(qe.tokens.or);)e=this._updateNode(new ke(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(qe.tokens.xor);)e=this._updateNode(new ke(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(qe.tokens.and);)e=this._updateNode(new ke(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([qe.tokens.equal_equal,qe.tokens.not_equal])?this._updateNode(new ke(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([qe.tokens.less_than,qe.tokens.greater_than,qe.tokens.less_than_equal,qe.tokens.greater_than_equal]);)e=this._updateNode(new ke(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([qe.tokens.shift_left,qe.tokens.shift_right]);)e=this._updateNode(new ke(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([qe.tokens.plus,qe.tokens.minus]);)e=this._updateNode(new ke(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([qe.tokens.star,qe.tokens.forward_slash,qe.tokens.modulo]);)e=this._updateNode(new ke(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([qe.tokens.minus,qe.tokens.bang,qe.tokens.tilde,qe.tokens.star,qe.tokens.and])?this._updateNode(new we(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(qe.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(qe.tokens.bracket_right,'Expected \\']\\'.');const t=this._updateNode(new be(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(qe.tokens.period)){const e=this._consume(qe.tokens.name,'Expected member name.'),t=this._postfix_expression(),n=this._updateNode(new fe(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){if(this._context.aliases.has(e)){return this._context.aliases.get(e).type}if(this._context.structs.has(e)){return this._context.structs.get(e)}return null}_getType(e){const t=this._getStruct(e);if(null!==t)return t;switch(e){case 'void':return re.void;case 'bool':return re.bool;case 'i32':return re.i32;case 'u32':return re.u32;case 'f32':return re.f32;case 'f16':return re.f16;case 'vec2f':return oe.vec2f;case 'vec3f':return oe.vec3f;case 'vec4f':return oe.vec4f;case 'vec2i':return oe.vec2i;case 'vec3i':return oe.vec3i;case 'vec4i':return oe.vec4i;case 'vec2u':return oe.vec2u;case 'vec3u':return oe.vec3u;case 'vec4u':return oe.vec4u;case 'vec2h':return oe.vec2h;case 'vec3h':return oe.vec3h;case 'vec4h':return oe.vec4h;case 'mat2x2f':return oe.mat2x2f;case 'mat2x3f':return oe.mat2x3f;case 'mat2x4f':return oe.mat2x4f;case 'mat3x2f':return oe.mat3x2f;case 'mat3x3f':return oe.mat3x3f;case 'mat3x4f':return oe.mat3x4f;case 'mat4x2f':return oe.mat4x2f;case 'mat4x3f':return oe.mat4x3f;case 'mat4x4f':return oe.mat4x4f;case 'mat2x2h':return oe.mat2x2h;case 'mat2x3h':return oe.mat2x3h;case 'mat2x4h':return oe.mat2x4h;case 'mat3x2h':return oe.mat3x2h;case 'mat3x3h':return oe.mat3x3h;case 'mat3x4h':return oe.mat3x4h;case 'mat4x2h':return oe.mat4x2h;case 'mat4x3h':return oe.mat4x3h;case 'mat4x4h':return oe.mat4x4h;case 'mat2x2i':return oe.mat2x2i;case 'mat2x3i':return oe.mat2x3i;case 'mat2x4i':return oe.mat2x4i;case 'mat3x2i':return oe.mat3x2i;case 'mat3x3i':return oe.mat3x3i;case 'mat3x4i':return oe.mat3x4i;case 'mat4x2i':return oe.mat4x2i;case 'mat4x3i':return oe.mat4x3i;case 'mat4x4i':return oe.mat4x4i;case 'mat2x2u':return oe.mat2x2u;case 'mat2x3u':return oe.mat2x3u;case 'mat2x4u':return oe.mat2x4u;case 'mat3x2u':return oe.mat3x2u;case 'mat3x3u':return oe.mat3x3u;case 'mat3x4u':return oe.mat3x4u;case 'mat4x2u':return oe.mat4x2u;case 'mat4x3u':return oe.mat4x3u;case 'mat4x4u':return oe.mat4x4u}return null}_validateTypeRange(e,t){if('i32'===t.name){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if('u32'===t.name&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(qe.tokens.ident)){const e=this._previous().toString();if(this._check(qe.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getType(e);return null!==n?this._updateNode(new pe(n,t)):this._updateNode(new de(e,t))}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return this._updateNode(new _e(e,t.value))}return this._updateNode(new me(e))}if(this._match(qe.tokens.int_literal)){const e=this._previous().toString();let t=e.endsWith('i')||e.endsWith('i')?re.i32:e.endsWith('u')||e.endsWith('U')?re.u32:re.x32;const n=parseInt(e);return this._validateTypeRange(n,t),this._updateNode(new ge(new Oe(n,this._exec.getTypeInfo(t)),t))}if(this._match(qe.tokens.uint_literal)){const e=parseInt(this._previous().toString());return this._validateTypeRange(e,re.u32),this._updateNode(new ge(new Oe(e,this._exec.getTypeInfo(re.u32)),re.u32))}if(this._match([qe.tokens.decimal_float_literal,qe.tokens.hex_float_literal])){let e=this._previous().toString(),t=e.endsWith('h');t&&(e=e.substring(0,e.length-1));const n=parseFloat(e);this._validateTypeRange(n,t?re.f16:re.f32);const s=t?re.f16:re.f32;return this._updateNode(new ge(new Oe(n,this._exec.getTypeInfo(s)),s))}if(this._match([qe.keywords.true,qe.keywords.false])){let e=this._previous().toString()===qe.keywords.true.rule;return this._updateNode(new ge(new Oe(e?1:0,this._exec.getTypeInfo(re.bool)),re.bool))}if(this._check(qe.tokens.paren_left))return this._paren_expression();if(this._match(qe.keywords.bitcast)){this._consume(qe.tokens.less_than,'Expected \\'<\\'.');const e=this._type_decl();this._consume(qe.tokens.greater_than,'Expected \\'>\\'.');const t=this._paren_expression();return this._updateNode(new xe(e,t))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new pe(e,t))}_argument_expression_list(){if(!this._match(qe.tokens.paren_left))return null;const e=[];do{if(this._check(qe.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t);}while(this._match(qe.tokens.comma));return this._consume(qe.tokens.paren_right,'Expected \\')\\' for agument list'),e}_optional_paren_expression(){this._match(qe.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(qe.tokens.paren_right),e}_paren_expression(){this._consume(qe.tokens.paren_left,'Expected \\'(\\'.');const e=this._short_circuit_or_expression();return this._consume(qe.tokens.paren_right,'Expected \\')\\'.'),e}_struct_decl(){if(!this._match(qe.keywords.struct))return null;const e=this._currentLine,t=this._consume(qe.tokens.ident,'Expected name for struct.').toString();this._consume(qe.tokens.brace_left,'Expected \\'{\\' for struct body.');const n=[];for(;!this._check(qe.tokens.brace_right);){const e=this._attribute(),t=this._consume(qe.tokens.name,'Expected variable name.').toString();this._consume(qe.tokens.colon,'Expected \\':\\' for struct member type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s),this._check(qe.tokens.brace_right)?this._match(qe.tokens.comma):this._consume(qe.tokens.comma,'Expected \\',\\' for struct member.'),n.push(this._updateNode(new Le(t,r,e)));}this._consume(qe.tokens.brace_right,'Expected \\'}\\' after struct body.');const s=this._currentLine,r=this._updateNode(new ie(t,n,e,s),e);return this._context.structs.set(t,r),r}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(qe.tokens.equal)){const t=this._const_expression();e.value=t;}if(null!==e.type&&e.value instanceof ge){if('x32'!==e.value.type.name){if(e.type.getTypeName()!==e.value.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`)}e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type;}else null===e.type&&e.value instanceof ge&&(e.type='x32'===e.value.type.name?re.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(qe.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(qe.keywords.const))return null;const t=this._consume(qe.tokens.name,'Expected variable name'),n=this._currentLine;let s=null;if(this._match(qe.tokens.colon)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e);}let r=null;this._consume(qe.tokens.equal,'const declarations require an assignment');const i=this._short_circuit_or_expression();try{let e=[re.f32],n=i.constEvaluate(this._exec,e);n instanceof Oe&&this._validateTypeRange(n.value,e[0]),e[0]instanceof oe&&null===e[0].format&&n.typeInfo instanceof a&&null!==n.typeInfo.format&&('f16'===n.typeInfo.format.name?e[0].format=re.f16:'f32'===n.typeInfo.format.name?e[0].format=re.f32:'i32'===n.typeInfo.format.name?e[0].format=re.i32:'u32'===n.typeInfo.format.name?e[0].format=re.u32:'bool'===n.typeInfo.format.name?e[0].format=re.bool:console.error(`TODO: impelement template format type ${n.typeInfo.format.name}`)),r=this._updateNode(new ge(n,e[0])),this._exec.context.setVariable(t.toString(),n);}catch(e){r=i;}if(null!==s&&r instanceof ge){if('x32'!==r.type.name){if(s.getTypeName()!==r.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${r.type.name} to ${s.name}. Line:${this._currentLine}`)}r.type=s,r.isScalar&&this._validateTypeRange(r.scalarValue,r.type);}else null===s&&r instanceof ge&&(s=null!==(e=null==r?undefined:r.type)&&undefined!==e?e:re.f32,s===re.x32&&(s=re.i32));const o=this._updateNode(new U(t.toString(),s,'','',r),n);return this._context.constants.set(o.name,o),o}_global_let_decl(){if(!this._match(qe.keywords.let))return null;const e=this._currentLine,t=this._consume(qe.tokens.name,'Expected variable name');let n=null;if(this._match(qe.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e);}let s=null;if(this._match(qe.tokens.equal)&&(s=this._const_expression()),null!==n&&s instanceof ge){if('x32'!==s.type.name){if(n.getTypeName()!==s.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`)}s.type=n;}else null===n&&s instanceof ge&&(n='x32'===s.type.name?re.i32:s.type);return s instanceof ge&&s.isScalar&&this._validateTypeRange(s.scalarValue,n),this._updateNode(new M(t.toString(),n,'','',s),e)}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(qe.keywords.var))return null;const e=this._currentLine;let t='',n='';this._match(qe.tokens.less_than)&&(t=this._consume(qe.storage_class,'Expected storage_class.').toString(),this._match(qe.tokens.comma)&&(n=this._consume(qe.access_mode,'Expected access_mode.').toString()),this._consume(qe.tokens.greater_than,'Expected \\'>\\'.'));const s=this._consume(qe.tokens.name,'Expected variable name');let r=null;if(this._match(qe.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e);}return this._updateNode(new B(s.toString(),r,t,n,null),e)}_override_decl(){if(!this._match(qe.keywords.override))return null;const e=this._consume(qe.tokens.name,'Expected variable name');let t=null;if(this._match(qe.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e);}return this._updateNode(new F(e.toString(),t,null))}_diagnostic(){this._consume(qe.tokens.paren_left,'Expected \\'(\\'');const e=this._consume(qe.tokens.ident,'Expected severity control name.');this._consume(qe.tokens.comma,'Expected \\',\\'');let t=this._consume(qe.tokens.ident,'Expected diagnostic rule name.').toString();if(this._match(qe.tokens.period)){t+=`.${this._consume(qe.tokens.ident,'Expected diagnostic message.').toString()}`;}return this._consume(qe.tokens.paren_right,'Expected \\')\\''),this._updateNode(new J(e.toString(),t))}_enable_directive(){const e=this._consume(qe.tokens.ident,'identity expected.');return this._updateNode(new Y(e.toString()))}_requires_directive(){const e=[this._consume(qe.tokens.ident,'identity expected.').toString()];for(;this._match(qe.tokens.comma);){const t=this._consume(qe.tokens.ident,'identity expected.');e.push(t.toString());}return this._updateNode(new K(e))}_type_alias(){const e=this._consume(qe.tokens.ident,'identity expected.');this._consume(qe.tokens.equal,'Expected \\'=\\' for type alias.');let t=this._type_decl();if(null===t)throw this._error(this._peek(),'Expected Type for Alias.');this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new ee(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([qe.tokens.ident,...qe.texel_format,qe.keywords.bool,qe.keywords.f32,qe.keywords.i32,qe.keywords.u32])){const e=this._advance().toString();if(this._context.structs.has(e))return this._context.structs.get(e);if(this._context.aliases.has(e))return this._context.aliases.get(e).type;if(!this._getType(e)){const t=this._updateNode(new ae(e));return this._forwardTypeCount++,t}return this._updateNode(new re(e))}let e=this._texture_sampler_types();if(e)return e;if(this._check(qe.template_types)){let e=this._advance().toString(),t=null,n=null;this._match(qe.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(qe.tokens.comma)&&(n=this._consume(qe.access_mode,'Expected access_mode for pointer').toString()),this._consume(qe.tokens.greater_than,'Expected \\'>\\' for type.'));return this._updateNode(new oe(e,t,n))}if(this._match(qe.keywords.ptr)){let e=this._previous().toString();this._consume(qe.tokens.less_than,'Expected \\'<\\' for pointer.');const t=this._consume(qe.storage_class,'Expected storage_class for pointer');this._consume(qe.tokens.comma,'Expected \\',\\' for pointer.');const n=this._type_decl();let s=null;this._match(qe.tokens.comma)&&(s=this._consume(qe.access_mode,'Expected access_mode for pointer').toString()),this._consume(qe.tokens.greater_than,'Expected \\'>\\' for pointer.');return this._updateNode(new le(e,t.toString(),n,s))}const t=this._attribute();if(this._match(qe.keywords.array)){let e=null,n=-1;const s=this._previous();let r=null;if(this._match(qe.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t='';if(this._match(qe.tokens.comma)){r=this._shift_expression();try{t=r.constEvaluate(this._exec).toString(),r=null;}catch(e){t='1';}}this._consume(qe.tokens.greater_than,'Expected \\'>\\' for array.'),n=t?parseInt(t):0;}const a=this._updateNode(new ce(s.toString(),t,e,n));return r&&this._deferArrayCountEval.push({arrayType:a,countNode:r}),a}return null}_texture_sampler_types(){if(this._match(qe.sampler_type))return this._updateNode(new ue(this._previous().toString(),null,null));if(this._match(qe.depth_texture_type))return this._updateNode(new ue(this._previous().toString(),null,null));if(this._match(qe.sampled_texture_type)||this._match(qe.multisampled_texture_type)){const e=this._previous();this._consume(qe.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._type_decl();return this._consume(qe.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new ue(e.toString(),t,null))}if(this._match(qe.storage_texture_type)){const e=this._previous();this._consume(qe.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._consume(qe.texel_format,'Invalid texel format.').toString();this._consume(qe.tokens.comma,'Expected \\',\\' after texel format.');const n=this._consume(qe.access_mode,'Expected access mode for storage texture type.').toString();return this._consume(qe.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new ue(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(qe.tokens.attr);){const t=this._consume(qe.attribute_name,'Expected attribute name'),n=this._updateNode(new Ce(t.toString(),null));if(this._match(qe.tokens.paren_left)){if(n.value=this._consume(qe.literal_or_ident,'Expected attribute value').toString(),this._check(qe.tokens.comma)){this._advance();do{const e=this._consume(qe.literal_or_ident,'Expected attribute value').toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e);}while(this._match(qe.tokens.comma))}this._consume(qe.tokens.paren_right,'Expected \\')\\'');}e.push(n);}return 0==e.length?null:e}}class _t extends rt{constructor(e){super(),e&&this.update(e);}update(e){const t=(new mt).parse(e);this.updateAST(t);}}\n\nfunction getEntryPointForStage(defs, stage, stageFlags) {\n    const { entryPoint: entryPointName } = stage;\n    if (entryPointName) {\n        const ep = defs.entryPoints[entryPointName];\n        return (ep && ep.stage === stageFlags) ? ep : undefined;\n    }\n    return Object.values(defs.entryPoints).filter(ep => ep.stage === stageFlags)[0];\n}\nfunction getStageResources(defs, stage, stageFlags) {\n    if (!stage) {\n        return [];\n    }\n    const entryPoint = getEntryPointForStage(defs, stage, stageFlags);\n    return entryPoint?.resources || [];\n}\nconst byBinding = (a, b) => Math.sign(a.binding - b.binding);\n/**\n * Gets GPUBindGroupLayoutDescriptors for the given pipeline.\n *\n * Important: Assumes you pipeline is valid (it doesn't check for errors).\n *\n * Note: In WebGPU some layouts must be specified manually. For example an unfiltered-float\n *    sampler can not be derived since it is unknown at compile time pipeline creation time\n *    which texture you'll use.\n *\n * MAINTENANCE_TODO: Add example\n *\n * @param defs ShaderDataDefinitions or an array of ShaderDataDefinitions as\n *    returned from {@link makeShaderDataDefinitions}. If an array more than 1\n *    definition it's assumed the vertex shader is in the first and the fragment\n *    shader in the second.\n * @param desc A PipelineDescriptor. You should be able to pass in the same object you passed\n *    to `createRenderPipeline` or `createComputePipeline`.\n * @returns An array of GPUBindGroupLayoutDescriptors which you can pass, one at a time, to\n *    `createBindGroupLayout`. Note: the array will be sparse if there are gaps in group\n *    numbers. Note: Each GPUBindGroupLayoutDescriptor.entries will be sorted by binding.\n */\nfunction makeBindGroupLayoutDescriptors(defs, desc) {\n    defs = Array.isArray(defs) ? defs : [defs];\n    const resources = [\n        ...getStageResources(defs[0], desc.vertex, GPUShaderStage.VERTEX),\n        ...getStageResources(defs[defs.length - 1], desc.fragment, GPUShaderStage.FRAGMENT),\n        ...getStageResources(defs[0], desc.compute, GPUShaderStage.COMPUTE),\n    ];\n    const bindGroupLayoutDescriptorsByGroupByBinding = [];\n    for (const resource of resources) {\n        const bindingsToBindGroupEntry = bindGroupLayoutDescriptorsByGroupByBinding[resource.group] || new Map();\n        bindGroupLayoutDescriptorsByGroupByBinding[resource.group] = bindingsToBindGroupEntry;\n        // Should we error here if the 2 don't match?\n        const entry = bindingsToBindGroupEntry.get(resource.entry.binding);\n        bindingsToBindGroupEntry.set(resource.entry.binding, {\n            ...resource.entry,\n            visibility: resource.entry.visibility | (entry?.visibility || 0),\n        });\n    }\n    const descriptors = bindGroupLayoutDescriptorsByGroupByBinding.map(v => ({ entries: [...v.values()].sort(byBinding) }));\n    for (let i = 0; i < descriptors.length; ++i) {\n        if (!descriptors[i]) {\n            descriptors[i] = { entries: [] };\n        }\n    }\n    return descriptors;\n}\nfunction getNamedVariables(reflect, variables) {\n    return Object.fromEntries(variables.map(v => {\n        const typeDefinition = addVariableType(reflect, v, 0);\n        return [\n            v.name,\n            {\n                typeDefinition,\n                group: v.group,\n                binding: v.binding,\n                size: typeDefinition.size,\n            },\n        ];\n    }));\n}\nfunction makeStructDefinition(reflect, structInfo, offset) {\n    // StructDefinition\n    const fields = Object.fromEntries(structInfo.members.map(m => {\n        return [\n            m.name,\n            {\n                offset: m.offset,\n                type: addType(reflect, m.type, 0),\n            },\n        ];\n    }));\n    return {\n        fields,\n        size: structInfo.size,\n        offset,\n    };\n}\nfunction getTextureSampleType(type) {\n    if (type.name.includes('depth')) {\n        return 'depth';\n    }\n    // unfiltered-float\n    switch (type.format?.name) {\n        case 'f32': return 'float';\n        case 'i32': return 'sint';\n        case 'u32': return 'uint';\n        default:\n            throw new Error('unknown texture sample type');\n    }\n}\nfunction getViewDimension(type) {\n    if (type.name.includes('2d_array')) {\n        return '2d-array';\n    }\n    if (type.name.includes('cube_array')) {\n        return 'cube-array';\n    }\n    if (type.name.includes('3d')) {\n        return '3d';\n    }\n    if (type.name.includes('1d')) {\n        return '1d';\n    }\n    if (type.name.includes('cube')) {\n        return 'cube';\n    }\n    return '2d';\n}\nfunction getStorageTextureAccess(type) {\n    switch (type.access) {\n        case 'read': return 'read-only';\n        case 'write': return 'write-only';\n        case 'read_write': return 'read-write';\n        default:\n            throw new Error('unknonw storage texture access');\n    }\n}\nfunction getSamplerType(type) {\n    // \"non-filtering\" can only be specified manually.\n    return type.name.endsWith('_comparison')\n        ? 'comparison'\n        : 'filtering';\n}\nfunction getBindGroupLayoutEntry(resource, visibility) {\n    const { binding, access, type } = resource;\n    switch (resource.resourceType) {\n        case i.Uniform:\n            return {\n                binding,\n                visibility,\n                buffer: {\n                    ...(resource.size && { minBindingSize: resource.size }),\n                },\n            };\n        case i.Storage:\n            return {\n                binding,\n                visibility,\n                buffer: {\n                    type: (access === '' || access === 'read') ? 'read-only-storage' : 'storage',\n                    ...(resource.size && { minBindingSize: resource.size }),\n                },\n            };\n        case i.Texture: {\n            if (type.name === 'texture_external') {\n                return {\n                    binding,\n                    visibility,\n                    externalTexture: {},\n                };\n            }\n            const multisampled = type.name.includes('multisampled');\n            return {\n                binding,\n                visibility,\n                texture: {\n                    sampleType: getTextureSampleType(type),\n                    viewDimension: getViewDimension(type),\n                    multisampled,\n                },\n            };\n        }\n        case i.Sampler:\n            return {\n                binding,\n                visibility,\n                sampler: {\n                    type: getSamplerType(type),\n                },\n            };\n        case i.StorageTexture:\n            return {\n                binding,\n                visibility,\n                storageTexture: {\n                    access: getStorageTextureAccess(type),\n                    format: type.format.name,\n                    viewDimension: getViewDimension(type),\n                },\n            };\n        default:\n            throw new Error('unknown resource type');\n    }\n}\nfunction addEntryPoints(funcInfos, stage) {\n    const entryPoints = {};\n    for (const info of funcInfos) {\n        entryPoints[info.name] = {\n            stage,\n            resources: info.resources.map(resource => {\n                const { name, group } = resource;\n                return {\n                    name,\n                    group,\n                    entry: getBindGroupLayoutEntry(resource, stage),\n                };\n            }),\n        };\n    }\n    return entryPoints;\n}\n/**\n * Given a WGSL shader, returns data definitions for structures,\n * uniforms, and storage buffers\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct MyStruct {\n *    color: vec4f,\n *    brightness: f32,\n *    kernel: array<f32, 9>,\n * };\n * @group(0) @binding(0) var<uniform> myUniforms: MyUniforms;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const myUniformValues = makeStructuredView(defs.uniforms.myUniforms);\n *\n * myUniformValues.set({\n *   color: [1, 0, 1, 1],\n *   brightness: 0.8,\n *   kernel: [\n *      1, 0, -1,\n *      2, 0, -2,\n *      1, 0, -1,\n *   ],\n * });\n * device.queue.writeBuffer(uniformBuffer, 0, myUniformValues.arrayBuffer);\n * ```\n *\n * @param code WGSL shader. Note: it is not required for this to be a complete shader\n * @returns definitions of the structures by name. Useful for passing to {@link makeStructuredView}\n */\nfunction makeShaderDataDefinitions(code) {\n    const reflect = new _t(code);\n    const structs = Object.fromEntries(reflect.structs.map(structInfo => {\n        return [structInfo.name, makeStructDefinition(reflect, structInfo, 0)];\n    }));\n    const uniforms = getNamedVariables(reflect, reflect.uniforms);\n    const storages = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === i.Storage));\n    const storageTextures = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === i.StorageTexture));\n    const textures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name !== 'texture_external'));\n    const externalTextures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name === 'texture_external'));\n    const samplers = getNamedVariables(reflect, reflect.samplers);\n    const entryPoints = {\n        ...addEntryPoints(reflect.entry.vertex, GPUShaderStage.VERTEX),\n        ...addEntryPoints(reflect.entry.fragment, GPUShaderStage.FRAGMENT),\n        ...addEntryPoints(reflect.entry.compute, GPUShaderStage.COMPUTE),\n    };\n    return {\n        externalTextures,\n        samplers,\n        structs,\n        storages,\n        storageTextures,\n        textures,\n        uniforms,\n        entryPoints,\n    };\n}\nfunction assert(cond, msg = '') {\n    if (!cond) {\n        throw new Error(msg);\n    }\n}\n/*\n write down what I want for a given type\n\n    struct VSUniforms {\n        foo: u32,\n    };\n    @group(4) @binding(1) var<uniform> uni1: f32;\n    @group(3) @binding(2) var<uniform> uni2: array<f32, 5>;\n    @group(2) @binding(3) var<uniform> uni3: VSUniforms;\n    @group(1) @binding(4) var<uniform> uni4: array<VSUniforms, 6>;\n\n    uni1: {\n        type: 'f32',\n        numElements: undefined\n    },\n    uni2: {\n        type: 'array',\n        elementType: 'f32'\n        numElements: 5,\n    },\n    uni3: {\n        type: 'struct',\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n    },\n    uni4: {\n        type: 'array',\n        elementType:\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n        ...\n    ]\n\n    */\nfunction addVariableType(reflect, v, offset) {\n    switch (v.resourceType) {\n        case i.Uniform:\n        case i.Storage:\n        case i.StorageTexture:\n            return addType(reflect, v.type, offset);\n        default:\n            return {\n                size: 0,\n                type: v.type.name,\n            };\n    }\n}\nfunction addType(reflect, typeInfo, offset) {\n    if (typeInfo.isArray) {\n        assert(!typeInfo.isStruct, 'struct array is invalid');\n        assert(!typeInfo.isStruct, 'template array is invalid');\n        const arrayInfo = typeInfo;\n        // ArrayDefinition\n        return {\n            size: arrayInfo.size,\n            elementType: addType(reflect, arrayInfo.format, offset),\n            numElements: arrayInfo.count,\n        };\n    }\n    else if (typeInfo.isStruct) {\n        assert(!typeInfo.isTemplate, 'template struct is invalid');\n        const structInfo = typeInfo;\n        return makeStructDefinition(reflect, structInfo, offset);\n    }\n    else {\n        // template is like vec4<f32> or mat4x4<f16>\n        const asTemplateInfo = typeInfo;\n        const type = typeInfo.isTemplate\n            ? `${asTemplateInfo.name}<${asTemplateInfo.format.name}>`\n            : typeInfo.name;\n        // IntrinsicDefinition\n        return {\n            size: typeInfo.size,\n            type: type,\n        };\n    }\n}\n\nfunction guessTextureBindingViewDimensionForTexture(dimension, depthOrArrayLayers) {\n    switch (dimension) {\n        case '1d': return '1d';\n        case '3d': return '3d';\n        default: return depthOrArrayLayers > 1 ? '2d-array' : '2d';\n    }\n}\nfunction normalizeGPUExtent3Dict(size) {\n    return [size.width, size.height || 1, size.depthOrArrayLayers || 1];\n}\n/**\n * Converts a `GPUExtent3D` into an array of numbers\n *\n * `GPUExtent3D` has two forms `[width, height?, depth?]` or\n * `{width: number, height?: number, depthOrArrayLayers?: number}`\n *\n * You pass one of those in here and it returns an array of 3 numbers\n * so that your code doesn't have to deal with multiple forms.\n *\n * @param size\n * @returns an array of 3 numbers, [width, height, depthOrArrayLayers]\n */\nfunction normalizeGPUExtent3D(size) {\n    return (Array.isArray(size) || isTypedArray(size))\n        ? [...size, 1, 1].slice(0, 3)\n        : normalizeGPUExtent3Dict(size);\n}\n/**\n * Given a GPUExtent3D returns the number of mip levels needed\n *\n * @param size\n * @returns number of mip levels needed for the given size\n */\nfunction numMipLevels(size, dimension) {\n    const sizes = normalizeGPUExtent3D(size);\n    const maxSize = Math.max(...sizes.slice(0, dimension === '3d' ? 3 : 2));\n    return 1 + Math.log2(maxSize) | 0;\n}\n// Use a WeakMap so the device can be destroyed and/or lost\nconst byDevice = new WeakMap();\n/**\n * Generates mip levels from level 0 to the last mip for an existing texture\n *\n * The texture must have been created with TEXTURE_BINDING and RENDER_ATTACHMENT\n * and been created with mip levels\n *\n * @param device A GPUDevice\n * @param texture The texture to create mips for\n * @param textureBindingViewDimension This is only needed in compatibility mode\n *   and it is only needed when the texture is going to be used as a cube map.\n */\nfunction generateMipmap(device, texture, textureBindingViewDimension) {\n    let perDeviceInfo = byDevice.get(device);\n    if (!perDeviceInfo) {\n        perDeviceInfo = {\n            pipelineByFormatAndViewDimension: {},\n            moduleByViewDimension: {},\n        };\n        byDevice.set(device, perDeviceInfo);\n    }\n    let { sampler, module, } = perDeviceInfo;\n    const { pipelineByFormatAndViewDimension, } = perDeviceInfo;\n    textureBindingViewDimension = device.features.has('core-features-and-limits')\n        ? '2d-array'\n        : textureBindingViewDimension ?? guessTextureBindingViewDimensionForTexture(texture.dimension, texture.depthOrArrayLayers);\n    if (!module) {\n        module = device.createShaderModule({\n            label: `mip level generation for ${textureBindingViewDimension}`,\n            code: `\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n          @location(1) @interpolate(flat, either) baseArrayLayer: u32,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32,\n          @builtin(instance_index) baseArrayLayer: u32,\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          vsOutput.baseArrayLayer = baseArrayLayer;\n          return vsOutput;\n        }\n\n        @group(0) @binding(0) var ourSampler: sampler;\n\n        @group(0) @binding(1) var ourTexture2d: texture_2d<f32>;\n        @fragment fn fs2d(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(ourTexture2d, ourSampler, fsInput.texcoord);\n        }\n\n        @group(0) @binding(1) var ourTexture2dArray: texture_2d_array<f32>;\n        @fragment fn fs2darray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTexture2dArray,\n            ourSampler,\n            fsInput.texcoord,\n            fsInput.baseArrayLayer);\n        }\n\n        @group(0) @binding(1) var ourTextureCube: texture_cube<f32>;\n        @fragment fn fscube(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCube,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1));\n        }\n\n        @group(0) @binding(1) var ourTextureCubeArray: texture_cube_array<f32>;\n        @fragment fn fscubearray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCubeArray,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1), fsInput.baseArrayLayer);\n        }\n      `,\n        });\n        sampler = device.createSampler({\n            minFilter: 'linear',\n            magFilter: 'linear',\n        });\n        Object.assign(perDeviceInfo, { sampler, module });\n    }\n    const id = `${texture.format}.${textureBindingViewDimension}`;\n    if (!pipelineByFormatAndViewDimension[id]) {\n        const entryPoint = `fs${textureBindingViewDimension.replace(/[\\W]/, '')}`;\n        pipelineByFormatAndViewDimension[id] = device.createRenderPipeline({\n            label: `mip level generator pipeline for ${textureBindingViewDimension}`,\n            layout: 'auto',\n            vertex: {\n                module,\n            },\n            fragment: {\n                module,\n                entryPoint,\n                targets: [{ format: texture.format }],\n            },\n        });\n    }\n    const pipeline = pipelineByFormatAndViewDimension[id];\n    const encoder = device.createCommandEncoder({\n        label: 'mip gen encoder',\n    });\n    for (let baseMipLevel = 1; baseMipLevel < texture.mipLevelCount; ++baseMipLevel) {\n        for (let baseArrayLayer = 0; baseArrayLayer < texture.depthOrArrayLayers; ++baseArrayLayer) {\n            const bindGroup = device.createBindGroup({\n                layout: pipeline.getBindGroupLayout(0),\n                entries: [\n                    { binding: 0, resource: sampler },\n                    {\n                        binding: 1,\n                        resource: texture.createView({\n                            dimension: textureBindingViewDimension,\n                            baseMipLevel: baseMipLevel - 1,\n                            mipLevelCount: 1,\n                        }),\n                    },\n                ],\n            });\n            const renderPassDescriptor = {\n                label: 'mip gen renderPass',\n                colorAttachments: [\n                    {\n                        view: texture.createView({\n                            dimension: '2d',\n                            baseMipLevel,\n                            mipLevelCount: 1,\n                            baseArrayLayer,\n                            arrayLayerCount: 1,\n                        }),\n                        loadOp: 'clear',\n                        storeOp: 'store',\n                    },\n                ],\n            };\n            const pass = encoder.beginRenderPass(renderPassDescriptor);\n            pass.setPipeline(pipeline);\n            pass.setBindGroup(0, bindGroup);\n            pass.draw(3, 1, 0, baseArrayLayer);\n            pass.end();\n        }\n    }\n    const commandBuffer = encoder.finish();\n    device.queue.submit([commandBuffer]);\n}\n\nconst kTypedArrayToAttribFormat = new Map([\n    [Int8Array, { formats: ['sint8', 'snorm8'], defaultForType: 1 }],\n    [Uint8Array, { formats: ['uint8', 'unorm8'], defaultForType: 1 }],\n    [Int16Array, { formats: ['sint16', 'snorm16'], defaultForType: 1 }],\n    [Uint16Array, { formats: ['uint16', 'unorm16'], defaultForType: 1 }],\n    [Int32Array, { formats: ['sint32', 'snorm32'], defaultForType: 0 }],\n    [Uint32Array, { formats: ['uint32', 'unorm32'], defaultForType: 0 }],\n    [Float32Array, { formats: ['float32', 'float32'], defaultForType: 0 }],\n    // TODO: Add Float16Array\n]);\nconst kVertexFormatPrefixToType = new Map([...kTypedArrayToAttribFormat.entries()].map(([Type, { formats: [s1, s2] }]) => [[s1, Type], [s2, Type]]).flat());\nfunction isIndices(name) {\n    return name === \"indices\";\n}\nfunction makeTypedArrayFromArrayUnion(array, name) {\n    if (isTypedArray(array)) {\n        return array;\n    }\n    let asFullSpec = array;\n    if (isTypedArray(asFullSpec.data)) {\n        return asFullSpec.data;\n    }\n    if (Array.isArray(array) || typeof array === 'number') {\n        asFullSpec = {\n            data: array,\n        };\n    }\n    let Type = asFullSpec.type;\n    if (!Type) {\n        if (isIndices(name)) {\n            Type = Uint32Array;\n        }\n        else {\n            Type = Float32Array;\n        }\n    }\n    return new Type(asFullSpec.data); // ugh!\n}\nfunction getArray(array) {\n    const arr = array.length ? array : array.data;\n    return arr;\n}\nconst kNameToNumComponents = [\n    { re: /coord|texture|uv/i, numComponents: 2 },\n    { re: /color|colour/i, numComponents: 4 },\n];\nfunction guessNumComponentsFromNameImpl(name) {\n    for (const { re, numComponents } of kNameToNumComponents) {\n        if (re.test(name)) {\n            return numComponents;\n        }\n    }\n    return 3;\n}\nfunction guessNumComponentsFromName(name, length) {\n    const numComponents = guessNumComponentsFromNameImpl(name);\n    if (length % numComponents > 0) {\n        throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n    }\n    return numComponents;\n}\nfunction getNumComponents(array, arrayName) {\n    return array.numComponents || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\nconst kVertexFormatRE = /(\\w+)(?:x(\\d))$/;\nfunction numComponentsAndTypeFromVertexFormat(format) {\n    const m = kVertexFormatRE.exec(format);\n    const [prefix, numComponents] = m ? [m[1], parseInt(m[2])] : [format, 1];\n    return {\n        Type: kVertexFormatPrefixToType.get(prefix),\n        numComponents,\n    };\n}\nfunction createTypedArrayOfSameType(typedArray, arrayBuffer) {\n    const Ctor = Object.getPrototypeOf(typedArray).constructor;\n    return new Ctor(arrayBuffer);\n}\n/**\n * Given a set of named arrays, generates an array `GPUBufferLayout`s\n *\n * Examples:\n *\n * ```js\n *   const arrays = {\n *     position: [1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1],\n *     normal: [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],\n *     texcoord: [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\n *   };\n *\n *   const { bufferLayouts, typedArrays } = createBufferLayoutsFromArrays(arrays);\n * ```\n *\n * results in `bufferLayouts` being\n *\n * ```js\n * [\n *   {\n *     stepMode: 'vertex',\n *     arrayStride: 32,\n *     attributes: [\n *       { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *       { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *       { shaderLocation: 2, offset: 24, format: 'float32x2' },\n *     ],\n *   },\n * ]\n * ```\n *\n * and `typedArrays` being\n *\n * ```\n * [\n *   someFloat32Array0,\n *   someFloat32Array1,\n *   someFloat32Array2,\n * ]\n * ```\n *\n * See {@link Arrays} for details on the various types of arrays.\n *\n * Note: If typed arrays are passed in the same typed arrays will come out (copies will not be made)\n */\nfunction createBufferLayoutsFromArrays(arrays, options = {}) {\n    const interleave = options.interleave === undefined ? true : options.interleave;\n    const stepMode = options.stepMode || 'vertex';\n    const shaderLocations = options.shaderLocation\n        ? (Array.isArray(options.shaderLocation) ? options.shaderLocation : [options.shaderLocation])\n        : [0];\n    let currentOffset = 0;\n    const bufferLayouts = [];\n    const attributes = [];\n    const typedArrays = [];\n    Object.keys(arrays)\n        .filter(arrayName => !isIndices(arrayName))\n        .forEach(arrayName => {\n        const array = arrays[arrayName];\n        const data = makeTypedArrayFromArrayUnion(array, arrayName);\n        const totalNumComponents = getNumComponents(array, arrayName);\n        // if totalNumComponents > 4 then we clearly need to split this into multiple\n        // attributes\n        // (a) <= 4 doesn't mean don't split and\n        // (b) how to split? We could divide by 4 and if it's not even then divide by 3\n        //     as a guess?\n        //     5 is error? or 1x4 + 1x1?\n        //     6 is 2x3\n        //     7 is error? or 1x4 + 1x3?\n        //     8 is 2x4\n        //     9 is 3x3\n        //    10 is error? or 2x4 + 1x2?\n        //    11 is error? or 2x4 + 1x3?\n        //    12 is 3x4 or 4x3?\n        //    13 is error? or 3x4 + 1x1 or 4x3 + 1x1?\n        //    14 is error? or 3x4 + 1x2 or 4x3 + 1x2?\n        //    15 is error? or 3x4 + 1x3 or 4x3 + 1x3?\n        //    16 is 4x4\n        const by4 = totalNumComponents / 4;\n        const by3 = totalNumComponents / 3;\n        const step = by4 % 1 === 0 ? 4 : (by3 % 1 === 0 ? 3 : 4);\n        for (let component = 0; component < totalNumComponents; component += step) {\n            const numComponents = Math.min(step, totalNumComponents - component);\n            const offset = currentOffset;\n            currentOffset += numComponents * data.BYTES_PER_ELEMENT;\n            const { defaultForType, formats } = kTypedArrayToAttribFormat.get(Object.getPrototypeOf(data).constructor);\n            const normalize = array.normalize;\n            const formatNdx = typeof normalize === 'undefined' ? defaultForType : (normalize ? 1 : 0);\n            const format = `${formats[formatNdx]}${numComponents > 1 ? `x${numComponents}` : ''}`;\n            // TODO: cleanup with generator?\n            const shaderLocation = shaderLocations.shift();\n            if (shaderLocations.length === 0) {\n                shaderLocations.push(shaderLocation + 1);\n            }\n            attributes.push({\n                offset,\n                format,\n                shaderLocation,\n            });\n            typedArrays.push({\n                data,\n                offset: component,\n                stride: totalNumComponents,\n            });\n        }\n        if (!interleave) {\n            bufferLayouts.push({\n                stepMode,\n                arrayStride: currentOffset,\n                attributes: attributes.slice(),\n            });\n            currentOffset = 0;\n            attributes.length = 0;\n        }\n    });\n    if (attributes.length) {\n        bufferLayouts.push({\n            stepMode,\n            arrayStride: currentOffset,\n            attributes: attributes,\n        });\n    }\n    return {\n        bufferLayouts,\n        typedArrays,\n    };\n}\nfunction getTypedArrayWithOffsetAndStride(ta, numComponents) {\n    return (isTypedArray(ta)\n        ? { data: ta, offset: 0, stride: numComponents }\n        : ta);\n}\n/**\n * Given an array of `GPUVertexAttribute`s and a corresponding array\n * of TypedArrays, interleaves the contents of the typed arrays\n * into the given ArrayBuffer\n *\n * example:\n *\n * ```js\n * const attributes: GPUVertexAttribute[] = [\n *   { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *   { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *   { shaderLocation: 2, offset: 24, format: 'float32x2' },\n * ];\n * const typedArrays = [\n *   new Float32Array([1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1]),\n *   new Float32Array([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1]),\n *   new Float32Array([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]),\n * ];\n * const arrayStride = (3 + 3 + 2) * 4;  // pos + nrm + uv\n * const arrayBuffer = new ArrayBuffer(arrayStride * 24)\n * interleaveVertexData(attributes, typedArrays, arrayStride, arrayBuffer)\n * ```\n *\n * results in the contents of `arrayBuffer` to be the 3 TypedArrays interleaved\n *\n * See {@link Arrays} for details on the various types of arrays.\n *\n * Note: You can generate `attributes` and `typedArrays` above by calling\n * {@link createBufferLayoutsFromArrays}\n */\nfunction interleaveVertexData(attributes, typedArrays, arrayStride, arrayBuffer) {\n    const views = new Map();\n    const getView = (typedArray) => {\n        const Ctor = Object.getPrototypeOf(typedArray).constructor;\n        const view = views.get(Ctor);\n        if (view) {\n            return view;\n        }\n        const newView = new Ctor(arrayBuffer);\n        views.set(Ctor, newView);\n        return newView;\n    };\n    attributes.forEach((attribute, ndx) => {\n        const { offset, format } = attribute;\n        const { numComponents } = numComponentsAndTypeFromVertexFormat(format);\n        const { data, offset: srcOffset, stride, } = getTypedArrayWithOffsetAndStride(typedArrays[ndx], numComponents);\n        const view = getView(data);\n        for (let i = 0; i < data.length; i += stride) {\n            const ndx = i / stride;\n            const dstOffset = (offset + ndx * arrayStride) / view.BYTES_PER_ELEMENT;\n            const srcOff = i + srcOffset;\n            const s = data.subarray(srcOff, srcOff + numComponents);\n            view.set(s, dstOffset);\n        }\n    });\n}\n/**\n * Given arrays, create buffers, fills the buffers with data if provided, optionally\n * interleaves the data (the default).\n *\n * Example:\n *\n * ```js\n *  const {\n *    buffers,\n *    bufferLayouts,\n *    indexBuffer,\n *    indexFormat,\n *    numElements,\n *  } = createBuffersAndAttributesFromArrays(device, {\n *    position: [1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1],\n *    normal: [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],\n *    texcoord: [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\n *    indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23],\n *  });\n * ```\n *\n * Where `bufferLayouts` will be\n *\n * ```js\n * [\n *   {\n *     stepMode: 'vertex',\n *     arrayStride: 32,\n *     attributes: [\n *       { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *       { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *       { shaderLocation: 2, offset: 24, format: 'float32x2' },\n *     ],\n *   },\n * ]\n * ```\n *\n * * `buffers` will have one `GPUBuffer` of usage `GPUBufferUsage.VERTEX`\n * * `indexBuffer` will be `GPUBuffer` of usage `GPUBufferUsage.INDEX`\n * * `indexFormat` will be `uint32` (use a full spec or a typedarray of `Uint16Array` if you want 16bit indices)\n * * `numElements` will be 36 (this is either the number entries in the array named `indices` or if no\n *    indices are provided then it's the length of the first array divided by numComponents. See {@link Arrays})\n *\n * See {@link Arrays} for details on the various types of arrays.\n * Also see the cube and instancing examples.\n */\nfunction createBuffersAndAttributesFromArrays(device, arrays, options = {}) {\n    const usage = (options.usage || 0);\n    const { bufferLayouts, typedArrays, } = createBufferLayoutsFromArrays(arrays, options);\n    const buffers = [];\n    let numElements = -1;\n    let bufferNdx = 0;\n    for (const { attributes, arrayStride } of bufferLayouts) {\n        const attribs = attributes;\n        const attrib0 = attribs[0];\n        const { numComponents } = numComponentsAndTypeFromVertexFormat(attrib0.format);\n        const { data: data0, stride, } = getTypedArrayWithOffsetAndStride(typedArrays[bufferNdx], numComponents);\n        if (numElements < 0) {\n            numElements = data0.length / stride;\n        }\n        const size = arrayStride * numElements;\n        const buffer = device.createBuffer({\n            usage: usage | GPUBufferUsage.VERTEX,\n            size,\n            mappedAtCreation: true,\n        });\n        const arrayBuffer = buffer.getMappedRange();\n        if (attribs.length === 1 && arrayStride === data0.BYTES_PER_ELEMENT * numComponents) {\n            const view = createTypedArrayOfSameType(data0, arrayBuffer);\n            view.set(data0);\n        }\n        else {\n            interleaveVertexData(attribs, typedArrays.slice(bufferNdx), arrayStride, arrayBuffer);\n        }\n        buffer.unmap();\n        buffers.push(buffer);\n        bufferNdx += attribs.length;\n    }\n    const buffersAndAttributes = {\n        numElements,\n        bufferLayouts,\n        buffers,\n    };\n    const indicesEntry = Object.entries(arrays).find(([arrayName]) => isIndices(arrayName));\n    if (indicesEntry) {\n        const indices = makeTypedArrayFromArrayUnion(indicesEntry[1], 'indices');\n        const indexBuffer = device.createBuffer({\n            size: indices.byteLength,\n            usage: GPUBufferUsage.INDEX | usage,\n            mappedAtCreation: true,\n        });\n        const dst = createTypedArrayOfSameType(indices, indexBuffer.getMappedRange());\n        dst.set(indices);\n        indexBuffer.unmap();\n        buffersAndAttributes.indexBuffer = indexBuffer;\n        buffersAndAttributes.indexFormat = indices instanceof Uint16Array ? 'uint16' : 'uint32';\n        buffersAndAttributes.numElements = indices.length;\n    }\n    return buffersAndAttributes;\n}\n/**\n * Calls `passEncoder.setVertexBuffer` and optionally `passEncoder.setIndexBuffer`\n * for the buffers specified in `buffersAndAttributes`.\n *\n * This is extremely simple function. It is equivalent to\n *\n * ```js\n * buffersAndAttributes.buffers.forEach((buffer, i) => {\n *   passEncoder.setVertexBuffer(firstVertexBufferIndex + i, buffer);\n * });\n*\n * if (buffersAndAttributes.indexBuffer) {\n *   passEncoder.setIndexBuffer(buffersAndAttributes.indexBuffer, buffersAndAttributes.indexFormat!);\n * }\n * ```\n *\n * It exists solely for simple cases. If you have a complex case, call the passEncoder\n * yourself as appropriate.\n *\n * @param passEncoder a render pass encoder\n * @param buffersAndAttributes As returned from {@link createBuffersAndAttributesFromArrays}\n * @param firstVertexBufferIndex The first vertex buffer index. default = 0.\n */\nfunction setVertexAndIndexBuffers(passEncoder, buffersAndAttributes, firstVertexBufferIndex = 0) {\n    buffersAndAttributes.buffers.forEach((buffer, i) => {\n        passEncoder.setVertexBuffer(firstVertexBufferIndex + i, buffer);\n    });\n    if (buffersAndAttributes.indexBuffer) {\n        passEncoder.setIndexBuffer(buffersAndAttributes.indexBuffer, buffersAndAttributes.indexFormat);\n    }\n}\n/**\n * Calls {@link setVertexAndIndexBuffers} and then calls either `draw` or `drawIndexed`\n *\n * This is an extremely simple function. See  {@link setVertexAndIndexBuffers}.\n * If you need something more complex, call pass encoder functions yourself as appropriate.\n *\n * @param passEncoder a render pass encoder\n * @param buffersAndAttributes As returned from {@link createBuffersAndAttributesFromArrays}\n */\nfunction drawArrays(passEncoder, buffersAndAttributes) {\n    setVertexAndIndexBuffers(passEncoder, buffersAndAttributes);\n    if (buffersAndAttributes.indexBuffer) {\n        passEncoder.drawIndexed(buffersAndAttributes.numElements);\n    }\n    else {\n        passEncoder.draw(buffersAndAttributes.numElements);\n    }\n}\n\nfunction isTextureData(source) {\n    const src = source;\n    return isTypedArray(src.data) || Array.isArray(src.data);\n}\nfunction isTextureRawDataSource(source) {\n    return isTypedArray(source) || Array.isArray(source) || isTextureData(source);\n}\nfunction toTypedArray(v, format) {\n    if (isTypedArray(v)) {\n        return v;\n    }\n    const { Type } = getTextureFormatInfo(format);\n    return new Type(v);\n}\nfunction guessDimensions(width, height, numElements, dimension = '2d') {\n    if (numElements % 1 !== 0) {\n        throw new Error(\"can't guess dimensions\");\n    }\n    if (!width && !height) {\n        const size = Math.sqrt(numElements / (dimension === 'cube' ? 6 : 1));\n        if (size % 1 === 0) {\n            width = size;\n            height = size;\n        }\n        else {\n            width = numElements;\n            height = 1;\n        }\n    }\n    else if (!height) {\n        height = numElements / width;\n        if (height % 1) {\n            throw new Error(\"can't guess dimensions\");\n        }\n    }\n    else if (!width) {\n        width = numElements / height;\n        if (width % 1) {\n            throw new Error(\"can't guess dimensions\");\n        }\n    }\n    const depth = numElements / width / height;\n    if (depth % 1) {\n        throw new Error(\"can't guess dimensions\");\n    }\n    return [width, height, depth];\n}\nfunction textureViewDimensionToDimension(viewDimension) {\n    switch (viewDimension) {\n        case '1d': return '1d';\n        case '3d': return '3d';\n        default: return '2d';\n    }\n}\nconst kFormatToTypedArray = {\n    '8snorm': Int8Array,\n    '8unorm': Uint8Array,\n    '8sint': Int8Array,\n    '8uint': Uint8Array,\n    '16snorm': Int16Array,\n    '16unorm': Uint16Array,\n    '16sint': Int16Array,\n    '16uint': Uint16Array,\n    '32snorm': Int32Array,\n    '32unorm': Uint32Array,\n    '32sint': Int32Array,\n    '32uint': Uint32Array,\n    '16float': Uint16Array, // TODO: change to Float16Array\n    '32float': Float32Array,\n};\nconst kTextureFormatRE = /([a-z]+)(\\d+)([a-z]+)/;\nfunction getTextureFormatInfo(format) {\n    // this is a hack! It will only work for common formats\n    const [, channels, bits, typeName] = kTextureFormatRE.exec(format);\n    // TODO: if the regex fails, use table for other formats?\n    const numChannels = channels.length;\n    const bytesPerChannel = parseInt(bits) / 8;\n    const bytesPerElement = numChannels * bytesPerChannel;\n    const Type = kFormatToTypedArray[`${bits}${typeName}`];\n    return {\n        channels,\n        numChannels,\n        bytesPerChannel,\n        bytesPerElement,\n        Type,\n    };\n}\n/**\n * Gets the size of a mipLevel. Returns an array of 3 numbers [width, height, depthOrArrayLayers]\n */\nfunction getSizeForMipFromTexture(texture, mipLevel) {\n    return [\n        texture.width,\n        texture.height,\n        texture.depthOrArrayLayers,\n    ].map(v => Math.max(1, Math.floor(v / 2 ** mipLevel)));\n}\n/**\n * Uploads Data to a texture\n */\nfunction uploadDataToTexture(device, texture, source, options) {\n    const data = toTypedArray(source.data || source, texture.format);\n    const mipLevel = 0;\n    const size = getSizeForMipFromTexture(texture, mipLevel);\n    const { bytesPerElement } = getTextureFormatInfo(texture.format);\n    const origin = options.origin || [0, 0, 0];\n    device.queue.writeTexture({ texture, origin }, data, { bytesPerRow: bytesPerElement * size[0], rowsPerImage: size[1] }, size);\n}\n/**\n * Copies a an array of \"sources\" (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * to a texture and then optionally generates mip levels\n */\nfunction copySourcesToTexture(device, texture, sources, options = {}) {\n    let tempTexture;\n    sources.forEach((source, layer) => {\n        const origin = [0, 0, layer + (options.baseArrayLayer || 0)];\n        if (isTextureRawDataSource(source)) {\n            uploadDataToTexture(device, texture, source, { origin });\n        }\n        else {\n            const s = source;\n            // work around limit that you can't call copyExternalImageToTexture for 3d texture.\n            // sse https://github.com/gpuweb/gpuweb/issues/4697 for if we can remove this\n            let dstTexture = texture;\n            let copyOrigin = origin;\n            if (texture.dimension === '3d') {\n                tempTexture = tempTexture ?? device.createTexture({\n                    format: texture.format,\n                    usage: texture.usage | GPUTextureUsage.COPY_SRC,\n                    size: [texture.width, texture.height, 1],\n                });\n                dstTexture = tempTexture;\n                copyOrigin = [0, 0, 0];\n            }\n            const { flipY, premultipliedAlpha, colorSpace } = options;\n            device.queue.copyExternalImageToTexture({ source: s, flipY, }, { texture: dstTexture, premultipliedAlpha, colorSpace, origin: copyOrigin }, getSizeFromSource(s, options));\n            if (tempTexture) {\n                const encoder = device.createCommandEncoder();\n                encoder.copyTextureToTexture({ texture: tempTexture }, { texture, origin }, tempTexture);\n                device.queue.submit([encoder.finish()]);\n            }\n        }\n    });\n    if (tempTexture) {\n        tempTexture.destroy();\n    }\n    if (texture.mipLevelCount > 1) {\n        const viewDimension = options.viewDimension ?? guessTextureBindingViewDimensionForTexture(texture.dimension, texture.depthOrArrayLayers);\n        generateMipmap(device, texture, viewDimension);\n    }\n}\n/**\n * Copies a \"source\" (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * to a texture and then optionally generates mip levels\n */\nfunction copySourceToTexture(device, texture, source, options = {}) {\n    copySourcesToTexture(device, texture, [source], options);\n}\n/**\n * Gets the size from a source. This is to smooth out the fact that different\n * sources have a different way to get their size.\n */\nfunction getSizeFromSource(source, options) {\n    if ('videoWidth' in source && 'videoHeight' in source) {\n        return [source.videoWidth, source.videoHeight, 1];\n    }\n    else {\n        const maybeHasWidthAndHeight = source;\n        const { width, height } = maybeHasWidthAndHeight;\n        if (width > 0 && height > 0 && !isTextureRawDataSource(source)) {\n            // this should cover Canvas, Image, ImageData, ImageBitmap, TextureCreationData\n            return [width, height, 1];\n        }\n        const format = options.format || 'rgba8unorm';\n        const { bytesPerElement, bytesPerChannel } = getTextureFormatInfo(format);\n        const data = isTypedArray(source) || Array.isArray(source)\n            ? source\n            : source.data;\n        const numBytes = isTypedArray(data)\n            ? data.byteLength\n            : (data.length * bytesPerChannel);\n        const numElements = numBytes / bytesPerElement;\n        return guessDimensions(width, height, numElements);\n    }\n}\n/**\n * Create a texture from an array of sources (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * and optionally create mip levels. If you set `mips: true` and don't set a mipLevelCount\n * then it will automatically make the correct number of mip levels.\n *\n * Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     [\n *        someCanvasOrVideoOrImageImageBitmap0,\n *        someCanvasOrVideoOrImageImageBitmap1,\n *     ],\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *     }\n * );\n * ```\n *\n * Note: If you are supporting compatibility mode you will need to pass in your\n * intended view dimension for cubemaps. Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     [\n *        someCanvasOrVideoOrImageImageBitmapPosX,\n *        someCanvasOrVideoOrImageImageBitmapNegY,\n *        someCanvasOrVideoOrImageImageBitmapPosY,\n *        someCanvasOrVideoOrImageImageBitmapNegY,\n *        someCanvasOrVideoOrImageImageBitmapPosZ,\n *        someCanvasOrVideoOrImageImageBitmapNegZ,\n *     ],\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *       viewDimension: 'cube', // <=- Required for compatibility mode\n *     }\n * );\n * ```\n */\nfunction createTextureFromSources(device, sources, options = {}) {\n    // NOTE: We assume all the sizes are the same. If they are not you'll get\n    // an error.\n    const size = getSizeFromSource(sources[0], options);\n    size[2] = size[2] > 1 ? size[2] : sources.length;\n    const viewDimension = options.viewDimension ?? guessTextureBindingViewDimensionForTexture(options.dimension, size[2]);\n    const dimension = textureViewDimensionToDimension(viewDimension);\n    const texture = device.createTexture({\n        dimension,\n        textureBindingViewDimension: viewDimension,\n        format: options.format || 'rgba8unorm',\n        mipLevelCount: options.mipLevelCount\n            ? options.mipLevelCount\n            : options.mips ? numMipLevels(size) : 1,\n        size,\n        usage: (options.usage ?? 0) |\n            GPUTextureUsage.TEXTURE_BINDING |\n            GPUTextureUsage.COPY_DST |\n            GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    copySourcesToTexture(device, texture, sources, options);\n    return texture;\n}\n/**\n * Create a texture from a source (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * and optionally create mip levels. If you set `mips: true` and don't set a mipLevelCount\n * then it will automatically make the correct number of mip levels.\n *\n * Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     someCanvasOrVideoOrImageImageBitmap,\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *     }\n * );\n * ```\n */\nfunction createTextureFromSource(device, source, options = {}) {\n    return createTextureFromSources(device, [source], options);\n}\n/**\n * Load an ImageBitmap\n * @param url\n * @param options\n * @returns the loaded ImageBitmap\n */\nasync function loadImageBitmap(url, options = {}) {\n    const res = await fetch(url);\n    const blob = await res.blob();\n    const opt = {\n        ...options,\n        ...(options.colorSpaceConversion !== undefined && { colorSpaceConversion: 'none' }),\n    };\n    return await createImageBitmap(blob, opt);\n}\n/**\n * Load images and create a texture from them, optionally generating mip levels\n *\n * Assumes all the urls reference images of the same size.\n *\n * Example:\n *\n * ```js\n * const texture = await createTextureFromImage(\n *   device,\n *   [\n *     'https://someimage1.url',\n *     'https://someimage2.url',\n *   ],\n *   {\n *     mips: true,\n *     flipY: true,\n *   },\n * );\n * ```\n */\nasync function createTextureFromImages(device, urls, options = {}) {\n    // TODO: start once we've loaded one?\n    // We need at least 1 to know the size of the texture to create\n    const imgBitmaps = await Promise.all(urls.map(url => loadImageBitmap(url)));\n    return createTextureFromSources(device, imgBitmaps, options);\n}\n/**\n * Load an image and create a texture from it, optionally generating mip levels\n *\n * Example:\n *\n * ```js\n * const texture = await createTextureFromImage(device, 'https://someimage.url', {\n *   mips: true,\n *   flipY: true,\n * });\n * ```\n */\nasync function createTextureFromImage(device, url, options = {}) {\n    return createTextureFromImages(device, [url], options);\n}\n\n/*\n * Copyright 2023 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * A class to provide `push` on a typed array.\n *\n * example:\n *\n * ```js\n * const positions = new TypedArrayWrapper(new Float32Array(300), 3);\n * positions.push(1, 2, 3); // add a position\n * positions.push([4, 5, 6]);  // add a position\n * positions.push(new Float32Array(6)); // add 2 positions\n * const data = positions.typedArray;\n * ```\n */\nclass TypedArrayWrapper {\n    typedArray;\n    cursor = 0;\n    numComponents;\n    constructor(arr, numComponents) {\n        this.typedArray = arr;\n        this.numComponents = numComponents;\n    }\n    get numElements() {\n        return this.typedArray.length / this.numComponents;\n    }\n    push(...data) {\n        for (const value of data) {\n            if (Array.isArray(value) || isTypedArray(value)) {\n                const asArray = data;\n                this.typedArray.set(asArray, this.cursor);\n                this.cursor += asArray.length;\n            }\n            else {\n                this.typedArray[this.cursor++] = value;\n            }\n        }\n    }\n    reset(index = 0) {\n        this.cursor = index;\n    }\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2, Float32Array);\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param numComponents number of components\n * @param numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param Type A constructor for the type. Default = `Float32Array`.\n */\nfunction createAugmentedTypedArray(numComponents, numElements, Type) {\n    return new TypedArrayWrapper(new Type(numComponents * numElements), numComponents);\n}\n// I couldn't figure out how to make this because TypedArrayWrapper wants a type\n// but this is explicity kind of type-less.\nfunction createAugmentedTypedArrayFromExisting(numComponents, numElements, existingArray) {\n    const Ctor = existingArray.constructor;\n    const array = new Ctor(numComponents * numElements);\n    return new TypedArrayWrapper(array, numComponents);\n}\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param params\n * @param params.size the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param params.xOffset the amount to offset the quad in X. Default = 0\n * @param params.yOffset the amount to offset the quad in Y. Default = 0\n * @return the created XY Quad vertices\n */\nfunction createXYQuadVertices({ size: inSize = 2, xOffset = 0, yOffset = 0 } = {}) {\n    const size = inSize * 0.5;\n    return {\n        position: {\n            numComponents: 2,\n            data: [\n                xOffset + -1 * size, yOffset + -1 * size,\n                xOffset + 1 * size, yOffset + -1 * size,\n                xOffset + -1 * size, yOffset + 1 * size,\n                xOffset + 1 * size, yOffset + 1 * size,\n            ],\n        },\n        normal: [\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n        ],\n        texcoord: [\n            0, 0,\n            1, 0,\n            0, 1,\n            1, 1,\n        ],\n        indices: [0, 1, 2, 2, 1, 3],\n    };\n}\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param params\n * @param params.width Width of the plane. Default = 1\n * @param params.depth Depth of the plane. Default = 1\n * @param params.subdivisionsWidth Number of steps across the plane. Default = 1\n * @param params.subdivisionsDepth Number of steps down the plane. Default = 1\n * @return The created plane vertices.\n */\nfunction createPlaneVertices({ width = 1, depth = 1, subdivisionsWidth = 1, subdivisionsDepth = 1, } = {}) {\n    const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n    const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n    for (let z = 0; z <= subdivisionsDepth; z++) {\n        for (let x = 0; x <= subdivisionsWidth; x++) {\n            const u = x / subdivisionsWidth;\n            const v = z / subdivisionsDepth;\n            positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n            normals.push(0, 1, 0);\n            texcoords.push(u, v);\n        }\n    }\n    const numVertsAcross = subdivisionsWidth + 1;\n    const indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n    for (let z = 0; z < subdivisionsDepth; z++) { // eslint-disable-line\n        for (let x = 0; x < subdivisionsWidth; x++) { // eslint-disable-line\n            // Make triangle 1 of quad.\n            indices.push((z + 0) * numVertsAcross + x, (z + 1) * numVertsAcross + x, (z + 0) * numVertsAcross + x + 1);\n            // Make triangle 2 of quad.\n            indices.push((z + 1) * numVertsAcross + x, (z + 1) * numVertsAcross + x + 1, (z + 0) * numVertsAcross + x + 1);\n        }\n    }\n    return {\n        position: positions.typedArray,\n        normal: normals.typedArray,\n        texcoord: texcoords.typedArray,\n        indices: indices.typedArray,\n    };\n}\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param params\n * @param params.radius radius of the sphere. Default = 1\n * @param params.subdivisionsAxis number of steps around the sphere. Default = 24\n * @param params.subdivisionsHeight number of vertically on the sphere. Default = 12\n * @param params.startLatitudeInRadians where to start the\n *     top of the sphere. Default = 0\n * @param params.endLatitudeInRadians Where to end the\n *     bottom of the sphere. Default = π\n * @param params.startLongitudeInRadians where to start\n *     wrapping the sphere. Default = 0\n * @param params.endLongitudeInRadians where to end\n *     wrapping the sphere. Default = 2π\n * @return The created sphere vertices.\n */\nfunction createSphereVertices({ radius = 1, subdivisionsAxis = 24, subdivisionsHeight = 12, startLatitudeInRadians = 0, endLatitudeInRadians = Math.PI, startLongitudeInRadians = 0, endLongitudeInRadians = Math.PI * 2, } = {}) {\n    if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n        throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n    }\n    const latRange = endLatitudeInRadians - startLatitudeInRadians;\n    const longRange = endLongitudeInRadians - startLongitudeInRadians;\n    // We are going to generate our sphere by iterating through its\n    // spherical coordinates and generating 2 triangles for each quad on a\n    // ring of the sphere.\n    const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n    const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n    // Generate the individual vertices in our vertex buffer.\n    for (let y = 0; y <= subdivisionsHeight; y++) {\n        for (let x = 0; x <= subdivisionsAxis; x++) {\n            // Generate a vertex based on its spherical coordinates\n            const u = x / subdivisionsAxis;\n            const v = y / subdivisionsHeight;\n            const theta = longRange * u + startLongitudeInRadians;\n            const phi = latRange * v + startLatitudeInRadians;\n            const sinTheta = Math.sin(theta);\n            const cosTheta = Math.cos(theta);\n            const sinPhi = Math.sin(phi);\n            const cosPhi = Math.cos(phi);\n            const ux = cosTheta * sinPhi;\n            const uy = cosPhi;\n            const uz = sinTheta * sinPhi;\n            positions.push(radius * ux, radius * uy, radius * uz);\n            normals.push(ux, uy, uz);\n            texcoords.push(1 - u, v);\n        }\n    }\n    const numVertsAround = subdivisionsAxis + 1;\n    const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n    for (let x = 0; x < subdivisionsAxis; x++) { // eslint-disable-line\n        for (let y = 0; y < subdivisionsHeight; y++) { // eslint-disable-line\n            // Make triangle 1 of quad.\n            indices.push((y + 0) * numVertsAround + x, (y + 0) * numVertsAround + x + 1, (y + 1) * numVertsAround + x);\n            // Make triangle 2 of quad.\n            indices.push((y + 1) * numVertsAround + x, (y + 0) * numVertsAround + x + 1, (y + 1) * numVertsAround + x + 1);\n        }\n    }\n    return {\n        position: positions.typedArray,\n        normal: normals.typedArray,\n        texcoord: texcoords.typedArray,\n        indices: indices.typedArray,\n    };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n */\nconst CUBE_FACE_INDICES = [\n    [3, 7, 5, 1], // right\n    [6, 2, 0, 4], // left\n    [6, 7, 3, 2], // ??\n    [0, 1, 5, 4], // ??\n    [7, 6, 4, 5], // front\n    [2, 3, 1, 0], // back\n];\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param params\n * @param params.size width, height and depth of the cube. Default = 1\n * @return The created vertices.\n */\nfunction createCubeVertices({ size = 1 } = {}) {\n    const k = size / 2;\n    const cornerVertices = [\n        [-k, -k, -k],\n        [+k, -k, -k],\n        [-k, +k, -k],\n        [+k, +k, -k],\n        [-k, -k, +k],\n        [+k, -k, +k],\n        [-k, +k, +k],\n        [+k, +k, +k],\n    ];\n    const faceNormals = [\n        [1, 0, 0],\n        [-1, 0, 0],\n        [0, 1, 0],\n        [0, -1, 0],\n        [0, 0, 1],\n        [0, 0, -1],\n    ];\n    const uvCoords = [\n        [1, 0],\n        [0, 0],\n        [0, 1],\n        [1, 1],\n    ];\n    const numVertices = 6 * 4;\n    const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n    const indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n    for (let f = 0; f < 6; ++f) {\n        const faceIndices = CUBE_FACE_INDICES[f];\n        for (let v = 0; v < 4; ++v) {\n            const position = cornerVertices[faceIndices[v]];\n            const normal = faceNormals[f];\n            const uv = uvCoords[v];\n            // Each face needs all four vertices because the normals and texture\n            // coordinates are not all the same.\n            positions.push(...position);\n            normals.push(...normal);\n            texcoords.push(...uv);\n        }\n        // Two triangles make a square face.\n        const offset = 4 * f;\n        indices.push(offset + 0, offset + 1, offset + 2);\n        indices.push(offset + 0, offset + 2, offset + 3);\n    }\n    return {\n        position: positions.typedArray,\n        normal: normals.typedArray,\n        texcoord: texcoords.typedArray,\n        indices: indices.typedArray,\n    };\n}\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param params\n * @param params.bottomRadius Bottom radius of truncated cone. Default = 1\n * @param params.topRadius Top radius of truncated cone. Default = 0\n * @param params.height Height of truncated cone. Default = 1\n * @param params.radialSubdivisions The number of subdivisions around the\n *     truncated cone. Default = 24\n * @param params.verticalSubdivisions The number of subdivisions down the\n *     truncated cone. Default = 1\n * @param params.topCap Create top cap. Default = true.\n * @param params.bottomCap Create bottom cap. Default = true.\n * @return The created cone vertices.\n */\nfunction createTruncatedConeVertices({ bottomRadius = 1, topRadius = 0, height = 1, radialSubdivisions = 24, verticalSubdivisions = 1, topCap = true, bottomCap = true, } = {}) {\n    if (radialSubdivisions < 3) {\n        throw new Error('radialSubdivisions must be 3 or greater');\n    }\n    if (verticalSubdivisions < 1) {\n        throw new Error('verticalSubdivisions must be 1 or greater');\n    }\n    const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n    const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n    const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n    const indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n    const vertsAroundEdge = radialSubdivisions + 1;\n    // The slant of the cone is constant across its surface\n    const slant = Math.atan2(bottomRadius - topRadius, height);\n    const cosSlant = Math.cos(slant);\n    const sinSlant = Math.sin(slant);\n    const start = topCap ? -2 : 0;\n    const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n    for (let yy = start; yy <= end; ++yy) {\n        let v = yy / verticalSubdivisions;\n        let y = height * v;\n        let ringRadius;\n        if (yy < 0) {\n            y = 0;\n            v = 1;\n            ringRadius = bottomRadius;\n        }\n        else if (yy > verticalSubdivisions) {\n            y = height;\n            v = 1;\n            ringRadius = topRadius;\n        }\n        else {\n            ringRadius = bottomRadius +\n                (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n        }\n        if (yy === -2 || yy === verticalSubdivisions + 2) {\n            ringRadius = 0;\n            v = 0;\n        }\n        y -= height / 2;\n        for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n            const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n            const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n            positions.push(sin * ringRadius, y, cos * ringRadius);\n            if (yy < 0) {\n                normals.push(0, -1, 0);\n            }\n            else if (yy > verticalSubdivisions) {\n                normals.push(0, 1, 0);\n            }\n            else if (ringRadius === 0.0) {\n                normals.push(0, 0, 0);\n            }\n            else {\n                normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n            }\n            texcoords.push((ii / radialSubdivisions), 1 - v);\n        }\n    }\n    for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) { // eslint-disable-line\n        if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n            continue;\n        }\n        for (let ii = 0; ii < radialSubdivisions; ++ii) { // eslint-disable-line\n            indices.push(vertsAroundEdge * (yy + 0) + 0 + ii, vertsAroundEdge * (yy + 0) + 1 + ii, vertsAroundEdge * (yy + 1) + 1 + ii);\n            indices.push(vertsAroundEdge * (yy + 0) + 0 + ii, vertsAroundEdge * (yy + 1) + 1 + ii, vertsAroundEdge * (yy + 1) + 0 + ii);\n        }\n    }\n    return {\n        position: positions.typedArray,\n        normal: normals.typedArray,\n        texcoord: texcoords.typedArray,\n        indices: indices.typedArray,\n    };\n}\n/**\n * Expands RLE data\n * @param rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param padding value to add each entry with.\n * @return the expanded rleData\n */\nfunction expandRLEData(rleData, padding = []) {\n    padding = padding || [];\n    const data = [];\n    for (let ii = 0; ii < rleData.length; ii += 4) {\n        const runLength = rleData[ii];\n        const element = rleData.slice(ii + 1, ii + 4);\n        element.push(...padding);\n        for (let jj = 0; jj < runLength; ++jj) {\n            data.push(...element);\n        }\n    }\n    return data;\n}\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return The created vertices.\n */\nfunction create3DFVertices() {\n    const positions = [\n        // left column front\n        0, 0, 0,\n        0, 150, 0,\n        30, 0, 0,\n        0, 150, 0,\n        30, 150, 0,\n        30, 0, 0,\n        // top rung front\n        30, 0, 0,\n        30, 30, 0,\n        100, 0, 0,\n        30, 30, 0,\n        100, 30, 0,\n        100, 0, 0,\n        // middle rung front\n        30, 60, 0,\n        30, 90, 0,\n        67, 60, 0,\n        30, 90, 0,\n        67, 90, 0,\n        67, 60, 0,\n        // left column back\n        0, 0, 30,\n        30, 0, 30,\n        0, 150, 30,\n        0, 150, 30,\n        30, 0, 30,\n        30, 150, 30,\n        // top rung back\n        30, 0, 30,\n        100, 0, 30,\n        30, 30, 30,\n        30, 30, 30,\n        100, 0, 30,\n        100, 30, 30,\n        // middle rung back\n        30, 60, 30,\n        67, 60, 30,\n        30, 90, 30,\n        30, 90, 30,\n        67, 60, 30,\n        67, 90, 30,\n        // top\n        0, 0, 0,\n        100, 0, 0,\n        100, 0, 30,\n        0, 0, 0,\n        100, 0, 30,\n        0, 0, 30,\n        // top rung front\n        100, 0, 0,\n        100, 30, 0,\n        100, 30, 30,\n        100, 0, 0,\n        100, 30, 30,\n        100, 0, 30,\n        // under top rung\n        30, 30, 0,\n        30, 30, 30,\n        100, 30, 30,\n        30, 30, 0,\n        100, 30, 30,\n        100, 30, 0,\n        // between top rung and middle\n        30, 30, 0,\n        30, 60, 30,\n        30, 30, 30,\n        30, 30, 0,\n        30, 60, 0,\n        30, 60, 30,\n        // top of middle rung\n        30, 60, 0,\n        67, 60, 30,\n        30, 60, 30,\n        30, 60, 0,\n        67, 60, 0,\n        67, 60, 30,\n        // front of middle rung\n        67, 60, 0,\n        67, 90, 30,\n        67, 60, 30,\n        67, 60, 0,\n        67, 90, 0,\n        67, 90, 30,\n        // bottom of middle rung.\n        30, 90, 0,\n        30, 90, 30,\n        67, 90, 30,\n        30, 90, 0,\n        67, 90, 30,\n        67, 90, 0,\n        // front of bottom\n        30, 90, 0,\n        30, 150, 30,\n        30, 90, 30,\n        30, 90, 0,\n        30, 150, 0,\n        30, 150, 30,\n        // bottom\n        0, 150, 0,\n        0, 150, 30,\n        30, 150, 30,\n        0, 150, 0,\n        30, 150, 30,\n        30, 150, 0,\n        // left side\n        0, 0, 0,\n        0, 0, 30,\n        0, 150, 30,\n        0, 0, 0,\n        0, 150, 30,\n        0, 150, 0,\n    ];\n    const texcoords = [\n        // left column front\n        0.22, 0.19,\n        0.22, 0.79,\n        0.34, 0.19,\n        0.22, 0.79,\n        0.34, 0.79,\n        0.34, 0.19,\n        // top rung front\n        0.34, 0.19,\n        0.34, 0.31,\n        0.62, 0.19,\n        0.34, 0.31,\n        0.62, 0.31,\n        0.62, 0.19,\n        // middle rung front\n        0.34, 0.43,\n        0.34, 0.55,\n        0.49, 0.43,\n        0.34, 0.55,\n        0.49, 0.55,\n        0.49, 0.43,\n        // left column back\n        0, 0,\n        1, 0,\n        0, 1,\n        0, 1,\n        1, 0,\n        1, 1,\n        // top rung back\n        0, 0,\n        1, 0,\n        0, 1,\n        0, 1,\n        1, 0,\n        1, 1,\n        // middle rung back\n        0, 0,\n        1, 0,\n        0, 1,\n        0, 1,\n        1, 0,\n        1, 1,\n        // top\n        0, 0,\n        1, 0,\n        1, 1,\n        0, 0,\n        1, 1,\n        0, 1,\n        // top rung front\n        0, 0,\n        1, 0,\n        1, 1,\n        0, 0,\n        1, 1,\n        0, 1,\n        // under top rung\n        0, 0,\n        0, 1,\n        1, 1,\n        0, 0,\n        1, 1,\n        1, 0,\n        // between top rung and middle\n        0, 0,\n        1, 1,\n        0, 1,\n        0, 0,\n        1, 0,\n        1, 1,\n        // top of middle rung\n        0, 0,\n        1, 1,\n        0, 1,\n        0, 0,\n        1, 0,\n        1, 1,\n        // front of middle rung\n        0, 0,\n        1, 1,\n        0, 1,\n        0, 0,\n        1, 0,\n        1, 1,\n        // bottom of middle rung.\n        0, 0,\n        0, 1,\n        1, 1,\n        0, 0,\n        1, 1,\n        1, 0,\n        // front of bottom\n        0, 0,\n        1, 1,\n        0, 1,\n        0, 0,\n        1, 0,\n        1, 1,\n        // bottom\n        0, 0,\n        0, 1,\n        1, 1,\n        0, 0,\n        1, 1,\n        1, 0,\n        // left side\n        0, 0,\n        0, 1,\n        1, 1,\n        0, 0,\n        1, 1,\n        1, 0,\n    ];\n    const normals = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n        18, 0, 0, 1,\n        // left column back\n        // top rung back\n        // middle rung back\n        18, 0, 0, -1,\n        // top\n        6, 0, 1, 0,\n        // top rung front\n        6, 1, 0, 0,\n        // under top rung\n        6, 0, -1, 0,\n        // between top rung and middle\n        6, 1, 0, 0,\n        // top of middle rung\n        6, 0, 1, 0,\n        // front of middle rung\n        6, 1, 0, 0,\n        // bottom of middle rung.\n        6, 0, -1, 0,\n        // front of bottom\n        6, 1, 0, 0,\n        // bottom\n        6, 0, -1, 0,\n        // left side\n        6, -1, 0, 0,\n    ]);\n    const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n        18, 200, 70, 120,\n        // left column back\n        // top rung back\n        // middle rung back\n        18, 80, 70, 200,\n        // top\n        6, 70, 200, 210,\n        // top rung front\n        6, 200, 200, 70,\n        // under top rung\n        6, 210, 100, 70,\n        // between top rung and middle\n        6, 210, 160, 70,\n        // top of middle rung\n        6, 70, 180, 210,\n        // front of middle rung\n        6, 100, 70, 210,\n        // bottom of middle rung.\n        6, 76, 210, 100,\n        // front of bottom\n        6, 140, 210, 80,\n        // bottom\n        6, 90, 130, 110,\n        // left side\n        6, 160, 160, 220,\n    ], [255]);\n    const numVerts = positions.length / 3;\n    const arrays = {\n        position: createAugmentedTypedArray(3, numVerts, Float32Array),\n        texcoord: createAugmentedTypedArray(2, numVerts, Float32Array),\n        normal: createAugmentedTypedArray(3, numVerts, Float32Array),\n        color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n        indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n    };\n    arrays.position.push(positions);\n    arrays.texcoord.push(texcoords);\n    arrays.normal.push(normals);\n    arrays.color.push(colors);\n    for (let ii = 0; ii < numVerts; ++ii) {\n        arrays.indices.push(ii);\n    }\n    return Object.fromEntries(Object.entries(arrays).map(([k, v]) => [k, v.typedArray]));\n}\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param params\n * @param params.radius Radius of cylinder. Default = 1\n * @param params.height Height of cylinder. Default = 1\n * @param params.radialSubdivisions The number of subdivisions around the cylinder. Default = 24\n * @param params.verticalSubdivisions The number of subdivisions down the cylinder. Default = 1\n * @param params.topCap Create top cap. Default = true.\n * @param params.bottomCap Create bottom cap. Default = true.\n * @return The created vertices.\n */\nfunction createCylinderVertices({ radius = 1, height = 1, radialSubdivisions = 24, verticalSubdivisions = 1, topCap = true, bottomCap = true, } = {}) {\n    return createTruncatedConeVertices({\n        bottomRadius: radius,\n        topRadius: radius,\n        height,\n        radialSubdivisions,\n        verticalSubdivisions,\n        topCap,\n        bottomCap,\n    });\n}\n/**\n * Creates vertices for a torus\n *\n * @param params\n * @param params.radius radius of center of torus circle. Default = 1\n * @param params.thickness radius of torus ring. Default = 0.24\n * @param params.radialSubdivisions The number of subdivisions around the torus. Default = 24\n * @param params.bodySubdivisions The number of subdivisions around the body torus. Default = 12\n * @param params.startAngle start angle in radians. Default = 0.\n * @param params.endAngle end angle in radians. Default = Math.PI * 2.\n * @return The created vertices.\n */\nfunction createTorusVertices({ radius = 1, thickness = 0.24, radialSubdivisions = 24, bodySubdivisions = 12, startAngle = 0, endAngle = Math.PI * 2, } = {}) {\n    if (radialSubdivisions < 3) {\n        throw new Error('radialSubdivisions must be 3 or greater');\n    }\n    if (bodySubdivisions < 3) {\n        throw new Error('verticalSubdivisions must be 3 or greater');\n    }\n    const range = endAngle - startAngle;\n    const radialParts = radialSubdivisions + 1;\n    const bodyParts = bodySubdivisions + 1;\n    const numVertices = radialParts * bodyParts;\n    const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n    const indices = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n    for (let slice = 0; slice < bodyParts; ++slice) {\n        const v = slice / bodySubdivisions;\n        const sliceAngle = v * Math.PI * 2;\n        const sliceSin = Math.sin(sliceAngle);\n        const ringRadius = radius + sliceSin * thickness;\n        const ny = Math.cos(sliceAngle);\n        const y = ny * thickness;\n        for (let ring = 0; ring < radialParts; ++ring) {\n            const u = ring / radialSubdivisions;\n            const ringAngle = startAngle + u * range;\n            const xSin = Math.sin(ringAngle);\n            const zCos = Math.cos(ringAngle);\n            const x = xSin * ringRadius;\n            const z = zCos * ringRadius;\n            const nx = xSin * sliceSin;\n            const nz = zCos * sliceSin;\n            positions.push(x, y, z);\n            normals.push(nx, ny, nz);\n            texcoords.push(u, 1 - v);\n        }\n    }\n    for (let slice = 0; slice < bodySubdivisions; ++slice) { // eslint-disable-line\n        for (let ring = 0; ring < radialSubdivisions; ++ring) { // eslint-disable-line\n            const nextRingIndex = 1 + ring;\n            const nextSliceIndex = 1 + slice;\n            indices.push(radialParts * slice + ring, radialParts * nextSliceIndex + ring, radialParts * slice + nextRingIndex);\n            indices.push(radialParts * nextSliceIndex + ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * slice + nextRingIndex);\n        }\n    }\n    return {\n        position: positions.typedArray,\n        normal: normals.typedArray,\n        texcoord: texcoords.typedArray,\n        indices: indices.typedArray,\n    };\n}\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param params\n * @param params.radius Radius of the ground plane. Default = 1\n * @param params.divisions Number of triangles in the ground plane (at least 3). Default = 24\n * @param params.stacks Number of radial divisions. Default = 1\n * @param params.innerRadius Default = 0\n * @param params.stackPower Power to raise stack size to for decreasing width. Default = 1\n * @return The created vertices.\n */\nfunction createDiscVertices({ radius = 1, divisions = 24, stacks = 1, innerRadius = 0, stackPower = 1, } = {}) {\n    if (divisions < 3) {\n        throw new Error('divisions must be at least 3');\n    }\n    // Note: We don't share the center vertex because that would\n    // mess up texture coordinates.\n    const numVertices = (divisions + 1) * (stacks + 1);\n    const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n    const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n    const indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n    let firstIndex = 0;\n    const radiusSpan = radius - innerRadius;\n    const pointsPerStack = divisions + 1;\n    // Build the disk one stack at a time.\n    for (let stack = 0; stack <= stacks; ++stack) {\n        const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n        for (let i = 0; i <= divisions; ++i) {\n            const theta = 2.0 * Math.PI * i / divisions;\n            const x = stackRadius * Math.cos(theta);\n            const z = stackRadius * Math.sin(theta);\n            positions.push(x, 0, z);\n            normals.push(0, 1, 0);\n            texcoords.push(1 - (i / divisions), stack / stacks);\n            if (stack > 0 && i !== divisions) {\n                // a, b, c and d are the indices of the vertices of a quad.  unless\n                // the current stack is the one closest to the center, in which case\n                // the vertices a and b connect to the center vertex.\n                const a = firstIndex + (i + 1);\n                const b = firstIndex + i;\n                const c = firstIndex + i - pointsPerStack;\n                const d = firstIndex + (i + 1) - pointsPerStack;\n                // Make a quad of the vertices a, b, c, d.\n                indices.push(a, b, c);\n                indices.push(a, c, d);\n            }\n        }\n        firstIndex += divisions + 1;\n    }\n    return {\n        position: positions.typedArray,\n        normal: normals.typedArray,\n        texcoord: texcoords.typedArray,\n        indices: indices.typedArray,\n    };\n}\nfunction allButIndices(name) {\n    return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the vertices by index.\n */\nfunction deindex(arrays) {\n    const indicesP = arrays.indices;\n    const newVertices = {};\n    const indices = makeTypedArrayFromArrayUnion(indicesP, 'indices');\n    const numElements = indices.length;\n    function expandToUnindexed(channel) {\n        const srcBuffer = makeTypedArrayFromArrayUnion(arrays[channel], channel);\n        const numComponents = getNumComponents(srcBuffer, channel);\n        const dstBuffer = createAugmentedTypedArrayFromExisting(numComponents, numElements, srcBuffer);\n        for (let ii = 0; ii < numElements; ++ii) {\n            const ndx = indices[ii];\n            const offset = ndx * numComponents;\n            for (let jj = 0; jj < numComponents; ++jj) {\n                dstBuffer.push(srcBuffer[offset + jj]);\n            }\n        }\n        newVertices[channel] = dstBuffer.typedArray;\n    }\n    Object.keys(arrays).filter(allButIndices).forEach(expandToUnindexed);\n    return newVertices;\n}\n// I don't want to pull in a whole math library\nconst normalize = ([x, y, z]) => {\n    const len = x * x + y * y + z * z;\n    return new Float32Array([x / len, y / len, z / len]);\n};\nconst subtract = (a, b) => {\n    const r = new Float32Array(a.length);\n    for (let i = 0; i < a.length; ++i) {\n        r[i] = a[i] - b[i];\n    }\n    return r;\n};\nconst cross = (a, b) => {\n    const r = new Float32Array(a.length);\n    r[0] = a[1] * b[2] - a[2] * b[1];\n    r[1] = a[2] * b[0] - a[0] * b[2];\n    r[2] = a[0] * b[1] - a[1] * b[0];\n    return r;\n};\n/**\n * Generate triangle normals from positions.\n * Assumes every 3 values is a position and every 3 positions come from the same triangle\n */\nfunction generateTriangleNormals(positions) {\n    const normals = new Float32Array(positions.length);\n    for (let ii = 0; ii < positions.length; ii += 9) {\n        // pull out the 3 positions for this triangle\n        const p0 = positions.subarray(ii, ii + 3);\n        const p1 = positions.subarray(ii + 3, ii + 6);\n        const p2 = positions.subarray(ii + 6, ii + 9);\n        const n0 = normalize(subtract(p0, p1));\n        const n1 = normalize(subtract(p0, p2));\n        const n = cross(n0, n1);\n        // copy them back in\n        normals.set(n, ii);\n        normals.set(n, ii + 3);\n        normals.set(n, ii + 6);\n    }\n    return normals;\n}\n\nvar primitives = {\n    __proto__: null,\n    TypedArrayWrapper: TypedArrayWrapper,\n    create3DFVertices: create3DFVertices,\n    createCubeVertices: createCubeVertices,\n    createCylinderVertices: createCylinderVertices,\n    createDiscVertices: createDiscVertices,\n    createPlaneVertices: createPlaneVertices,\n    createSphereVertices: createSphereVertices,\n    createTorusVertices: createTorusVertices,\n    createTruncatedConeVertices: createTruncatedConeVertices,\n    createXYQuadVertices: createXYQuadVertices,\n    deindex: deindex,\n    generateTriangleNormals: generateTriangleNormals\n};\n\nexport { TypedArrayViewGenerator, copySourceToTexture, copySourcesToTexture, createBufferLayoutsFromArrays, createBuffersAndAttributesFromArrays, createTextureFromImage, createTextureFromImages, createTextureFromSource, createTextureFromSources, drawArrays, generateMipmap, getNumComponents, getSizeAndAlignmentOfUnsizedArrayElement, getSizeForMipFromTexture, getSizeFromSource, guessTextureBindingViewDimensionForTexture, interleaveVertexData, isTypedArray, loadImageBitmap, makeBindGroupLayoutDescriptors, makeShaderDataDefinitions, makeStructuredView, makeTypedArrayFromArrayUnion, makeTypedArrayViews, normalizeGPUExtent3D, numMipLevels, primitives, setIntrinsicsToView, setStructuredValues, setStructuredView, setTypedValues, setVertexAndIndexBuffers, subarray };\n//# sourceMappingURL=webgpu-utils.module.js.map\n","/* eslint-disable require-trailing-comma/require-trailing-comma */\nexport type DataInfo = {\n  copySrc: boolean,\n  copyDst: boolean,\n  storage: boolean,\n  readWriteStorage: boolean,\n};\n\nexport type ColorInfo = DataInfo & {\n  type: 'float' | 'uint' | 'sint' | 'unfilterable-float',\n  bytes: number,\n};\n\nexport type ColorRenderInfo = {\n  blend: boolean,\n  resolve: boolean,\n  byteCost: number,\n  alignment: number,\n};\n\nexport type StencilInfo = DataInfo & {\n  type: 'uint',\n  bytes: number,\n}\n\nexport type DepthInfo = DataInfo & {\n  type: 'depth',\n  bytes?: number,\n}\n\nexport type FormatInfo = {\n  blockWidth: number,\n  blockHeight: number,\n  multisample?: boolean,\n  bytesPerBlock?: number,\n  color?: ColorInfo,\n  colorRender?: ColorRenderInfo,\n  stencil?: StencilInfo,\n  depth?: DepthInfo,\n  baseFormat?: string,\n  feature?: string,\n};\n\n\n\n// exported from the WebGPU CTS by adding the following line to src/webgpu/format_info.ts\n//\n//    console.log(JSON.stringify(kAllTextureFormatInfo, null, 2));\n\n/** `kDepthStencilFormatResolvedAspect[format][aspect]` returns the aspect-specific format for a\n *  depth-stencil format, or `undefined` if the format doesn't have the aspect.\n */\nconst kDepthStencilFormatResolvedAspect = {\n  // kUnsizedDepthStencilFormats\n  depth24plus: {\n    all: 'depth24plus',\n    'depth-only': 'depth24plus',\n    'stencil-only': undefined,\n  },\n  'depth24plus-stencil8': {\n    all: 'depth24plus-stencil8',\n    'depth-only': 'depth24plus',\n    'stencil-only': 'stencil8',\n  },\n\n  // kSizedDepthStencilFormats\n  depth16unorm: {\n    all: 'depth16unorm',\n    'depth-only': 'depth16unorm',\n    'stencil-only': undefined,\n  },\n  depth32float: {\n    all: 'depth32float',\n    'depth-only': 'depth32float',\n    'stencil-only': undefined,\n  },\n  'depth32float-stencil8': {\n    all: 'depth32float-stencil8',\n    'depth-only': 'depth32float',\n    'stencil-only': 'stencil8',\n  },\n  stencil8: {\n    all: 'stencil8',\n    'depth-only': undefined,\n    'stencil-only': 'stencil8',\n  },\n};\n\nexport function getDepthStencilFormatResolvedAspect(format: GPUTextureFormat, aspect: GPUTextureAspect): GPUTextureFormat | undefined {\n  const info = kDepthStencilFormatResolvedAspect[format as keyof typeof kDepthStencilFormatResolvedAspect];\n  return info ? info[aspect] as GPUTextureFormat : undefined;\n}\n\nexport const kAllTextureFormatInfo: {[key: string]: FormatInfo} =  {\n  \"r8unorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 1,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 1\n  },\n  \"r8snorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 1\n  },\n  \"r8uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 1,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 1\n  },\n  \"r8sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 1,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 1\n  },\n  \"rg8unorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 2,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"rg8snorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 2\n  },\n  \"rg8uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 2,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"rg8sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 2,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"rgba8unorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 8,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"baseFormat\": \"rgba8unorm\",\n    \"bytesPerBlock\": 4\n  },\n  \"rgba8unorm-srgb\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 8,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"baseFormat\": \"rgba8unorm\",\n    \"bytesPerBlock\": 4\n  },\n  \"rgba8snorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 4\n  },\n  \"rgba8uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rgba8sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"bgra8unorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 8,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"baseFormat\": \"bgra8unorm\",\n    \"bytesPerBlock\": 4\n  },\n  \"bgra8unorm-srgb\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 8,\n      \"alignment\": 1\n    },\n    \"multisample\": true,\n    \"baseFormat\": \"bgra8unorm\",\n    \"bytesPerBlock\": 4\n  },\n  \"r16uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 2,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"r16sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 2,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"r16float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 2,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"rg16uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rg16sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rg16float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 4,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rgba16uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 8,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 8\n  },\n  \"rgba16sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 8,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 8\n  },\n  \"rgba16float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 8,\n      \"alignment\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 8\n  },\n  \"r32uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": true,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 4\n  },\n  \"r32sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": true,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 4\n  },\n  \"r32float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"unfilterable-float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": true,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 4,\n      \"alignment\": 4\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rg32uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 8,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 8\n  },\n  \"rg32sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 8,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 8\n  },\n  \"rg32float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"unfilterable-float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 8,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 8\n  },\n  \"rgba32uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 16,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 16\n  },\n  \"rgba32sint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"sint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 16,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 16\n  },\n  \"rgba32float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"unfilterable-float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": true,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 16,\n      \"alignment\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 16\n  },\n  \"rgb10a2uint\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": false,\n      \"resolve\": false,\n      \"byteCost\": 8,\n      \"alignment\": 4\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rgb10a2unorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"colorRender\": {\n      \"blend\": true,\n      \"resolve\": true,\n      \"byteCost\": 8,\n      \"alignment\": 4\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"rg11b10ufloat\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 4\n  },\n  \"rgb9e5ufloat\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"multisample\": false,\n    \"bytesPerBlock\": 4\n  },\n  \"stencil8\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"stencil\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 1\n  },\n  \"depth16unorm\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"depth\": {\n      \"type\": \"depth\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 2\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 2\n  },\n  \"depth32float\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"depth\": {\n      \"type\": \"depth\",\n      \"copySrc\": true,\n      \"copyDst\": false,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"multisample\": true,\n    \"bytesPerBlock\": 4\n  },\n  \"depth24plus\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"depth\": {\n      \"type\": \"depth\",\n      \"copySrc\": false,\n      \"copyDst\": false,\n      \"storage\": false,\n      \"readWriteStorage\": false\n    },\n    \"multisample\": true\n  },\n  \"depth24plus-stencil8\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"depth\": {\n      \"type\": \"depth\",\n      \"copySrc\": false,\n      \"copyDst\": false,\n      \"storage\": false,\n      \"readWriteStorage\": false\n    },\n    \"stencil\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"multisample\": true\n  },\n  \"depth32float-stencil8\": {\n    \"blockWidth\": 1,\n    \"blockHeight\": 1,\n    \"depth\": {\n      \"type\": \"depth\",\n      \"copySrc\": true,\n      \"copyDst\": false,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 4\n    },\n    \"stencil\": {\n      \"type\": \"uint\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 1\n    },\n    \"multisample\": true,\n    \"feature\": \"depth32float-stencil8\"\n  },\n  \"bc1-rgba-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc1-rgba-unorm\",\n    \"bytesPerBlock\": 8\n  },\n  \"bc1-rgba-unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc1-rgba-unorm\",\n    \"bytesPerBlock\": 8\n  },\n  \"bc2-rgba-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc2-rgba-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc2-rgba-unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc2-rgba-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc3-rgba-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc3-rgba-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc3-rgba-unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc3-rgba-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc4-r-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"bytesPerBlock\": 8\n  },\n  \"bc4-r-snorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"bytesPerBlock\": 8\n  },\n  \"bc5-rg-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc5-rg-snorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc6h-rgb-ufloat\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc6h-rgb-float\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc7-rgba-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc7-rgba-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"bc7-rgba-unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-bc\",\n    \"baseFormat\": \"bc7-rgba-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"etc2-rgb8unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"baseFormat\": \"etc2-rgb8unorm\",\n    \"bytesPerBlock\": 8\n  },\n  \"etc2-rgb8unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"baseFormat\": \"etc2-rgb8unorm\",\n    \"bytesPerBlock\": 8\n  },\n  \"etc2-rgb8a1unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"baseFormat\": \"etc2-rgb8a1unorm\",\n    \"bytesPerBlock\": 8\n  },\n  \"etc2-rgb8a1unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"baseFormat\": \"etc2-rgb8a1unorm\",\n    \"bytesPerBlock\": 8\n  },\n  \"etc2-rgba8unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"baseFormat\": \"etc2-rgba8unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"etc2-rgba8unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"baseFormat\": \"etc2-rgba8unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"eac-r11unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"bytesPerBlock\": 8\n  },\n  \"eac-r11snorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 8\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"bytesPerBlock\": 8\n  },\n  \"eac-rg11unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"bytesPerBlock\": 16\n  },\n  \"eac-rg11snorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-etc2\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-4x4-unorm\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-4x4-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-4x4-unorm-srgb\": {\n    \"blockWidth\": 4,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-4x4-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-5x4-unorm\": {\n    \"blockWidth\": 5,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-5x4-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-5x4-unorm-srgb\": {\n    \"blockWidth\": 5,\n    \"blockHeight\": 4,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-5x4-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-5x5-unorm\": {\n    \"blockWidth\": 5,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-5x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-5x5-unorm-srgb\": {\n    \"blockWidth\": 5,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-5x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-6x5-unorm\": {\n    \"blockWidth\": 6,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-6x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-6x5-unorm-srgb\": {\n    \"blockWidth\": 6,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-6x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-6x6-unorm\": {\n    \"blockWidth\": 6,\n    \"blockHeight\": 6,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-6x6-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-6x6-unorm-srgb\": {\n    \"blockWidth\": 6,\n    \"blockHeight\": 6,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-6x6-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-8x5-unorm\": {\n    \"blockWidth\": 8,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-8x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-8x5-unorm-srgb\": {\n    \"blockWidth\": 8,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-8x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-8x6-unorm\": {\n    \"blockWidth\": 8,\n    \"blockHeight\": 6,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-8x6-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-8x6-unorm-srgb\": {\n    \"blockWidth\": 8,\n    \"blockHeight\": 6,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-8x6-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-8x8-unorm\": {\n    \"blockWidth\": 8,\n    \"blockHeight\": 8,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-8x8-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-8x8-unorm-srgb\": {\n    \"blockWidth\": 8,\n    \"blockHeight\": 8,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-8x8-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x5-unorm\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x5-unorm-srgb\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 5,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x5-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x6-unorm\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 6,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x6-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x6-unorm-srgb\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 6,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x6-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x8-unorm\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 8,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x8-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x8-unorm-srgb\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 8,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x8-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x10-unorm\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 10,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x10-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-10x10-unorm-srgb\": {\n    \"blockWidth\": 10,\n    \"blockHeight\": 10,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-10x10-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-12x10-unorm\": {\n    \"blockWidth\": 12,\n    \"blockHeight\": 10,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-12x10-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-12x10-unorm-srgb\": {\n    \"blockWidth\": 12,\n    \"blockHeight\": 10,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-12x10-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-12x12-unorm\": {\n    \"blockWidth\": 12,\n    \"blockHeight\": 12,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-12x12-unorm\",\n    \"bytesPerBlock\": 16\n  },\n  \"astc-12x12-unorm-srgb\": {\n    \"blockWidth\": 12,\n    \"blockHeight\": 12,\n    \"color\": {\n      \"type\": \"float\",\n      \"copySrc\": true,\n      \"copyDst\": true,\n      \"storage\": false,\n      \"readWriteStorage\": false,\n      \"bytes\": 16\n    },\n    \"multisample\": false,\n    \"feature\": \"texture-compression-astc\",\n    \"baseFormat\": \"astc-12x12-unorm\",\n    \"bytesPerBlock\": 16\n  }\n};\n","import {\n  kAllTextureFormatInfo\n} from './format-info.js';\n\nfunction bitmaskToString(bitNames: Record<string, number>, mask: number) {\n  const names = [];\n  for (const [k, v] of Object.entries(bitNames)) {\n    if (mask & v) {\n      names.push(k);\n    }\n  }\n  return names.join('|');\n}\n\nexport function bufferUsageToString(mask: number) {\n  return bitmaskToString(GPUBufferUsage as unknown as Record<string, number>, mask);\n}\n\nexport function textureUsageToString(mask: number) {\n  return bitmaskToString(GPUTextureUsage as unknown as Record<string, number>, mask);\n}\n\nexport function unreachable(msg?: string): never {\n  throw Error(`unreachable: ${msg || ''}`);\n}\n\nexport function roundUp(v: number, align: number) {\n  return Math.ceil(v / align) * align;\n}\n\nexport function arraysEqual<T>(a: T[], b: T[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function trimNulls<T>(a: (T | null)[]) {\n  const ndx = a.findLastIndex(v => v !== null);\n  return a.slice(0, ndx + 1);\n}\n\nexport function reifyGPUOrigin3D(e?: GPUOrigin3D) {\n  e = e || [];\n  const d = e as GPUOrigin3DDict;\n  if (typeof d.x === 'number' || typeof d.y === 'number' || typeof d.z === 'number') {\n    return [\n      d.x ?? 0,\n      d.y ?? 0,\n      d.z ?? 0,\n    ];\n  }\n\n  const a = [...(e as number[])];\n  return [\n    a[0] ?? 0,\n    a[1] ?? 0,\n    a[2] ?? 0,\n  ];\n}\n\nexport function reifyGPUExtent3D(e: GPUExtent3D) {\n  const d = e as GPUExtent3DDict;\n  if (typeof d.width === 'number') {\n    return [\n      d.width,\n      d.height ?? 1,\n      d.depthOrArrayLayers ?? 1,\n    ];\n  }\n\n  const a = [...(e as number[])];\n  return [\n    a[0],\n    a[1] ?? 1,\n    a[2] ?? 1,\n  ];\n}\n\nexport function logicalMipLevelSpecificTextureExtent(texture: GPUTexture, mipLevel: number) {\n  switch (texture.dimension) {\n    case '1d':\n      return [\n        Math.max(1, texture.width >> mipLevel),\n        1,\n        1,\n      ];\n    case '2d':\n      return [\n        Math.max(1, texture.width >> mipLevel),\n        Math.max(1, texture.height >> mipLevel),\n        texture.depthOrArrayLayers,\n      ];\n    case '3d':\n      return [\n        Math.max(1, texture.width >> mipLevel),\n        Math.max(1, texture.height >> mipLevel),\n        Math.max(1, texture.depthOrArrayLayers >> mipLevel),\n      ];\n    default:\n      unreachable();\n      return [];\n  }\n}\n\nexport function physicalMipLevelSpecificTextureExtent(texture: GPUTexture, mipLevel: number) {\n  const {\n    blockWidth,\n    blockHeight,\n  } = kAllTextureFormatInfo[texture.format];\n\n  const [width, height, depthOrArrayLayers] = logicalMipLevelSpecificTextureExtent(texture, mipLevel);\n\n  switch (texture.dimension) {\n    case '1d':\n      return [\n        roundUp(width, blockWidth),\n        1,\n        1,\n      ];\n    case '2d':\n    case '3d':\n      return [\n        roundUp(width, blockWidth),\n        roundUp(height, blockHeight),\n        depthOrArrayLayers,\n      ];\n    default:\n      unreachable();\n      return [];\n  }\n}","import {\n  bufferUsageToString,\n  textureUsageToString,\n} from './utils.js';\nexport type LabeledObject =\n  | GPUBindGroup\n  | GPUBindGroupLayout\n  | GPUBuffer\n  | GPUCommandEncoder\n  | GPUComputePassEncoder\n  | GPUComputePipeline\n  | GPUDevice\n  | GPUQuerySet\n  | GPUPipelineLayout\n  | GPURenderPassEncoder\n  | GPURenderPipeline\n  | GPUShaderModule\n  | GPUSampler\n  | GPUTexture\n  | GPUTextureView;\n\nfunction getProperties(o: any) {\n  const keyValues = [];\n  for (const k in o) {\n    const v = o[k];\n    if (typeof v !== 'function') {\n      if (o instanceof GPUBuffer && k === 'usage') {\n        keyValues.push(`${k}: ${v} (${bufferUsageToString(v)})`);\n      } else if (o instanceof GPUTexture && k === 'usage') {\n        keyValues.push(`${k}: ${v} (${textureUsageToString(v)})`);\n      } else {\n        keyValues.push(`${k}: ${JSON.stringify(v)}`);\n      }\n    }\n  }\n  return keyValues.join(', ');\n}\n\nexport function objToString(o: LabeledObject) {\n  return `${o.constructor.name}(${o.label}){${getProperties(o)}}`;\n}\n\nexport function emitError(msg: string, objs: LabeledObject[] = []) {\n  throw new Error(`${msg}\\n${(objs).map(o => objToString(o)).join('\\n')}`);\n}\n\nexport function assert(condition: boolean, msg?: string | (() => string), resources?: any[]): asserts condition {\n  if (!condition) {\n    const lines = (resources || []).map(r => `    ${objToString(r)}`).join('\\n');\n    const m = msg ? (typeof msg === 'string' ? msg : msg()) : '';\n    emitError(`${m}${lines ? `\\n${lines}` : ''}`);\n  }\n}\n","import {\n  assert\n} from './validation.js';\n\ntype EncoderState = 'open' | 'locked' | 'ended';\n\nexport type EncoderInfo = {\n  state: EncoderState;\n}\n\nexport function validateEncoderState(encoder: GPUComputePassEncoder | GPURenderPassEncoder | GPUCommandEncoder | GPURenderBundleEncoder, state: EncoderState) {\n  assert(state === 'open', () => `encoder state(${state}) is not \"open\"`, [encoder]);\n}\n\nconst s_commandEncoderToInfoMap = new WeakMap<GPUCommandEncoder, EncoderInfo>();\n\nexport function createCommandEncoder(commandEncoder: GPUCommandEncoder) {\n  s_commandEncoderToInfoMap.set(commandEncoder, { state: 'open' });\n}\n\nexport function unlockCommandEncoder(commandEncoder: GPUCommandEncoder) {\n  const info = s_commandEncoderToInfoMap.get(commandEncoder)!;\n  assert(info.state === 'locked');\n  info.state = 'open';\n}\n\nexport function lockCommandEncoder(commandEncoder: GPUCommandEncoder) {\n  getCommandBufferInfoAndValidateState(commandEncoder).state = 'locked';\n}\n\nexport function finishCommandEncoder(commandEncoder: GPUCommandEncoder) {\n  getCommandBufferInfoAndValidateState(commandEncoder).state = 'ended';\n}\n\nexport function getCommandBufferInfoAndValidateState(commandEncoder: GPUCommandEncoder) {\n  const info = s_commandEncoderToInfoMap.get(commandEncoder)!;\n  validateEncoderState(commandEncoder, info.state);\n  return info;\n}\n\n\n//function validateBindGroups(this: PassEncoder, _: void) {\n//  const {pipeline, bindGroups} = s_passToState.get(this)!;\n//  if (!pipeline) {\n//    emitError('no pipeline', [this]);\n//    return;\n//  }\n//  // get bind group indices needed for current pipeline\n//  const requiredGroupLayouts = s_pipelineToRequiredGroupLayouts.get(pipeline) || [];\n//  for (const {ndx, layout: requiredLayout} of requiredGroupLayouts) {\n//    const bindGroup = bindGroups[ndx];\n//    if (!bindGroup) {\n//      emitError(`no bindGroup at ndx: ${ndx}`);\n//      return;\n//    }\n//\n//    {\n//      const error = validateBindGroupIsGroupEquivalent(requiredLayout, bindGroup);\n//      if (error) {\n//        emitError(error);\n//        return;\n//      }\n//    }\n//\n//    {\n//      const error = validateMinBindingSize(requiredLayout, bindGroup));\n//      if (eror)\n//      emitErr\n//    }\n//  }\n//}\n\n","/**\n * Adds a wrapper function to a class method that gets called before the actual function\n */\nexport function wrapFunctionBefore<K extends PropertyKey, T extends Record<K,(...args: Parameters<T[K]>) => any>>(\n    API: { prototype: T },\n    fnName: K, fn: (args: Parameters<T[K]>) => void) {\n  const origFn = API.prototype[fnName];\n  API.prototype[fnName] = function (this: T, ...args: Parameters<T[K]>) {\n    fn.call(this, args);\n    return origFn.call(this, ...args);\n  } as any;\n}\n\n/**\n * Adds a wrapper function to a class method that gets called after the actual function\n */\nexport function wrapFunctionAfter<K extends PropertyKey, T extends Record<K,(...args: Parameters<T[K]>) => any>>(\n    API: { prototype: T },\n    fnName: K, fn: (obj: ReturnType<T[K]>, args: Parameters<T[K]>) => void) {\n  const origFn = API.prototype[fnName];\n  API.prototype[fnName] = function (this: T, ...args: Parameters<T[K]>) {\n    const result = origFn.call(this, ...args);\n    fn.call(this, result, args);\n    return result;\n  } as any;\n}\n\n/**\n * Adds a wrapper function to an async class method that gets called after the actual function\n */\nexport function wrapAsyncFunctionAfter<K extends PropertyKey, T extends Record<K,(...args: Parameters<T[K]>) => any>>(\n    API: { prototype: T },\n    fnName: K, fn: (obj: Awaited<ReturnType<T[K]>>, args: Parameters<T[K]>) => void) {\n  const origFn = API.prototype[fnName];\n  API.prototype[fnName] = async function (this: T, ...args: Parameters<T[K]>) {\n    const result = await origFn.call(this, ...args);\n    fn.call(this, result, args);\n    return result;\n  } as any;\n}","// A normal GPUPipelineDescriptor just has references to GPUBindGroupLayout objects\n// but we need the GPUBindGroupLayoutDescriptor for each. They don't exist for\n\nimport { RenderPassLayoutInfo } from './render-commands-mixin.js';\nimport { arraysEqual, trimNulls } from './utils.js';\nimport { wrapFunctionAfter } from \"./wrap-api.js\";\n\ntype BindGroupLayoutDescriptor = {\n  /** this is sparse! */\n  entries: GPUBindGroupLayoutEntry[];\n};\n\nexport type BindGroupLayoutDescriptorPlus = {\n  bindGroupLayoutDescriptor: BindGroupLayoutDescriptor,\n  entriesById: Record<number, GPUBindGroupLayoutEntry>;\n  dynamicOffsetCount: number,\n  signature: string,\n}\n\nexport type ReifiedPipelineLayoutDescriptor = {\n  bindGroupLayoutDescriptors: (BindGroupLayoutDescriptorPlus | undefined)[];\n}\n\nexport const s_bindGroupLayoutToBindGroupLayoutDescriptorPlus = new WeakMap<GPUBindGroupLayout, BindGroupLayoutDescriptorPlus>();\nexport const s_pipelineLayoutToBindGroupLayoutDescriptorsPlus = new WeakMap<GPUPipelineLayout,(BindGroupLayoutDescriptorPlus | undefined)[]>();\n\n// getBindGroupLayout always returns a different object which means we can't\n// use it as a key in a map to look up it's layout descriptor ┌∩┐(◣_◢)┌∩┐\nfunction trackNewBindGroupLayout(this: GPUComputePipeline | GPURenderPipeline, layout: GPUBindGroupLayout, [group]: [number]) {\n  // We need to associate this with it's BindGroupLayoutDescriptorPlus\n  const pipelineLayout = s_pipelineToReifiedPipelineLayoutDescriptor.get(this)!;\n  const descPlus = pipelineLayout.bindGroupLayoutDescriptors[group];\n  if (descPlus) {\n    s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.set(layout, descPlus);\n  }\n}\n\nwrapFunctionAfter(GPUComputePipeline, 'getBindGroupLayout', trackNewBindGroupLayout);\nwrapFunctionAfter(GPURenderPipeline, 'getBindGroupLayout', trackNewBindGroupLayout);\n\n// We're using JSON.stringify to make a hash/id\n// so we need the properties to be in the same order\nexport function createRenderPassLayout(\n  colorFormats: (GPUTextureFormat | null | undefined)[],\n  sampleCount: number,\n  depthStencilFormat?: GPUTextureFormat,\n): RenderPassLayout {\n  return {\n    colorFormats,\n    sampleCount,\n    ...(depthStencilFormat && {depthStencilFormat}),\n  };\n}\n\nexport type RenderPassLayout = {\n  colorFormats: (GPUTextureFormat | null | undefined)[];\n  depthStencilFormat?: GPUTextureFormat;\n  sampleCount: number;\n};\n\ntype RenderPipelineDescriptor = {\n    vertex: GPUVertexState,\n    primitive?: GPUPrimitiveState,\n    depthStencil?: GPUDepthStencilState,\n    multisample?: GPUMultisampleState,\n    fragment?: GPUFragmentState,\n    passLayoutInfo: RenderPassLayoutInfo,\n};\n\nexport function renderPassLayoutsEqual(a: RenderPassLayout, b: RenderPassLayout) {\n  return a.sampleCount === b.sampleCount &&\n         a.depthStencilFormat === b.depthStencilFormat &&\n         arraysEqual(a.colorFormats, b.colorFormats);\n}\n\n\nexport const s_renderPipelineToRenderPipelineDescriptor = new WeakMap<GPURenderPipeline, RenderPipelineDescriptor>();\nexport const s_pipelineToReifiedPipelineLayoutDescriptor = new WeakMap<GPUPipelineBase, ReifiedPipelineLayoutDescriptor>();\n\nfunction reifyConstants(c: Record<string, number>) {\n  return { ...c };\n}\n\nfunction reifyProgramableStage(ps: GPUProgrammableStage) {\n  const { /*module,*/ entryPoint, constants } = ps;\n  return {\n    ...(entryPoint && { entryPoint }),\n    ...(constants && { constants: reifyConstants(constants) }),\n  } as GPUProgrammableStage;\n}\n\nfunction reifyVertexAttribute(attr: GPUVertexAttribute): GPUVertexAttribute {\n  const { format, offset, shaderLocation } = attr;\n  return { format, offset, shaderLocation };\n}\n\nfunction reifyVertexBufferLayout(buffer: GPUVertexBufferLayout): GPUVertexBufferLayout {\n  const { arrayStride, stepMode = 'vertex', attributes } = buffer;\n  return {\n    arrayStride,\n    stepMode,\n    attributes: [...attributes].map(reifyVertexAttribute),\n  };\n}\n\nfunction reifyVertexState(vertex: GPUVertexState): GPUVertexState {\n  const { buffers } = vertex;\n  return {\n    ...reifyProgramableStage(vertex),\n    ...(buffers && { buffers: [...buffers].map(b => b ? reifyVertexBufferLayout(b) : null) }),\n  };\n}\n\nfunction reifyBlendComponent(bc: GPUBlendComponent): GPUBlendComponent {\n  const { operation = 'add', srcFactor = 'one', dstFactor = 'zero' } = bc;\n  return {\n    operation,\n    srcFactor,\n    dstFactor,\n  };\n}\n\nfunction reifyBlendState(blend: GPUBlendState): GPUBlendState {\n  return {\n    color: reifyBlendComponent(blend.color),\n    alpha: reifyBlendComponent(blend.alpha),\n  };\n}\n\nfunction reifyColorTargetState(cts: GPUColorTargetState): GPUColorTargetState {\n  const { format, blend, writeMask } = cts;\n  return {\n    format,\n    ...(blend && {blend: reifyBlendState(blend)}),\n    writeMask: writeMask ?? 0xF,\n  };\n}\nfunction reifyFragmentState(fragment: GPUFragmentState): GPUFragmentState {\n  return {\n    ...reifyProgramableStage(fragment),\n    targets: [...fragment.targets].map(t => t ? reifyColorTargetState(t) : null),\n  };\n}\n\nfunction reifyPrimitiveState(p: GPUPrimitiveState): GPUPrimitiveState {\n  const {\n    topology = 'triangle-list',\n    stripIndexFormat,\n    frontFace = 'ccw',\n    cullMode = 'none',\n    // unclippedDepth,\n  } = p;\n  return {\n    topology,\n    ...(stripIndexFormat && { stripIndexFormat }),\n    frontFace,\n    cullMode,\n  };\n}\n\nfunction reifyStencilFaceState(sf: GPUStencilFaceState): GPUStencilFaceState {\n  const {\n    compare = \"always\",\n    failOp = \"keep\",\n    depthFailOp = \"keep\",\n    passOp = \"keep\",\n  } = sf;\n  return {\n    compare, failOp, depthFailOp, passOp,\n  };\n}\n\nfunction reifyDepthStencilState(ds: GPUDepthStencilState): GPUDepthStencilState {\n  const {\n    format,\n    depthWriteEnabled,\n    depthCompare,\n    stencilFront,\n    stencilBack,\n    stencilReadMask = 0xFFFFFFFF,\n    stencilWriteMask = 0xFFFFFFFF,\n    depthBias = 0,\n    depthBiasSlopeScale = 0,\n    depthBiasClamp = 0,\n  } = ds;\n  return {\n    format,\n    ...(depthCompare && { depthCompare }),\n    ...(depthWriteEnabled !== undefined && { depthWriteEnabled }),\n    ...(stencilFront && { stencilFront: reifyStencilFaceState(stencilFront) }),\n    ...(stencilBack && { stencilBack: reifyStencilFaceState(stencilBack) }),\n    stencilReadMask,\n    stencilWriteMask,\n    depthBias,\n    depthBiasSlopeScale,\n    depthBiasClamp,\n  };\n}\n\nfunction reifyMultisampleState(ms: GPUMultisampleState): GPUMultisampleState {\n  const {\n    count = 1,\n    mask = 0xFFFFFFFF,\n    alphaToCoverageEnabled = false,\n  } = ms;\n  return { count, mask, alphaToCoverageEnabled };\n}\n\nfunction reifyRenderPipelineDescriptor(desc: GPURenderPipelineDescriptor): RenderPipelineDescriptor {\n  const {\n    vertex,\n    fragment,\n    primitive,\n    depthStencil,\n    multisample,\n  } = desc;\n  const renderPassLayout = createRenderPassLayout(\n    fragment ? trimNulls([...fragment.targets].map(t => t ? t.format : null)) : [],\n    multisample?.count || 1,\n    depthStencil?.format);\n  return {\n    vertex: reifyVertexState(vertex),\n    ...(fragment && reifyFragmentState(fragment)),\n    ...(primitive && reifyPrimitiveState(primitive)),\n    ...(depthStencil && reifyDepthStencilState(depthStencil)),\n    ...(multisample && reifyMultisampleState(multisample)),\n    passLayoutInfo: {\n      renderPassLayout,\n      passLayoutSignature: JSON.stringify(renderPassLayout),\n    },\n  };\n}\n\nexport function trackRenderPipelineDescriptor(pipeline: GPURenderPipeline, desc: GPURenderPipelineDescriptor) {\n  s_renderPipelineToRenderPipelineDescriptor.set(pipeline, reifyRenderPipelineDescriptor(desc));\n}\n","import {\n  DeviceResource,\n  s_objToDevice,\n} from './object-to-device.js';\nimport { BindGroupLayoutDescriptorPlus } from './pipeline.js';\nimport {\n  assert,\n  objToString,\n} from './validation.js';\nimport {\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\nexport {\n  DeviceResource,\n  s_objToDevice,\n};\n\nexport type Destroyable = GPUTexture | GPUBuffer | GPUQuerySet | GPUDevice;\n\nconst s_destroyedResource = new WeakSet<Destroyable>();\n\nexport function assertNotDestroyed(obj: Destroyable) {\n  assert(!s_destroyedResource.has(obj), () => `${objToString(obj)} is destroyed`);\n}\n\nlet s_nextId = 1;\nconst s_objectToId = new WeakMap<DeviceResource, number>();\nexport function getIdForObject(obj: DeviceResource) {\n  let id = s_objectToId.get(obj);\n  if (id) {\n    return id;\n  }\n  id = s_nextId++;\n  s_objectToId.set(obj, id);\n  return id;\n}\n\nwrapFunctionBefore(GPUBuffer, 'destroy', function (this: GPUBuffer) {\n  s_destroyedResource.add(this);\n});\n\nwrapFunctionBefore(GPUTexture, 'destroy', function (this: GPUTexture) {\n  s_destroyedResource.add(this);\n});\n\nwrapFunctionBefore(GPUQuerySet, 'destroy', function (this: GPUQuerySet) {\n  s_destroyedResource.add(this);\n});\n\nwrapFunctionBefore(GPUDevice, 'destroy', function (this: GPUDevice) {\n  s_destroyedResource.add(this);\n});\n\nexport type BindGroupInfo = {\n  layoutPlus: BindGroupLayoutDescriptorPlus,\n  entries: GPUBindGroupEntry[],\n};\n\nexport const s_bindGroupToInfo = new WeakMap<GPUBindGroup, BindGroupInfo>();\n","import {\n  getDepthStencilFormatResolvedAspect,\n} from './format-info.js';\nimport {\n  wrapFunctionBefore,\n  wrapFunctionAfter,\n} from './wrap-api.js';\n\nexport type TextureViewDescriptor = {\n  format: GPUTextureFormat;\n  dimension: GPUTextureViewDimension;\n  aspect: GPUTextureAspect;\n  baseMipLevel: GPUIntegerCoordinate;\n  mipLevelCount: GPUIntegerCoordinate;\n  baseArrayLayer: GPUIntegerCoordinate;\n  arrayLayerCount: GPUIntegerCoordinate;\n};\nexport const s_textureViewToTexture = new WeakMap<GPUTextureView, GPUTexture>();\nexport const s_textureViewToDesc = new WeakMap<GPUTextureView, TextureViewDescriptor>();\n\nfunction resolveTextureAspect(format: GPUTextureFormat, aspect: GPUTextureAspect) {\n  switch (aspect) {\n    case 'all':\n      return format;\n    case 'depth-only':\n    case 'stencil-only':\n      return getDepthStencilFormatResolvedAspect(format, aspect);\n  }\n  return undefined;\n}\n\nfunction reifyTextureViewDescriptor(texture: GPUTexture, desc: GPUTextureViewDescriptor | undefined): TextureViewDescriptor {\n  const dimension = desc?.dimension ?? (\n      texture.dimension === '2d'\n        ? (texture.depthOrArrayLayers === 1 ? '2d' : '2d-array')\n        : texture.dimension\n      );\n  const aspect = desc?.aspect ?? 'all';\n  let format = desc?.format;\n  if (!format) {\n    const f = resolveTextureAspect(texture.format, aspect);\n    format = f ?? texture.format;\n  }\n  return {\n    format,\n    dimension,\n    aspect,\n    baseMipLevel: desc?.baseMipLevel ?? 0,\n    mipLevelCount: desc?.mipLevelCount ?? (texture.mipLevelCount - (desc?.baseMipLevel ?? 0)),\n    baseArrayLayer: desc?.baseArrayLayer ?? 0,\n    arrayLayerCount: desc?.arrayLayerCount ?? (\n      dimension === 'cube'\n        ? 6\n        : (dimension === '2d-array' || dimension === 'cube-array'\n           ? texture.depthOrArrayLayers - (desc?.baseArrayLayer ?? 0)\n           : 1\n          )\n      ),\n  };\n}\n\nlet lastDesc: GPUTextureViewDescriptor | undefined;\nwrapFunctionBefore(GPUTexture, 'createView', function (this: GPUTexture, [desc]) {\n  lastDesc = desc;\n});\n\nwrapFunctionAfter(GPUTexture, 'createView', function (this: GPUTexture, view: GPUTextureView) {\n  s_textureViewToTexture.set(view, this);\n  s_textureViewToDesc.set(view, reifyTextureViewDescriptor(this, lastDesc));\n});\n","import {\n  EncoderInfo,\n  validateEncoderState,\n} from './encoder-utils.js';\nimport {\n  BindGroupLayoutDescriptorPlus,\n  s_pipelineToReifiedPipelineLayoutDescriptor,\n} from './pipeline.js';\nimport {\n  BindGroupInfo,\n  assertNotDestroyed,\n  getIdForObject,\n  s_bindGroupToInfo,\n  s_objToDevice,\n} from './shared-state.js';\nimport { s_textureViewToDesc, s_textureViewToTexture } from './texture.js';\nimport {\n  assert,\n} from './validation.js';\nimport {\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\nexport type BindGroupBinding = {\n  bindGroup: GPUBindGroup,\n  dynamicOffsets?: Uint32Array,\n} | undefined;\n\nexport type PassInfo = EncoderInfo & {\n  bindGroups: BindGroupBinding[],\n}\n\ntype BindingMixin =\n  | GPUComputePassEncoder\n  | GPURenderPassEncoder\n  | GPURenderBundleEncoder;\n\ntype Ctor<T extends BindingMixin> = {\n   new (): never;\n   prototype: T;\n};\n\nfunction getResourceFromBindingResource(bindingResource: GPUBindingResource) {\n  if (bindingResource instanceof GPUTextureView) {\n    return s_textureViewToTexture.get(bindingResource)!;\n  } else if (bindingResource instanceof GPUSampler ||\n        bindingResource instanceof GPUExternalTexture ||\n        bindingResource instanceof GPUBuffer) {\n    return bindingResource;\n  } else {\n    return bindingResource.buffer;\n  }\n}\n\nconst autoIdRE = /^(.*?)autoId\\((\\d+)\\)/;\nfunction generateErrorMessageForMismatchedBindGroupLayouts(group: number, bindGroupInfo: BindGroupInfo, bindGroupLayoutDescriptor: BindGroupLayoutDescriptorPlus) {\n  const bgAuto = autoIdRE.exec(bindGroupInfo.layoutPlus.signature);\n  const bglAuto = autoIdRE.exec(bindGroupLayoutDescriptor.signature);\n  if (bgAuto || bglAuto) {\n    // are they both auto?\n    if (!bgAuto === !bglAuto) {\n      if (bgAuto![2] !== bglAuto![2]) {\n      return `bindGroup in group(${group}) is not compatible with pipeline requirements for that group \\\nbecause they are from different layout: 'auto' pipelines.`;\n      }\n    } else {\n      return `bindGroup in group(${group}) is not compatible with pipeline requirements for that group \\\nbecause bindGroup's layout ${bgAuto ? 'is' : 'is not'} from a layout: 'auto' pipeline \\\nand the pipeline's bindGroup layout requirements ${bglAuto ? 'is' : 'is not'} from a layout: 'auto' pipeline`;\n    }\n  }\n  return `bindGroup in group(${group}) is not compatible with pipeline requirements for that group\n\nbindGroup.layout = ${JSON.stringify(bindGroupInfo.layoutPlus.bindGroupLayoutDescriptor, null, 2)}\n\npipeline.group[${group}] requirements = ${JSON.stringify(bindGroupLayoutDescriptor.bindGroupLayoutDescriptor, null, 2)}`;\n}\n\nexport function validateEncoderBindGroups(bindGroups: BindGroupBinding[], pipeline?: GPURenderPipeline | GPUComputePipeline) {\n  assert(!!pipeline, 'no pipeline set');\n  const device = s_objToDevice.get(pipeline);\n\n  const reifiedPipelineDescriptor = s_pipelineToReifiedPipelineLayoutDescriptor.get(pipeline)!;\n  reifiedPipelineDescriptor.bindGroupLayoutDescriptors.forEach((bindGroupLayoutDescriptor, group) => {\n    if (bindGroupLayoutDescriptor === undefined) {\n      return;\n    }\n    const binding = bindGroups[group];\n    assert(!!binding, () => `required bindGroup missing from group(${group})`);\n    const bindGroupInfo = s_bindGroupToInfo.get(binding.bindGroup)!;\n    assert(\n      bindGroupInfo.layoutPlus.signature === bindGroupLayoutDescriptor.signature,\n      () => generateErrorMessageForMismatchedBindGroupLayouts(group, bindGroupInfo, bindGroupLayoutDescriptor),\n    );\n    for (const {binding, resource: bindingResource} of bindGroupInfo.entries) {\n      const resource = getResourceFromBindingResource(bindingResource);\n      if (resource instanceof GPUTexture || resource instanceof GPUBuffer) {\n        assertNotDestroyed(resource);\n      }\n      assert(s_objToDevice.get(resource) === device, () => `texture at binding(${binding}) group(${group}) is not from same device`, [resource]);\n    }\n  });\n\n  const bindGroupSpaceUsed = 0;\n  return bindGroupSpaceUsed;\n}\n\nexport function validateBindGroupResourcesNotDestroyed(entries: GPUBindGroupEntry[]) {\n for (const {resource} of entries) {\n    if (resource instanceof GPUTextureView) {\n      const texture = s_textureViewToTexture.get(resource)!;\n      assertNotDestroyed(texture);\n    } else {\n      const asBufferBinding = resource as GPUBufferBinding;\n      const buffer = asBufferBinding.buffer;\n      if (buffer instanceof GPUBuffer) {\n        assertNotDestroyed(buffer);\n      }\n    }\n  }\n}\n\n\n\ntype BoundBufferRange = {\n  bindGroupLayoutEntry: GPUBindGroupLayoutEntry,\n  resource: GPUBufferBinding,\n};\n\nfunction makeIdForBoundBufferRange(boundBufferRange: BoundBufferRange) {\n  const { binding, visibility, buffer: b } = boundBufferRange.bindGroupLayoutEntry;\n  const { type = 'uniform', hasDynamicOffset = false, minBindingSize = 0 } = b!;\n  const { buffer, offset = 0, size } = boundBufferRange.resource;\n  return `\n${binding}]\n${visibility}\n${type}\n${hasDynamicOffset}\n${minBindingSize}\n${getIdForObject(buffer)}\n${offset}\n${size}\n`;\n}\n\nfunction boundBufferRanges(info: BindGroupInfo, dynamicOffsets: Uint32Array) {\n  const result = new Map<string, BoundBufferRange>();\n  let dynamicOffsetIndex = 0;\n  for (const bindGroupEntry of info.entries) {\n    const bindGroupLayoutEntry = info.layoutPlus.entriesById[bindGroupEntry.binding];\n    if (!bindGroupLayoutEntry.buffer) {\n      continue;\n    }\n    const bound = {\n      offset: 0,\n      ...bindGroupEntry.resource,\n    } as GPUBufferBinding;\n    if (bindGroupLayoutEntry.buffer.hasDynamicOffset) {\n      bound.offset! += dynamicOffsets[dynamicOffsetIndex++];\n    }\n    const boundBufferRange = {\n      bindGroupLayoutEntry,\n      resource: bound,\n    };\n    result.set(makeIdForBoundBufferRange(boundBufferRange), boundBufferRange);\n  }\n  return result;\n}\n\nfunction intersect(aStart: number, aLen: number, bStart: number, bLen: number) {\n  const aEnd = aStart + aLen;\n  const bEnd = bStart + bLen;\n  return (aEnd > bStart) && (aStart < bEnd);\n}\n\nfunction isBufferBindingAliasing(a: GPUBufferBinding, b: GPUBufferBinding) {\n  if (a.buffer !== b.buffer) {\n    return false;\n  }\n  const aSize = a.size ?? a.buffer.size;\n  const bSize = b.size ?? b.buffer.size;\n  const aStart = a.offset ?? 0;\n  const bStart = b.offset ?? 0;\n  return intersect(aStart, aSize, bStart, bSize);\n}\n\nfunction aspectToBits(aspect: GPUTextureAspect): number {\n  switch (aspect) {\n    case 'stencil-only': return 1;\n    case 'depth-only': return 2;\n    case 'all': return 3;\n  }\n  throw new Error('unreachable');\n}\n\nfunction isTextureViewAliasing(a: GPUTextureView, b: GPUTextureView) {\n  const aTex = s_textureViewToTexture.get(a);\n  const bTex = s_textureViewToTexture.get(b);\n  if (aTex !== bTex) {\n    return false;\n  }\n  const aInfo = s_textureViewToDesc.get(a)!;\n  const bInfo = s_textureViewToDesc.get(b)!;\n\n  const aAspect = aspectToBits(aInfo.aspect);\n  const bAspect = aspectToBits(bInfo.aspect);\n\n  if ((aAspect & bAspect) === 0) {\n    return false;\n  }\n\n  const layersIntersect = intersect(aInfo.baseArrayLayer, aInfo.arrayLayerCount, bInfo.baseArrayLayer, bInfo.arrayLayerCount);\n  if (!layersIntersect) {\n    return false;\n  }\n  return intersect(aInfo.baseMipLevel, aInfo.mipLevelCount, bInfo.baseMipLevel, bInfo.mipLevelCount);\n}\n\nconst kStages = [\n  GPUShaderStage.VERTEX,\n  GPUShaderStage.FRAGMENT,\n  GPUShaderStage.COMPUTE,\n];\n\nexport function encoderBindGroupsAliasAWritableResource(\n    bindGroups: BindGroupBinding[],\n    dynamicOffsets: Uint32Array[],\n    bindGroupLayoutDescriptorPlus: BindGroupLayoutDescriptorPlus[]) {\n  for (const stage of kStages) {\n    const bufferBindings = new Map<GPUBufferBinding, boolean>();\n    const textureViews = new Map<GPUTextureView, boolean>();\n    for (let bindGroupIndex = 0; bindGroupIndex < bindGroups.length; ++bindGroupIndex) {\n      const bindGroupBinding = bindGroups[bindGroupIndex];\n      if (!bindGroupBinding) {\n        continue;\n      }\n      const bindGroupInfo = s_bindGroupToInfo.get(bindGroupBinding.bindGroup)!;\n\n      // check buffers\n      const bufferRanges = boundBufferRanges(bindGroupInfo, dynamicOffsets[bindGroupIndex]);\n      for (const {bindGroupLayoutEntry, resource} of bufferRanges.values()) {\n        if ((bindGroupLayoutEntry.visibility & stage) === 0) {\n          continue;\n        }\n        const resourceWritable = bindGroupLayoutEntry.buffer!.type === 'storage';\n        for (const [pastResource, pastResourceWritable] of bufferBindings.entries()) {\n          if ((resourceWritable || pastResourceWritable) && isBufferBindingAliasing(pastResource, resource)) {\n            return true;\n          }\n        }\n        bufferBindings.set(resource, resourceWritable);\n      }\n\n      // check textures\n      const textureEntries = bindGroupLayoutDescriptorPlus[bindGroupIndex].bindGroupLayoutDescriptor.entries.filter(e => (e.visibility & stage) !== 0 && (e.texture || e.storageTexture));\n      for (const entry of textureEntries) {\n        const resource = bindGroupInfo.entries[entry.binding].resource as GPUTextureView;\n        const access = entry.storageTexture?.access;\n        const resourceWritable = access === 'read-write' || access === 'write-only';\n        if (!entry.storageTexture) {\n          continue;\n        }\n        for (const [pastResource, pastResourceWritable] of textureViews.entries()) {\n          if ((resourceWritable || pastResourceWritable) && isTextureViewAliasing(pastResource, resource)) {\n            return true;\n          }\n        }\n        textureViews.set(resource, resourceWritable);\n      }\n    }\n  }\n  return false;\n}\n\nfunction* forEachDynamicBinding(info: BindGroupInfo) {\n  let dynamicOffsetIndex = 0;\n  for (const entry of info.entries) {\n    const bindingDescriptor = info.layoutPlus.entriesById[entry.binding];\n    if (bindingDescriptor.buffer?.hasDynamicOffset) {\n      const bufferBinding = entry.resource as GPUBufferBinding;\n      const bufferLayout = bindingDescriptor.buffer;\n      yield {bufferBinding, bufferLayout, dynamicOffsetIndex};\n      ++dynamicOffsetIndex;\n    }\n  }\n}\n\nexport function wrapBindingCommandsMixin<T extends BindingMixin>(\n  API: Ctor<T>,\n  s_passToPassInfoMap: WeakMap<T, PassInfo>) {\n\n  wrapFunctionBefore(API, 'setBindGroup', function (this: T, [index, bindGroup, dynamicOffsetsArg, dynamicOffsetDataStart, dynamicOffsetDataLength]) {\n    const info = s_passToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    const bindGroupBindings = info.bindGroups;\n\n    const dynamicOffsetCount = bindGroup\n      ? s_bindGroupToInfo.get(bindGroup)!.layoutPlus.dynamicOffsetCount\n      : 0;\n    dynamicOffsetsArg = dynamicOffsetsArg ? new Uint32Array(dynamicOffsetsArg) : new Uint32Array(0);\n    dynamicOffsetDataStart = dynamicOffsetDataStart ?? 0;\n    dynamicOffsetDataLength = dynamicOffsetDataLength ?? dynamicOffsetsArg.length;\n    const dynamicOffsets = dynamicOffsetsArg.slice(dynamicOffsetDataStart, dynamicOffsetDataLength);\n\n    assert(dynamicOffsets.length === dynamicOffsetCount, `there must be the same number of dynamicOffsets(${dynamicOffsets.length}) as the layout requires (${dynamicOffsetCount})`);\n\n    const device = s_objToDevice.get(this)!;\n    const maxIndex = device.limits.maxBindGroups;\n    assert(index >= 0, () => `index(${index}) must be >= 0`);\n    assert(index < maxIndex, () => `index(${index}) must be < device.limits.maxBindGroups(${maxIndex})`);\n    if (bindGroup) {\n      assert(device === s_objToDevice.get(bindGroup), () => `bindGroup must be from same device as ${parent.constructor.name}`, [bindGroup, parent]);\n\n      // Validate resources are not destroyed\n      const info = s_bindGroupToInfo.get(bindGroup)!;\n      validateBindGroupResourcesNotDestroyed(info.entries);\n\n      // Validate Dynamic Offsets\n      for (const {bufferBinding, bufferLayout, dynamicOffsetIndex} of forEachDynamicBinding(info)) {\n        const dynamicOffset = dynamicOffsets[dynamicOffsetIndex];\n        assert((bufferBinding.offset || 0) + dynamicOffset + (bufferLayout.minBindingSize || 0) <= bufferBinding.buffer.size, 'dynamic offset is out of range');\n        switch (bufferLayout.type) {\n          case 'uniform':\n            assert(dynamicOffset % device.limits.minUniformBufferOffsetAlignment === 0, () => `dynamicOffset[${dynamicOffsetIndex}](${dynamicOffset}) used for a uniform buffer is not a multiple of device.limits.minUniformBufferOffsetAlignment(${device.limits.minUniformBufferOffsetAlignment})`);\n            break;\n          case 'storage':\n          case 'read-only-storage':\n            assert(dynamicOffset % device.limits.minStorageBufferOffsetAlignment === 0, () => `dynamicOffset[${dynamicOffsetIndex}](${dynamicOffset}) used for a uniform buffer is not a multiple of device.limits.minStorageBufferOffsetAlignment(${device.limits.minStorageBufferOffsetAlignment})`);\n            break;\n        }\n      }\n\n      bindGroupBindings[index] = {\n        bindGroup,\n        dynamicOffsets,\n      };\n    } else {\n      bindGroupBindings[index] = undefined;\n    }\n  });\n\n}\n\n","import {\n  PassInfo,\n  validateEncoderBindGroups,\n} from './binding-mixin.js';\nimport {\n  validateEncoderState,\n} from './encoder-utils.js';\nimport {\n  assertNotDestroyed,\n  s_objToDevice,\n} from './shared-state.js';\nimport {\n  assert,\n} from './validation.js';\nimport {\n  RenderPassLayout,\n  s_renderPipelineToRenderPipelineDescriptor,\n} from './pipeline.js';\nimport {\n  bufferUsageToString,\n} from './utils.js';\nimport {\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\ntype RenderMixin = GPURenderPassEncoder | GPURenderBundleEncoder;\n\ntype BufferWithOffsetAndSize = {\n  buffer: GPUBuffer,\n  offset: number,\n  size: number,\n};\n\nexport type RenderDrawInfo = PassInfo & {\n  pipeline?: GPURenderPipeline,\n  indexBuffer?: BufferWithOffsetAndSize,\n  indexFormat?: GPUIndexFormat,\n  vertexBuffers: (BufferWithOffsetAndSize | undefined)[],\n};\n\nfunction toArray<T>(v: Iterable<T>): T[] {\n  return Array.isArray(v) ? v : [...v];\n}\n\ntype VertexBufferValidationFn = (slot: number, layout: GPUVertexBufferLayout, vertexBufferBinding: BufferWithOffsetAndSize) => void;\n\nfunction validateValidToDraw(mixin: RenderMixin, info: RenderDrawInfo, fn: VertexBufferValidationFn) {\n  const bindGroupSpaceUsed = validateEncoderBindGroups(info.bindGroups, info.pipeline);\n  const pipelineDescriptor = s_renderPipelineToRenderPipelineDescriptor.get(info.pipeline!)!;\n  const device = s_objToDevice.get(mixin)!;\n  let vertexBufferSpaceUsed = 0;\n  if (pipelineDescriptor.vertex.buffers) {\n    // buffers is sequence so no forEach, convert to array\n    const buffers = toArray(pipelineDescriptor.vertex.buffers);\n    buffers.forEach((buffer, slot) => {\n      if (buffer) {\n        const vertexBufferBinding = info.vertexBuffers[slot];\n        assert(!!vertexBufferBinding, () => `no vertexBuffer in slot(${slot})`);\n        assertNotDestroyed(vertexBufferBinding.buffer);\n        fn(slot, buffer, vertexBufferBinding);\n        // don't need to check that vertex buffer is same device as was checked at setVertexBuffer\n        vertexBufferSpaceUsed = slot;\n      }\n    });\n  }\n\n  // TODO: test!\n  assert(\n    bindGroupSpaceUsed + vertexBufferSpaceUsed <= device.limits.maxBindGroupsPlusVertexBuffers,\n    () => `bindGroupSpaceUsed(${bindGroupSpaceUsed}) + vertexBufferSpaceUsed(${vertexBufferSpaceUsed}) <= device.limits.maxBindGroupsPlusVertexBuffers(${device.limits.maxBindGroupsPlusVertexBuffers})`);\n}\n\nfunction validateValidToDrawIndexed(mixin: RenderMixin, info: RenderDrawInfo, fn: VertexBufferValidationFn) {\n  assert(!!info.indexBuffer, 'indexBuffer is not set');\n  const device = s_objToDevice.get(mixin)!;\n  assertNotDestroyed(info.indexBuffer.buffer);\n  assert(device === s_objToDevice.get(info.indexBuffer.buffer), 'indexBuffer is not from same device');\n  validateValidToDraw(mixin, info, fn);\n\n  const pipelineDescriptor = s_renderPipelineToRenderPipelineDescriptor.get(info.pipeline!)!;\n  switch (pipelineDescriptor.primitive?.topology) {\n    case 'line-strip':\n    case 'triangle-strip':\n      assert(\n        info.indexFormat === pipelineDescriptor.primitive?.stripIndexFormat,\n        () => `indexFormat(${info.indexFormat}) !== pipeline.primitive.stripIndexFormat(${pipelineDescriptor.primitive?.stripIndexFormat})`,\n      );\n  }\n}\n\nfunction bufferSizeFromBufferBinding({buffer, offset, size}: BufferWithOffsetAndSize) {\n  offset = offset ?? 0;\n  return size ?? buffer.size - offset;\n}\n\nconst kVertexFormatInfo = {\n  \"float16\":   { components: 1, bytes:  2, type: \"f16\" },\n  \"float16x2\": { components: 2, bytes:  4, type: \"vec2<f16>\" },\n  \"float16x4\": { components: 4, bytes:  8, type: \"vec4<f16>\" },\n  \"float32\":   { components: 1, bytes:  4, type: \"f32\" },\n  \"float32x2\": { components: 2, bytes:  8, type: \"vec2<f32>\" },\n  \"float32x3\": { components: 3, bytes: 12, type: \"vec3<f32>\" },\n  \"float32x4\": { components: 4, bytes: 16, type: \"vec4<f32>\" },\n  \"sint16\":    { components: 1, bytes:  2, type: \"i32\" },\n  \"sint16x2\":  { components: 2, bytes:  4, type: \"vec2<i32>\" },\n  \"sint16x4\":  { components: 4, bytes:  8, type: \"vec4<i32>\" },\n  \"sint32\":    { components: 1, bytes:  4, type: \"i32\" },\n  \"sint32x2\":  { components: 2, bytes:  8, type: \"vec2<i32>\" },\n  \"sint32x3\":  { components: 3, bytes: 12, type: \"vec3<i32>\" },\n  \"sint32x4\":  { components: 4, bytes: 16, type: \"vec4<i32>\" },\n  \"sint8\":     { components: 1, bytes:  1, type: \"i32\" },\n  \"sint8x2\":   { components: 2, bytes:  2, type: \"vec2<i32>\" },\n  \"sint8x4\":   { components: 4, bytes:  4, type: \"vec4<i32>\" },\n  \"snorm16\":   { components: 1, bytes:  2, type: \"f32\" },\n  \"snorm16x2\": { components: 2, bytes:  4, type: \"vec2<f32>\" },\n  \"snorm16x4\": { components: 4, bytes:  8, type: \"vec4<f32>\" },\n  \"snorm8\":    { components: 1, bytes:  1, type: \"f32\" },\n  \"snorm8x2\":  { components: 2, bytes:  2, type: \"vec2<f32>\" },\n  \"snorm8x4\":  { components: 4, bytes:  4, type: \"vec4<f32>\" },\n  \"uint16\":    { components: 1, bytes:  2, type: \"u32\" },\n  \"uint16x2\":  { components: 2, bytes:  4, type: \"vec2<u32>\" },\n  \"uint16x4\":  { components: 4, bytes:  8, type: \"vec4<u32>\" },\n  \"uint32\":    { components: 1, bytes:  4, type: \"u32\" },\n  \"uint32x2\":  { components: 2, bytes:  8, type: \"vec2<u32>\" },\n  \"uint32x3\":  { components: 3, bytes: 12, type: \"vec3<u32>\" },\n  \"uint32x4\":  { components: 4, bytes: 16, type: \"vec4<u32>\" },\n  \"uint8\":     { components: 1, bytes:  1, type: \"u32\" },\n  \"uint8x2\":   { components: 2, bytes:  2, type: \"vec2<u32>\" },\n  \"uint8x4\":   { components: 4, bytes:  4, type: \"vec4<u32>\" },\n  \"unorm10-10-10-2\": { components: 4, bytes:4, type:\"vec4<f32>\" },\n  \"unorm16\":   { components: 1, bytes:  2, type: \"f32\" },\n  \"unorm16x2\": { components: 2, bytes:  4, type: \"vec2<f32>\" },\n  \"unorm16x4\": { components: 4, bytes:  8, type: \"vec4<f32>\" },\n  \"unorm8\":    { components: 1, bytes:  1, type: \"f32\" },\n  \"unorm8x2\":  { components: 2, bytes:  2, type: \"vec2<f32>\" },\n  \"unorm8x4-bgra\": { components: 4, bytes:4, type:\"vec4<u32>\" },\n  \"unorm8x4\":  { components: 4, bytes:  4, type: \"vec4<f32>\" },\n};\n\nfunction getLastStride(layout: GPUVertexBufferLayout) {\n  let lastStride = 0;\n  for (const {offset, format} of layout.attributes) {\n    lastStride = Math.max(lastStride, offset + kVertexFormatInfo[format].bytes);\n  }\n  return lastStride;\n}\n\ntype Ctor<T extends RenderMixin> = {\n   new (): never;\n   prototype: T;\n};\n\nexport type RenderPassLayoutInfo = {\n  renderPassLayout: RenderPassLayout,\n  passLayoutSignature: string,\n}\n\nexport function wrapRenderCommandsMixin<T extends RenderMixin>(\n  API: Ctor<T>,\n  s_renderPassToPassInfoMap: WeakMap<T, RenderDrawInfo>,\n  getRenderPassInfo: (pass: T) => RenderPassLayoutInfo) {\n\n  wrapFunctionBefore(API, 'draw', function (this: T, [vertexCount, a_instanceCount, a_firstVertex, a_firstInstance]) {\n    const instanceCount = a_instanceCount ?? 1;\n    const firstVertex = a_firstVertex ?? 0;\n    const firstInstance = a_firstInstance ?? 0;\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    validateValidToDraw(this, info, (slot: number, layout: GPUVertexBufferLayout, vertexBufferBinding: BufferWithOffsetAndSize) => {\n      const bufferSize = bufferSizeFromBufferBinding(vertexBufferBinding);\n      const stride = layout.arrayStride;\n      const lastStride = getLastStride(layout);\n      const strideCount = layout.stepMode === 'instance'\n          ? firstInstance + instanceCount\n          : firstVertex + vertexCount;\n      if (strideCount !== 0) {\n        const bytesNeeded = (strideCount - 1) * stride + lastStride;\n        assert(bytesNeeded <= bufferSize, () => `slot(${slot}) vertex buffer binding size ${bufferSize} is not large enough for bytes needed(${bytesNeeded})`);\n      }\n    });\n  });\n\n  wrapFunctionBefore(API, 'drawIndexed', function (this: T, [indexCount, a_instanceCount, a_firstIndex, /*a_baseVertex*/, a_firstInstance]) {\n    const instanceCount = a_instanceCount ?? 1;\n    const firstIndex = a_firstIndex ?? 0;\n    // const baseVertex = a_baseVertex ?? 0;\n    const firstInstance = a_firstInstance ?? 0;\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    validateValidToDrawIndexed(this, info, (slot: number, layout: GPUVertexBufferLayout, vertexBufferBinding: BufferWithOffsetAndSize) => {\n      const bufferSize = bufferSizeFromBufferBinding(vertexBufferBinding);\n      const stride = layout.arrayStride;\n      const lastStride = getLastStride(layout);\n      const strideCount = firstInstance + instanceCount;\n      if (layout.stepMode === 'instance') {\n        const bytesNeeded = (strideCount - 1) * stride + lastStride;\n        assert(bytesNeeded <= bufferSize, () => `slot(${slot}) vertex buffer binding size ${bufferSize} is not large enough for bytes needed(${bytesNeeded})`);\n      }\n    });\n    const bufferSize = bufferSizeFromBufferBinding(info.indexBuffer!);\n    const indexByteSize = info.indexFormat === 'uint16' ? 2 : 4;\n    const bytesNeeded = firstIndex + indexCount * indexByteSize;\n    assert(bytesNeeded <= bufferSize, () => `indexBuffer bound size(${bufferSize}) is not large enough for bytesNeeded(${bytesNeeded})`);\n  });\n\n  const kIndirectDrawParametersSize = 16;\n  wrapFunctionBefore(API, 'drawIndirect', function (this: T, [indirectBuffer, indirectOffset]) {\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    validateValidToDraw(this, info, () => {});\n    assertNotDestroyed(indirectBuffer);\n    const device = s_objToDevice.get(this)!;\n    assert(device === s_objToDevice.get(indirectBuffer), 'indirectBuffer is not from same device', [indirectBuffer]);\n    assert(!!(indirectBuffer.usage & GPUBufferUsage.INDIRECT), () => `buffer(${bufferUsageToString(indirectBuffer.usage)}) must have usage INDIRECT`, [indirectBuffer, this]);\n    assert(indirectOffset + kIndirectDrawParametersSize <= indirectBuffer.size, `indirectOffset(${indirectOffset}) + sizeOfIndirectParameters(${kIndirectDrawParametersSize}) > indirectBuffer.size(${indirectBuffer.size})`, [indirectBuffer]);\n    assert(indirectOffset % 4 === 0, () => `indirectOffset(${indirectOffset}) is not multiple of 4`);\n  });\n\n  const kIndirectDrawIndexedParametersSize = 20;\n  wrapFunctionBefore(API, 'drawIndexedIndirect', function (this: T, [indirectBuffer, indirectOffset]) {\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    validateValidToDrawIndexed(this, info, () => {});\n    assertNotDestroyed(indirectBuffer);\n    const device = s_objToDevice.get(this)!;\n    assert(device === s_objToDevice.get(indirectBuffer), 'indirectBuffer is not from same device', [indirectBuffer]);\n    assert(!!(indirectBuffer.usage & GPUBufferUsage.INDIRECT), () => `buffer(${bufferUsageToString(indirectBuffer.usage)}) must have usage INDIRECT`, [indirectBuffer, this]);\n    assert(indirectOffset + kIndirectDrawIndexedParametersSize <= indirectBuffer.size, `indirectOffset(${indirectOffset}) + sizeOfIndirectParameters(${kIndirectDrawIndexedParametersSize}) > indirectBuffer.size(${indirectBuffer.size})`, [indirectBuffer]);\n    assert(indirectOffset % 4 === 0, () => `indirectOffset(${indirectOffset}) is not multiple of 4`);\n  });\n\n\n  wrapFunctionBefore(API, 'setPipeline', function (this: T, [pipeline]) {\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    assert(s_objToDevice.get(this) === s_objToDevice.get(pipeline), 'pipeline must be from same device as renderPassEncoder', [pipeline, this]);\n    const pipelineDesc = s_renderPipelineToRenderPipelineDescriptor.get(pipeline)!;\n    const passLayoutInfo = getRenderPassInfo(this);\n    assert(pipelineDesc.passLayoutInfo.passLayoutSignature === passLayoutInfo.passLayoutSignature,\n           () => `pipeline is not compatible with ${this.constructor.name}\n\n${this.constructor.name} expects ${JSON.stringify(passLayoutInfo.renderPassLayout, null, 2)}\n\npipeline is: ${JSON.stringify(pipelineDesc.passLayoutInfo.renderPassLayout, null, 2)}\n`,\n      [pipeline, this],\n    );\n    info.pipeline = pipeline;\n  });\n\n\n  wrapFunctionBefore(API, 'setIndexBuffer', function (this: T, [buffer, format, offset, size]) {\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    const device = s_objToDevice.get(this)!;\n    offset = offset ?? 0;\n    size = size ?? Math.max(0, buffer.size - offset);\n\n    assert(device === s_objToDevice.get(buffer), 'buffer must be from the same device', [buffer, this]);\n    assertNotDestroyed(buffer);\n    assert(!!(buffer.usage & GPUBufferUsage.INDEX), () => `buffer(${bufferUsageToString(buffer.usage)}) must have usage INDEX`, [buffer, this]);\n    const align =  format === 'uint16' ? 2 : 4;\n    assert(offset % align === 0, () => `offset(${offset}) must be multiple of index format: ${format}`, [buffer, this]);\n    assert(offset + size <= buffer.size, () => `offset(${offset}) + size(${size}) is not <= buffer.size(${buffer.size})`, [buffer, this]);\n\n    info.indexBuffer = {\n      buffer,\n      offset,\n      size,\n    };\n    info.indexFormat = format;\n  });\n\n  wrapFunctionBefore(API, 'setVertexBuffer', function (this: T, [slot, buffer, offset, size]) {\n    const info = s_renderPassToPassInfoMap.get(this)!;\n    validateEncoderState(this, info.state);\n    const device = s_objToDevice.get(this)!;\n    const maxSlot = device.limits.maxVertexBuffers;\n    const bufferSize = buffer?.size || 0;\n    offset = offset ?? 0;\n    size = size ?? Math.max(0, bufferSize - offset);\n    assert(slot >= 0, () => `slot(${slot}) must be >= 0`, [this]);\n    assert(slot < maxSlot, () => `slot(${slot}) must be < device.limits.maxVertexBuffers(${maxSlot})`, [this]);\n    assert(offset % 4 === 0, () => `offset(${offset}) must be multiple of 4`, [this]);\n    assert(offset + size <= bufferSize, () => `offset(${offset}) + size(${size}) is not <= buffer.size(${bufferSize})`, [this, ...(buffer ? [buffer] : [])]);\n    if (!buffer) {\n      info.vertexBuffers[slot] = undefined;\n    } else {\n      assert(device === s_objToDevice.get(buffer), 'buffer must be from the same device', [buffer, this]);\n      assertNotDestroyed(buffer);\n      assert(!!(buffer.usage & GPUBufferUsage.VERTEX), () => `buffer(${bufferUsageToString(buffer.usage)}) must have usage VERTEX`, [buffer, this]);\n      info.vertexBuffers[slot] = {\n        buffer,\n        offset,\n        size,\n      };\n    }\n  });\n  }","import {\n  wrapBindingCommandsMixin\n} from './binding-mixin.js';\nimport {\n  validateEncoderState,\n} from './encoder-utils.js';\nimport { createRenderPassLayout } from './pipeline.js';\nimport {\n  RenderDrawInfo,\n  RenderPassLayoutInfo,\n  wrapRenderCommandsMixin,\n} from './render-commands-mixin.js';\nimport { s_objToDevice } from './shared-state.js';\nimport {\n  trimNulls,\n} from './utils.js';\nimport {\n  wrapFunctionAfter,\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\ntype BundleEncoderInfo = RenderDrawInfo & {\n  desc: GPURenderBundleDescriptor,\n  passLayoutInfo: RenderPassLayoutInfo,\n};\n\nconst s_bundleEncoderToPassInfoMap = new WeakMap<GPURenderBundleEncoder, BundleEncoderInfo>();\nconst s_bundleToPassInfoMap = new WeakMap<GPURenderBundle, BundleEncoderInfo>();\n\nfunction getRenderPassLayout(bundleEncoder: GPURenderBundleEncoder): RenderPassLayoutInfo {\n  return s_bundleEncoderToPassInfoMap.get(bundleEncoder)!.passLayoutInfo;\n}\n\nexport function getRenderPassLayoutForRenderBundle(bundle: GPURenderBundle) {\n  return s_bundleToPassInfoMap.get(bundle)!;\n}\n\nwrapRenderCommandsMixin(\n  GPURenderBundleEncoder,\n  s_bundleEncoderToPassInfoMap,\n   getRenderPassLayout,\n);\n\nexport function createRenderBundleEncoder(encoder: GPURenderBundleEncoder, desc: GPURenderBundleEncoderDescriptor) {\n  const { sampleCount = 1, depthStencilFormat, colorFormats } = desc;\n  const renderPassLayout = createRenderPassLayout(\n    trimNulls([...colorFormats]),\n    sampleCount,\n    depthStencilFormat);\n  s_bundleEncoderToPassInfoMap.set(encoder, {\n    state: 'open',  // this is not needed. should we move it?\n    desc: {...desc},\n    vertexBuffers: [],\n    bindGroups: [],\n    passLayoutInfo: {\n      renderPassLayout,\n      passLayoutSignature: JSON.stringify(renderPassLayout),\n    },\n  });\n}\n\nwrapBindingCommandsMixin(GPURenderBundleEncoder, s_bundleEncoderToPassInfoMap);\n\nwrapFunctionBefore(GPURenderBundleEncoder, 'finish', function (this: GPURenderBundleEncoder) {\n  const info = s_bundleEncoderToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  info.state = 'ended';\n});\n\nwrapFunctionAfter(GPURenderBundleEncoder, 'finish', function (this: GPURenderBundleEncoder, bundle: GPURenderBundle) {\n  s_objToDevice.set(bundle, s_objToDevice.get(this)!);\n  s_bundleToPassInfoMap.set(bundle, s_bundleEncoderToPassInfoMap.get(this)!);\n});","import {\n  makeBindGroupLayoutDescriptors,\n  makeShaderDataDefinitions,\n  ShaderDataDefinitions,\n} from 'webgpu-utils';\n\nimport {\n  validateBindGroupResourcesNotDestroyed,\n} from './binding-mixin.js';\nimport {\n  createCommandEncoder,\n} from './encoder-utils.js';\nimport {\n  BindGroupLayoutDescriptorPlus,\n  s_bindGroupLayoutToBindGroupLayoutDescriptorPlus,\n  s_pipelineToReifiedPipelineLayoutDescriptor,\n  s_pipelineLayoutToBindGroupLayoutDescriptorsPlus,\n  trackRenderPipelineDescriptor,\n} from './pipeline.js';\nimport {\n  createRenderBundleEncoder,\n} from './render-bundle-encoder.js';\nimport {\n  assertNotDestroyed,\n  s_bindGroupToInfo,\n  s_objToDevice,\n} from './shared-state.js';\nimport {\n  assert\n} from './validation.js';\nimport {\n  wrapFunctionAfter,\n  wrapAsyncFunctionAfter,\n} from './wrap-api.js';\n\nconst s_shaderModuleToDefs = new WeakMap<GPUShaderModule, ShaderDataDefinitions>();\n\nfunction addDefs(defs: ShaderDataDefinitions[], stage: GPUProgrammableStage | undefined) {\n  if (stage) {\n    defs.push(s_shaderModuleToDefs.get(stage.module)!);\n  }\n}\n\nfunction reifyBufferLayout(buffer: GPUBufferBindingLayout) {\n  return {\n    type: buffer.type ?? 'uniform',\n    hasDynamicOffset: !!buffer.hasDynamicOffset,\n    minBindingSize: buffer.minBindingSize ?? 0,\n  };\n}\n\nfunction reifySamplerLayout(sampler: GPUSamplerBindingLayout) {\n  return {\n    type: sampler.type ?? 'filtering',\n  };\n}\n\nfunction reifyTextureLayout(texture: GPUTextureBindingLayout) {\n  return {\n    sampleType: texture.sampleType ?? 'float',\n    viewDimension: texture.viewDimension ?? '2d',\n    multisampled: !!texture.multisampled,\n  };\n}\n\nfunction reifyStorageTexture(storageTexture: GPUStorageTextureBindingLayout) {\n  return {\n    access: storageTexture.access ?? 'write-only',\n    format: storageTexture.format,\n    viewDimension: storageTexture.viewDimension ?? '2d',\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction reifyExternalTexture(externalTexture: GPUExternalTextureBindingLayout) {\n  return {\n  };\n}\n\nfunction reifyBindGroupLayoutEntry({\n    binding,\n    visibility,\n    buffer,\n    sampler,\n    texture,\n    storageTexture,\n    externalTexture,\n  }: GPUBindGroupLayoutEntry): GPUBindGroupLayoutEntry {\n  return {\n    binding,\n    visibility,\n    ...(buffer && { buffer: reifyBufferLayout(buffer) }),\n    ...(sampler && { sampler: reifySamplerLayout(sampler) }),\n    ...(texture && { texture: reifyTextureLayout(texture) }),\n    ...(storageTexture && { storageTexture: reifyStorageTexture(storageTexture) }),\n    ...(externalTexture && { externalTexture: reifyExternalTexture(externalTexture) }),\n  };\n}\n\nfunction  bindGroupLayoutDescriptorToBindGroupLayoutDescriptorPlus(\n    src: GPUBindGroupLayoutDescriptor,\n    autoId: number): BindGroupLayoutDescriptorPlus {\n  const bindGroupLayoutDescriptor = {\n    entries: [...src.entries].map(reifyBindGroupLayoutEntry),\n  };\n  const entriesById = Object.fromEntries(bindGroupLayoutDescriptor.entries.map(e => [e.binding, e]));\n  const dynamicOffsetCount = bindGroupLayoutDescriptor.entries.reduce((a, v) => a + (v.buffer?.hasDynamicOffset ? 1 : 0), 0);\n  const signature = `${JSON.stringify(bindGroupLayoutDescriptor)}${autoId ? `:autoId(${autoId})` : ''})`;\n  return {\n    bindGroupLayoutDescriptor,\n    entriesById,\n    dynamicOffsetCount,\n    signature,\n  };\n}\n\nlet s_autoCount = 1;\nfunction getReifiedPipelineLayoutDescriptor(desc: GPUComputePipelineDescriptor | GPURenderPipelineDescriptor) {\n  if (desc.layout === 'auto') {\n    // It's auto so we need to make a reified pipeline descriptor\n    const defs: ShaderDataDefinitions[] = [];\n    addDefs(defs, (desc as GPURenderPipelineDescriptor).vertex);\n    addDefs(defs, (desc as GPURenderPipelineDescriptor).fragment);\n    addDefs(defs, (desc as GPUComputePipelineDescriptor).compute);\n    const autoId = s_autoCount++;\n    const bindGroupLayoutDescriptors = makeBindGroupLayoutDescriptors(defs, desc).map(b => bindGroupLayoutDescriptorToBindGroupLayoutDescriptorPlus(b, autoId));\n    return {\n      bindGroupLayoutDescriptors,\n    };\n  } else {\n    const bindGroupLayoutDescriptors = s_pipelineLayoutToBindGroupLayoutDescriptorsPlus.get(desc.layout)!;\n    return {\n      bindGroupLayoutDescriptors,\n    };\n  }\n}\n\nfunction trackPipelineLayouts(device: GPUDevice, pipeline: GPUPipelineBase, desc: GPUComputePipelineDescriptor | GPURenderPipelineDescriptor) {\n  s_pipelineToReifiedPipelineLayoutDescriptor.set(pipeline, getReifiedPipelineLayoutDescriptor(desc));\n}\n\nwrapFunctionAfter(GPUDevice, 'createShaderModule', function (this: GPUDevice, module: GPUShaderModule, [desc]: [GPUShaderModuleDescriptor]) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(module, this);\n  s_shaderModuleToDefs.set(module, makeShaderDataDefinitions(desc.code));\n});\n\nwrapFunctionAfter(GPUDevice, 'createBindGroup', function (this: GPUDevice, bindGroup: GPUBindGroup, [desc]: [GPUBindGroupDescriptor]) {\n  s_objToDevice.set(bindGroup, this);\n  const { layout } = desc;\n  // copy the entries since the user might change them\n  const entries = [];\n  for (const {binding, resource} of [...desc.entries]) {\n    const r = resource instanceof GPUBuffer ||\n              resource instanceof GPUSampler ||\n              resource instanceof GPUTextureView ||\n              resource instanceof GPUExternalTexture\n        ? resource\n        : { ...resource };\n    const rb = r as GPUBufferBinding;\n    if (rb.buffer instanceof GPUBuffer) {\n      const offset = rb.offset || 0;\n      const size = rb.size || rb.buffer.size - offset;\n      assert(offset + size <= rb.buffer.size, () => `offset(${offset} + size(${size}) > buffer.size(${rb.buffer.size}))`, [rb.buffer]);\n    }\n    entries.push({\n      binding,\n      resource: r,\n    });\n  }\n  entries.sort((a, b) => a.binding - b.binding);\n  validateBindGroupResourcesNotDestroyed(entries);\n  const layoutPlus = s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.get(layout)!;\n  s_bindGroupToInfo.set(bindGroup, {\n    entries,\n    layoutPlus,\n  });\n});\n\nwrapFunctionAfter(GPUDevice, 'createBuffer', function (this: GPUDevice, buffer: GPUBuffer) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(buffer, this);\n});\n\nwrapFunctionAfter(GPUDevice, 'createQuerySet', function (this: GPUDevice, querySet: GPUQuerySet) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(querySet, this);\n});\n\nwrapFunctionAfter(GPUDevice, 'createSampler', function (this: GPUDevice, sampler: GPUSampler) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(sampler, this);\n});\n\nwrapFunctionAfter(GPUDevice, 'createTexture', function (this: GPUDevice, texture: GPUTexture) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(texture, this);\n});\n\nwrapFunctionAfter(GPUDevice, 'importExternalTexture', function (this: GPUDevice, externalTexture: GPUExternalTexture) {\n  s_objToDevice.set(externalTexture, this);\n});\n\nwrapFunctionAfter(GPUDevice, 'createCommandEncoder', function (this: GPUDevice, commandEncoder: GPUCommandEncoder) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(commandEncoder, this);\n  createCommandEncoder(commandEncoder);\n});\n\nwrapFunctionAfter(GPUDevice, 'createRenderBundleEncoder', function (this: GPUDevice, bundleEncoder: GPURenderBundleEncoder, [desc]) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(bundleEncoder, this);\n  createRenderBundleEncoder(bundleEncoder, desc);\n});\n\nwrapFunctionAfter(GPUDevice, 'createRenderPipeline', function (this: GPUDevice, pipeline: GPURenderPipeline, [desc]) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(pipeline, this);\n  trackRenderPipelineDescriptor(pipeline, desc);\n  trackPipelineLayouts(this, pipeline, desc);\n});\n\nwrapFunctionAfter(GPUDevice, 'createComputePipeline', function (this: GPUDevice, pipeline: GPUComputePipeline, [desc]) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(pipeline, this);\n  trackPipelineLayouts(this, pipeline, desc);\n});\n\nwrapAsyncFunctionAfter(GPUDevice, 'createRenderPipelineAsync', function (this: GPUDevice, pipeline: GPURenderPipeline, [desc]) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(pipeline, this);\n  trackRenderPipelineDescriptor(pipeline, desc);\n  trackPipelineLayouts(this, pipeline, desc);\n});\n\nwrapAsyncFunctionAfter(GPUDevice, 'createComputePipelineAsync', function (this: GPUDevice, pipeline: GPUComputePipeline, [desc]) {\n  assertNotDestroyed(this);\n  s_objToDevice.set(pipeline, this);\n  trackPipelineLayouts(this, pipeline, desc);\n});\n\nwrapFunctionAfter(GPUDevice, 'createBindGroupLayout', function (this: GPUDevice, bindGroupLayout: GPUBindGroupLayout, [desc]) {\n  s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.set(\n    bindGroupLayout,\n    bindGroupLayoutDescriptorToBindGroupLayoutDescriptorPlus(desc, 0),\n  );\n});\n\nwrapFunctionAfter(GPUDevice, 'createPipelineLayout', function (this: GPUDevice, pipelineLayout: GPUPipelineLayout, [desc]) {\n  // need to copy the description because the user may change it after\n  const bglDescriptorsPlus: (BindGroupLayoutDescriptorPlus | undefined)[] =\n    [...desc.bindGroupLayouts].map(bgl => bgl ? s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.get(bgl)! : undefined);\n  s_pipelineLayoutToBindGroupLayoutDescriptorsPlus.set(pipelineLayout, bglDescriptorsPlus);\n}\n\n);\n\n","\nimport {\n  s_objToDevice,\n} from './shared-state.js';\nimport {\n  wrapFunctionAfter,\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\n\nwrapFunctionBefore(GPUCanvasContext, 'configure', function (this: GPUCanvasContext, [desc]) {\n  s_objToDevice.set(this, desc.device);\n});\n\nwrapFunctionBefore(GPUCanvasContext, 'unconfigure', function (this: GPUCanvasContext) {\n  s_objToDevice.delete(this);\n});\n\nwrapFunctionAfter(GPUCanvasContext, 'getCurrentTexture', function (this: GPUCanvasContext, texture: GPUTexture) {\n  const device = s_objToDevice.get(this)!;\n  s_objToDevice.set(texture, device);\n});\n","import {\n  assertNotDestroyed,\n  s_objToDevice,\n} from './shared-state.js';\nimport {\n  assert,\n} from './validation.js';\n\nexport function validateTimestampWrites(device: GPUDevice, timestampWrites: GPUComputePassTimestampWrites | GPURenderPassTimestampWrites) {\n  const { querySet, beginningOfPassWriteIndex, endOfPassWriteIndex } = timestampWrites;\n  assertNotDestroyed(querySet);\n  assert(s_objToDevice.get(querySet) === device, 'querySet not from same device', [querySet]);\n  assert(querySet.type === 'timestamp', () => `querySet.type(${querySet.type}) !== 'timestamp'`);\n  assert(beginningOfPassWriteIndex === undefined || beginningOfPassWriteIndex < querySet.count, () => `timestampWrites.beginningOfPassWriteIndex(${beginningOfPassWriteIndex}) is >= querySet.count(${querySet.count})`);\n  assert(endOfPassWriteIndex === undefined || endOfPassWriteIndex < querySet.count, () => `timestampWrites.endOfPassWriteIndex(${endOfPassWriteIndex}) is >= querySet.count(${querySet.count})`);\n  assert(\n    beginningOfPassWriteIndex !== undefined || endOfPassWriteIndex !== undefined,\n    () => `at least one of beginningOfPassWriteIndex(${beginningOfPassWriteIndex}) or endOfPassWriteIndex(${endOfPassWriteIndex})`);\n  assert(beginningOfPassWriteIndex !== endOfPassWriteIndex,\n     () => `beginningOfPassWriteIndex(${beginningOfPassWriteIndex}) and endOfPassWriteIndex(${endOfPassWriteIndex}) may not be the same`);\n}\n\n","import {\n  PassInfo,\n  validateEncoderBindGroups,\n  wrapBindingCommandsMixin,\n} from './binding-mixin.js';\nimport {\n  unlockCommandEncoder,\n  validateEncoderState,\n} from './encoder-utils.js';\nimport {\n  validateTimestampWrites,\n} from './query-support.js';\nimport {\n  assertNotDestroyed,\n  s_objToDevice,\n} from './shared-state.js';\nimport {\n  bufferUsageToString,\n} from './utils.js';\nimport {\n  assert,\n} from './validation.js';\nimport {\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\ntype ComputePassInfo = PassInfo & {\n  commandEncoder: GPUCommandEncoder,\n  pipeline?: GPUComputePipeline,\n};\n\nconst s_computePassToPassInfoMap = new WeakMap<GPUComputePassEncoder, ComputePassInfo>();\n\nexport function beginComputePass(commandEncoder: GPUCommandEncoder, passEncoder: GPUComputePassEncoder, desc: GPUComputePassDescriptor | undefined) {\n  const device = s_objToDevice.get(commandEncoder)!;\n  const { timestampWrites } = desc || {};\n\n  if (timestampWrites) {\n    validateTimestampWrites(device, timestampWrites);\n  }\n\n  s_computePassToPassInfoMap.set(passEncoder, {\n    state: 'open',\n    commandEncoder,\n    bindGroups: [],\n  });\n}\n\nwrapBindingCommandsMixin(GPUComputePassEncoder, s_computePassToPassInfoMap);\n\nwrapFunctionBefore(GPUComputePassEncoder, 'setPipeline', function (this: GPUComputePassEncoder, [pipeline]) {\n  const info = s_computePassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  assert(s_objToDevice.get(info.commandEncoder) === s_objToDevice.get(pipeline), 'pipeline must be from same device as computePassEncoder', [this, info.commandEncoder]);\n  info.pipeline = pipeline;\n});\n\nwrapFunctionBefore(GPUComputePassEncoder, 'end', function (this: GPUComputePassEncoder) {\n  const info = s_computePassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  info.state = 'ended';\n  unlockCommandEncoder(info.commandEncoder);\n});\n\nwrapFunctionBefore(GPUComputePassEncoder, 'dispatchWorkgroups', function (this: GPUComputePassEncoder, [workgroupCountX, workgroupCountY = 1, workgroupCountZ = 1]) {\n  const info = s_computePassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  validateEncoderBindGroups(info.bindGroups, info.pipeline);\n\n  const device = s_objToDevice.get(this)!;\n  assert(workgroupCountX <= device.limits.maxComputeWorkgroupsPerDimension, () => `workGroupCountX(${workgroupCountX}) > device.limits.maxComputeWorkgroupsPerDimension(${device.limits.maxComputeWorkgroupsPerDimension})`);\n  assert(workgroupCountY <= device.limits.maxComputeWorkgroupsPerDimension, () => `workGroupCountY(${workgroupCountY}) > device.limits.maxComputeWorkgroupsPerDimension(${device.limits.maxComputeWorkgroupsPerDimension})`);\n  assert(workgroupCountZ <= device.limits.maxComputeWorkgroupsPerDimension, () => `workGroupCountZ(${workgroupCountZ}) > device.limits.maxComputeWorkgroupsPerDimension(${device.limits.maxComputeWorkgroupsPerDimension})`);\n});\n\nconst kIndirectDispatchWorkgroupsParametersSize = 12;\nwrapFunctionBefore(GPUComputePassEncoder, 'dispatchWorkgroupsIndirect', function (this: GPUComputePassEncoder, [indirectBuffer, indirectOffset]) {\n  const info = s_computePassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  validateEncoderBindGroups(info.bindGroups, info.pipeline);\n  assertNotDestroyed(indirectBuffer);\n  const device = s_objToDevice.get(this)!;\n  assert(device === s_objToDevice.get(indirectBuffer), 'indirectBuffer is not from same device', [indirectBuffer]);\n  assert(!!(indirectBuffer.usage & GPUBufferUsage.INDIRECT), () => `buffer(${bufferUsageToString(indirectBuffer.usage)}) must have usage INDIRECT`, [indirectBuffer, this]);\n  assert(indirectOffset + kIndirectDispatchWorkgroupsParametersSize <= indirectBuffer.size, `indirectOffset(${indirectOffset}) + sizeOfIndirectParameters(${kIndirectDispatchWorkgroupsParametersSize}) > indirectBuffer.size(${indirectBuffer.size})`, [indirectBuffer]);\n  assert(indirectOffset % 4 === 0, () => `indirectOffset(${indirectOffset}) is not multiple of 4`);\n});\n","import {\n  wrapBindingCommandsMixin,\n} from './binding-mixin.js';\nimport {\n  unlockCommandEncoder,\n  validateEncoderState,\n} from './encoder-utils.js';\nimport { kAllTextureFormatInfo } from './format-info.js';\nimport {\n  createRenderPassLayout,\n} from './pipeline.js';\nimport {\n  validateTimestampWrites,\n} from './query-support.js';\nimport {\n  getRenderPassLayoutForRenderBundle\n} from './render-bundle-encoder.js';\nimport {\n  RenderDrawInfo,\n  RenderPassLayoutInfo,\n  wrapRenderCommandsMixin,\n} from './render-commands-mixin.js';\nimport {\n  assertNotDestroyed,\n  s_objToDevice,\n} from './shared-state.js';\nimport {\n  TextureViewDescriptor,\n  s_textureViewToDesc,\n  s_textureViewToTexture,\n} from './texture.js';\nimport {\n  logicalMipLevelSpecificTextureExtent,\n  roundUp,\n  textureUsageToString,\n  trimNulls,\n} from './utils.js';\nimport {\n  assert,\n  emitError,\n} from './validation.js';\nimport {\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\ntype InUseMipLevels = Set<number>;\ntype InUseDepthOrArrayLayers = Map<number, InUseMipLevels>;\ntype InUseTextures = Map<GPUTexture, InUseDepthOrArrayLayers>;\n\ntype RenderPassInfo = RenderDrawInfo & {\n  commandEncoder: GPUCommandEncoder,\n  targetWidth: number,\n  targetHeight: number,\n  passLayoutInfo: RenderPassLayoutInfo,\n  occlusionQuerySet?: GPUQuerySet,\n  occlusionIndices: Map<number, Error>,\n  occlusionQueryActive?: Error,\n  occlusionQueryActiveIndex: number,\n  inuseTextures: InUseTextures,\n};\n\nconst s_renderPassToPassInfoMap = new WeakMap<GPURenderPassEncoder, RenderPassInfo>();\n\nfunction getRenderPassLayout(passEncoder: GPURenderPassEncoder): RenderPassLayoutInfo {\n  return s_renderPassToPassInfoMap.get(passEncoder)!.passLayoutInfo;\n}\n\n/*\nfunction checkTextureNotInUse(inuseTextures: InUseTextures, texture: GPUTexture, fullView: TextureViewDescriptor) {\n  const views = inuseTextures.get(texture);\n  if (!views) {\n    return;\n  }\n}\n*/\n\nfunction markTextureInUse(inuseTextures: InUseTextures, texture: GPUTexture, view: GPUTextureView) {\n  const fullView = s_textureViewToDesc.get(view)!;\n  const inUseDepthOrArrayLayers = inuseTextures.get(texture) || new Map<number, InUseMipLevels>();\n  inuseTextures.set(texture, inUseDepthOrArrayLayers);\n  for (let l = 0; l < fullView.arrayLayerCount; ++l) {\n    const layer = l + fullView.baseArrayLayer;\n    const inUseMipLevels = inUseDepthOrArrayLayers.get(layer) || new Set<number>();\n    inUseDepthOrArrayLayers.set(layer, inUseMipLevels);\n    for (let m = 0; m < fullView.mipLevelCount; ++m) {\n      const mipLevel = m + fullView.baseMipLevel;\n      assert(!inUseMipLevels.has(mipLevel), () => `mipLevel(${mipLevel}) of layer(${layer}) is already in use`, [texture]);\n      inUseMipLevels.add(mipLevel);\n    }\n  }\n}\n\nfunction validateViewAspectIsAllAspectsOfTexture(texture: GPUTexture, aspect: GPUTextureAspect) {\n   const {depth, stencil} = kAllTextureFormatInfo[texture.format];\n   if (depth && stencil) {\n    assert(aspect === 'all', 'aspect must be all for depth-stencil textures', [texture]);\n   } else if (depth) {\n      assert(aspect === 'all' || aspect === 'depth-only',\n        'aspect must be all or depth-only for depth textures', [texture]);\n   } else if (stencil) {\n      assert(aspect === 'all' || aspect === 'stencil-only',\n        'aspect must be all or stencil-only for stencil textures', [texture]);\n   }\n}\n\nfunction validateRenderableTextureView(texture: GPUTexture, viewDesc: TextureViewDescriptor) {\n  assert((texture.usage & GPUTextureUsage.RENDER_ATTACHMENT) !== 0,\n    () => `texture.usage(${textureUsageToString(texture.usage)}) is missing RENDER_ATTACHMENT`, [texture]\n  );\n  const { dimension, mipLevelCount, arrayLayerCount, aspect } = viewDesc;\n  assert(dimension === '2d' || dimension === '3d', () => `dimension(${dimension}) must be 2d or 3d`);\n  assert(mipLevelCount === 1, () => `mipLevelCount(${mipLevelCount}) must be 1`);\n  assert(arrayLayerCount === 1, () => `arrayLayerCount(${arrayLayerCount}) must be 1`);\n  validateViewAspectIsAllAspectsOfTexture(texture, aspect);\n}\n\nfunction validateRenderPassColorAttachment(attachment: GPURenderPassColorAttachment, slot: number) {\n  const {view, resolveTarget, depthSlice, loadOp } = attachment;\n  const renderViewDesc = s_textureViewToDesc.get(view)!;\n  const renderTexture = s_textureViewToTexture.get(view)!;\n  const formatInfo = kAllTextureFormatInfo[renderViewDesc.format];\n  validateRenderableTextureView(renderTexture, renderViewDesc);\n  assert(!!formatInfo.colorRender, () => `format(${renderViewDesc.format}) is not color renderable`);\n  if (renderViewDesc.dimension === '3d') {\n    assert(!!depthSlice, () => `attachment(${slot})'s dimension is '3d' but depthSlice is missing`);\n    const [, , d] = logicalMipLevelSpecificTextureExtent(renderTexture, renderViewDesc.baseMipLevel);\n    assert(depthSlice < d, () => `depthSlice(${depthSlice}) must be < depth(${d}) at mipLevel(${renderViewDesc.mipLevelCount}) of texture`, [renderTexture]);\n  } else {\n    assert(depthSlice === undefined, `attachment(${slot}) is not 3d so depthSlice must NOT be provided`);\n  }\n  if (loadOp) {\n    // check that clearValue is valid\n  }\n  if (resolveTarget) {\n    const resolveViewDesc = s_textureViewToDesc.get(resolveTarget)!;\n    const resolveTexture = s_textureViewToTexture.get(resolveTarget)!;\n    const [tw, th] = logicalMipLevelSpecificTextureExtent(renderTexture, renderViewDesc.baseMipLevel);\n    const [rw, rh] = logicalMipLevelSpecificTextureExtent(resolveTexture, resolveViewDesc.baseMipLevel);\n    assert(tw === rw && th === rh, () => `resolveTarget render extent(${rw}, ${rh}) != view render extent (${tw}, ${th})`);\n    assert(renderTexture.sampleCount > 1, 'resolveTarget is set so view texture must have sampleCount > 1', [renderTexture]);\n    assert(resolveTexture.sampleCount === 1, 'resolveTarget.sampleCount must be 1', [resolveTarget]);\n    validateRenderableTextureView(resolveTexture, resolveViewDesc);\n    assert(resolveViewDesc.format === renderViewDesc.format, () => `resolveTarget.view.format(${resolveViewDesc.format}) must equal target.view.format(${renderViewDesc.format})`);\n    assert(resolveTexture.format === renderTexture.format, () => `resolve texture format(${resolveTexture.format}) must equal target texture format(${renderTexture.format})`);\n    const resolveFormatInfo = kAllTextureFormatInfo[resolveTexture.format];\n    assert(!!resolveFormatInfo?.colorRender?.resolve, () => `resolve texture.format(${resolveTexture.format}) does not support resolving`);\n  }\n}\n\nwrapRenderCommandsMixin(GPURenderPassEncoder, s_renderPassToPassInfoMap, getRenderPassLayout);\n\nexport function beginRenderPass(commandEncoder: GPUCommandEncoder, passEncoder: GPURenderPassEncoder, desc: GPURenderPassDescriptor) {\n  let targetWidth: number | undefined;\n  let targetHeight: number | undefined;\n  const device = s_objToDevice.get(commandEncoder)!;\n\n  const inuseTextures = new Map<GPUTexture, InUseDepthOrArrayLayers>();\n  const colorFormats: (GPUTextureFormat | null)[] = [];\n  let passSampleCount: number | undefined;\n  let depthStencilFormat: GPUTextureFormat | undefined;\n  let bytesPerSample = 0;\n  let numAttachments = 0;\n\n  const checkRenderExtent = (texture: GPUTexture, view: GPUTextureView) => {\n    const desc = s_textureViewToDesc.get(view)!;\n    const [width, height] = logicalMipLevelSpecificTextureExtent(texture, desc.baseMipLevel);\n    if (targetWidth === undefined) {\n      targetWidth = width;\n      targetHeight = height;\n    } else if (targetWidth !== width || targetHeight !== height) {\n      emitError('attachments are not all the same width and height', [view, texture, passEncoder, commandEncoder]);\n    }\n  };\n\n  const addView = (attachment: GPURenderPassColorAttachment | GPURenderPassDepthStencilAttachment | null | undefined, isDepth?: boolean) => {\n    if (!attachment) {\n      if (!isDepth) {\n        colorFormats.push(null);\n      }\n      return;\n    }\n    ++numAttachments;\n    const {view} = attachment;\n    const texture = s_textureViewToTexture.get(view)!;\n    assertNotDestroyed(texture);\n    assert(s_objToDevice.get(texture) === device, 'texture is not from same device as command encoder', [texture, commandEncoder]);\n    const {sampleCount, format} = texture;\n    const formatInfo = kAllTextureFormatInfo[format];\n    markTextureInUse(inuseTextures, texture, view);\n    const { colorRender, depth, stencil } = formatInfo;\n    checkRenderExtent(texture, view);\n    if (isDepth) {\n      assert(!!depth || !!stencil, () => `format(${format}) is not a depth stencil format`);\n      depthStencilFormat = format;\n    } else {\n      validateRenderPassColorAttachment(attachment as GPURenderPassColorAttachment, colorFormats.length - 1);\n      colorFormats.push(format);\n      bytesPerSample += roundUp(colorRender!.byteCost, colorRender!.alignment);\n    }\n    if (!passSampleCount) {\n      passSampleCount = sampleCount;\n    } else {\n      assert(sampleCount === passSampleCount, 'all attachments do not have the same sampleCount');\n    }\n  };\n\n  const { timestampWrites, colorAttachments, depthStencilAttachment, occlusionQuerySet } = desc;\n\n  for (const colorAttachment of colorAttachments || []) {\n      addView(colorAttachment);\n  }\n\n  addView(depthStencilAttachment, true);\n\n  assert(numAttachments > 0, 'there must be at least 1 colorAttachment or depthStencilAttachment');\n  assert(numAttachments <= device.limits.maxColorAttachments, () => `numAttachments(${numAttachments}) > device.limits.maxColorAttachments(${device.limits.maxColorAttachments})`);\n  assert(bytesPerSample <= device.limits.maxColorAttachmentBytesPerSample,\n    () => `color attachments bytesPerSample(${bytesPerSample}) > device.limits.maxColorAttachmentBytesPerSample(${device.limits.maxColorAttachmentBytesPerSample})`);\n\n  if (timestampWrites) {\n    validateTimestampWrites(device, timestampWrites);\n  }\n\n  if (occlusionQuerySet) {\n    assertNotDestroyed(occlusionQuerySet);\n    assert(device === s_objToDevice.get(occlusionQuerySet), 'occlusionQuerySet is not from same device', [occlusionQuerySet]);\n    assert(occlusionQuerySet.type === 'occlusion', () => `occlusionQuerySet.type(${occlusionQuerySet.type}) is not 'occlusion'`, [occlusionQuerySet]);\n  }\n\n  const renderPassLayout = createRenderPassLayout(\n    trimNulls(colorFormats),\n    passSampleCount!,\n    depthStencilFormat);\n\n  s_renderPassToPassInfoMap.set(passEncoder, {\n    state: 'open',\n    commandEncoder,\n    targetWidth: targetWidth || 0,\n    targetHeight: targetHeight || 0,\n    vertexBuffers: [],\n    bindGroups: [],\n    occlusionQuerySet,\n    occlusionIndices: new Map<number, Error>(),\n    occlusionQueryActiveIndex: -1,\n    passLayoutInfo: {\n      renderPassLayout,\n      passLayoutSignature: JSON.stringify(renderPassLayout),\n    },\n    inuseTextures,\n  });\n}\n\nwrapFunctionBefore(GPURenderPassEncoder, 'executeBundles', function (this: GPURenderPassEncoder, [bundles]) {\n  const info = s_renderPassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  const device = s_objToDevice.get(this)!;\n\n  let bundleCount = 0;\n  for (const bundle of bundles) {\n    assert(s_objToDevice.get(bundle) === device, () => 'bundle[${count}] is not from same device as render pass encoder', [bundle]);\n    const count = bundleCount;\n    const bundleDesc = getRenderPassLayoutForRenderBundle(bundle)!;\n    const passLayoutInfo = getRenderPassLayout(this);\n    assert(bundleDesc.passLayoutInfo.passLayoutSignature === passLayoutInfo.passLayoutSignature,\n           () => `bundle[${count}] is not compatible with ${this.constructor.name}\n\n${this.constructor.name} expects ${JSON.stringify(passLayoutInfo.renderPassLayout, null, 2)}\n\nbundle is: ${JSON.stringify(bundleDesc.passLayoutInfo.renderPassLayout, null, 2)}\n`,\n      [bundle, this],\n    );\n    ++bundleCount;\n  }\n\n  info.bindGroups.length = 0;\n  info.pipeline = undefined;\n  info.indexBuffer = undefined;\n  info.indexFormat = undefined;\n  info.vertexBuffers.length = 0;\n});\n\nwrapFunctionBefore(GPURenderPassEncoder, 'beginOcclusionQuery', function (this: GPURenderPassEncoder, [queryIndex]) {\n  const info = s_renderPassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  const { occlusionIndices, occlusionQueryActive, occlusionQuerySet } = info;\n  assert(!!occlusionQuerySet, 'no occlusionQuerySet in pass');\n  assertNotDestroyed(occlusionQuerySet);\n  assert(queryIndex < occlusionQuerySet.count, () => `queryIndex(${queryIndex}) >= occlusionQuerySet.count(${occlusionQuerySet.count})`, [occlusionQuerySet]);\n  const queryErr = occlusionIndices.get(queryIndex);\n  assert(!queryErr, () => `queryIndex(${queryIndex}) was already used in this pass at ${queryErr!.stack}`);\n  assert(!occlusionQueryActive, () => `another query is already active from ${occlusionQueryActive!.stack}`);\n  info.occlusionQueryActive = new Error();\n  info.occlusionQueryActiveIndex = queryIndex;\n});\n\nwrapFunctionBefore(GPURenderPassEncoder, 'endOcclusionQuery', function (this: GPURenderPassEncoder) {\n  const info = s_renderPassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  const { occlusionIndices, occlusionQueryActive, occlusionQueryActiveIndex, occlusionQuerySet } = info;\n  assert(!!info.occlusionQueryActive, 'no occlusion query is active');\n  occlusionIndices.set(occlusionQueryActiveIndex, occlusionQueryActive!);\n  if (occlusionQuerySet) {\n    assertNotDestroyed(occlusionQuerySet);\n  }\n  info.occlusionQueryActive = undefined;\n});\n\nwrapBindingCommandsMixin(GPURenderPassEncoder, s_renderPassToPassInfoMap);\n\nwrapFunctionBefore(GPURenderPassEncoder, 'end', function (this: GPURenderPassEncoder) {\n  const info = s_renderPassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  info.state = 'ended';\n  unlockCommandEncoder(info.commandEncoder)!;\n  assert(!info.occlusionQueryActive, () => `occlusion queryIndex(${info.occlusionQueryActiveIndex}) is still active`);\n});\n\nwrapFunctionBefore(GPURenderPassEncoder, 'setViewport', function (this: GPURenderPassEncoder, [x, y, width, height, minDepth, maxDepth]: [number, number, number, number, number, number]) {\n  const info = s_renderPassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  const {\n    targetWidth,\n    targetHeight,\n  } = info;\n\n  assert(x >= 0, () => `x(${x}) < 0`, [this]);\n  assert(y >= 0, () => `y(${y}) < 0`, [this]);\n  assert(x + width <= targetWidth, () => `x(${x}) + width(${width}) > texture.width(${targetWidth})`, [this]);\n  assert(y + height <= targetHeight, () => `y(${x}) + height(${height}) > texture.height(${targetHeight})`, [this]);\n  assert(minDepth >= 0 && minDepth <= 1.0, () => `minDepth(${minDepth}) must be >= 0 and <= 1`);\n  assert(maxDepth >= 0 && maxDepth <= 1.0, () => `maxDepth(${maxDepth}) must be >= 0 and <= 1`);\n  assert(minDepth < maxDepth, () => `minDepth(${minDepth}) must be < maxDepth(${maxDepth})`);\n});\n\nwrapFunctionBefore(GPURenderPassEncoder, 'setScissorRect', function (this: GPURenderPassEncoder, [x, y, width, height]: [number, number, number, number]) {\n  const info = s_renderPassToPassInfoMap.get(this)!;\n  validateEncoderState(this, info.state);\n  const {\n    targetWidth,\n    targetHeight,\n  } = info;\n  assert(x >= 0, () => `x(${x}) < 0`, [this]);\n  assert(y >= 0, () => `y(${y}) < 0`, [this]);\n  assert(x + width <= targetWidth, () => `x(${x}) + width(${width}) > texture.width(${targetWidth})`, [this]);\n  assert(y + height <= targetHeight, () => `y(${x}) + height(${height}) > texture.height(${targetHeight})`, [this]);\n});\n\n","import {\n  beginComputePass,\n} from './compute-pass-encoder.js';\nimport {\n  lockCommandEncoder,\n  finishCommandEncoder,\n  getCommandBufferInfoAndValidateState,\n} from './encoder-utils.js';\nimport {\n  kAllTextureFormatInfo\n} from './format-info.js';\nimport {\n  beginRenderPass,\n} from './render-pass-encoder.js';\nimport { assertNotDestroyed, s_objToDevice } from './shared-state.js';\nimport { bufferUsageToString, physicalMipLevelSpecificTextureExtent, reifyGPUExtent3D, reifyGPUOrigin3D, textureUsageToString } from './utils.js';\nimport { assert } from './validation.js';\nimport {\n  wrapFunctionAfter,\n  wrapFunctionBefore,\n} from './wrap-api.js';\n\nwrapFunctionAfter(GPUCommandEncoder, 'beginComputePass', function (this: GPUCommandEncoder, passEncoder: GPUComputePassEncoder, [desc]) {\n  s_objToDevice.set(passEncoder, s_objToDevice.get(this)!);\n  lockCommandEncoder(this);\n  beginComputePass(this, passEncoder, desc);\n});\n\nwrapFunctionAfter(GPUCommandEncoder, 'beginRenderPass', function (this: GPUCommandEncoder, passEncoder: GPURenderPassEncoder, [desc]) {\n  s_objToDevice.set(passEncoder, s_objToDevice.get(this)!);\n  lockCommandEncoder(this);\n  beginRenderPass(this, passEncoder, desc);\n});\n\nwrapFunctionBefore(GPUCommandEncoder, 'finish', function (this: GPUCommandEncoder) {\n  finishCommandEncoder(this);\n});\n\nwrapFunctionBefore(GPUCommandEncoder, 'copyBufferToBuffer', function (this: GPUCommandEncoder, [src, srcOffset, dst, dstOffset, size]) {\n  getCommandBufferInfoAndValidateState(this);\n  assertNotDestroyed(src);\n  assertNotDestroyed(dst);\n  dstOffset = dstOffset ?? 0;\n  size = size ?? src.size - srcOffset;\n  const device = s_objToDevice.get(this);\n  assert(device === s_objToDevice.get(src), 'src is not from same device as commandEncoder', [src, this]);\n  assert(device === s_objToDevice.get(dst), 'dst is not from same device as commandEncoder', [dst, this]);\n  assert(src !== dst, 'src must not be same buffer as dst', [src, dst]);\n  assert(!!(src.usage & GPUBufferUsage.COPY_SRC), () => `src.usage(${bufferUsageToString(src.usage)} missing COPY_SRC)`, [src]);\n  assert(!!(dst.usage & GPUBufferUsage.COPY_DST), () => `dst.usage(${bufferUsageToString(dst.usage)} missing COPY_DST)`, [dst]);\n  assert(srcOffset + size <= src.size, () => `srcOffset(${srcOffset}) + size(${size}) > srcBuffer.size(${src.size})`, [src]);\n  assert(dstOffset + size <= dst.size, () => `dstOffset(${dstOffset}) + size(${size}) > dstBuffer.size(${dst.size})`, [dst]);\n  assert(size % 4 === 0, () => `size(${size}) is not multiple of 4`);\n  assert(srcOffset % 4 === 0, () => `srcOffset(${srcOffset}) is not multiple of 4`);\n  assert(dstOffset % 4 === 0, () => `dstOffset(${dstOffset}) is not multiple of 4`);\n});\n\nfunction validateImageCopyBuffer(icb: GPUImageCopyBuffer) {\n  assertNotDestroyed(icb.buffer);\n  const bytesPerRow = icb.bytesPerRow || 0;\n  assert(bytesPerRow % 256 === 0, () => `src.bytesPerRow(${bytesPerRow}) not multiple of 256`, [icb.buffer]);\n}\n\nfunction validateImageCopyTexture(ict: GPUImageCopyTexture, copySize: GPUExtent3D) {\n  assertNotDestroyed(ict.texture);\n\n  const formatInfo = kAllTextureFormatInfo[ict.texture.format];\n  const {\n    blockWidth,\n    blockHeight,\n  } = formatInfo;\n\n  const mipLevel = ict.mipLevel || 0;\n  const [origX, origY] = reifyGPUOrigin3D(ict.origin);\n  assert(mipLevel < ict.texture.mipLevelCount, () => `mipLevel(${mipLevel}) must be less than texture.mipLevelCount(${ict.texture.mipLevelCount})`, [ict.texture]);\n  assert(origX % blockWidth === 0, () => `origin.x(${origX}) not multiple of blockWidth(${blockWidth})`, [ict.texture]);\n  assert(origY % blockHeight === 0, () => `origin.y(${origY}) not multiple of blockHeight(${blockHeight})`, [ict.texture]);\n\n  const [copyWidth, copyHeight, copyDepthOrArrayLayers] = reifyGPUExtent3D(copySize);\n\n  if (formatInfo.depth && formatInfo.stencil && ict.texture.sampleCount > 1) {\n    const [w, h, d] = physicalMipLevelSpecificTextureExtent(ict.texture, mipLevel);\n    assert(copyWidth === w &&\n           copyHeight === h &&\n           copyDepthOrArrayLayers === d, 'copySize must match textureSize for depth-stencil textures', [ict.texture]);\n  }\n}\n\nfunction validateTextureCopyRange(ict: GPUImageCopyTexture, copySize: GPUExtent3D) {\n  const formatInfo = kAllTextureFormatInfo[ict.texture.format];\n  const {\n    blockWidth,\n    blockHeight,\n  } = formatInfo;\n  const mipLevel = ict.mipLevel || 0;\n  const [origX, origY, origZ] = reifyGPUOrigin3D(ict.origin);\n  const [copyWidth, copyHeight, copyDepthOrArrayLayers] = reifyGPUExtent3D(copySize);\n  const [w, h, d] = physicalMipLevelSpecificTextureExtent(ict.texture, mipLevel);\n\n  const res = [ict.texture];\n  assert(origX + copyWidth <= w, () => `origin.x(${origX}) + copySize.width(${copyWidth}) is > physical width(${w}) of mipLevel(${mipLevel})`, res);\n  assert(origY + copyHeight <= h, () => `origin.y(${origY}) + copySize.height(${copyHeight}) is > physical height(${h}) of mipLevel(${mipLevel})`, res);\n  assert(origZ + copyDepthOrArrayLayers <= d, () => `origin.z(${origZ}) + copySize.depthOrArrayBuffers(${copyDepthOrArrayLayers}) is > texture.depthOrArrayLayers(${d}) of mipLevel(${mipLevel})`, res);\n  assert(copyWidth % blockWidth === 0, () => `copySize.width(${copyWidth}) is not multiple of blockWidth(${blockWidth})`, res);\n  assert(copyHeight % blockHeight === 0, () => `copySize.height(${copyHeight}) is not multiple of blockHeight(${blockHeight})`, res);\n}\n\nfunction validateLinearTextureData(idl: GPUImageDataLayout, byteSize: number, format: GPUTextureFormat, copyExtent: GPUExtent3D) {\n  const formatInfo = kAllTextureFormatInfo[format];\n  const [copyWidth, copyHeight, copyDepthOrArrayLayers] = reifyGPUExtent3D(copyExtent);\n  const { blockWidth, blockHeight } = formatInfo;\n  const widthInBlocks = copyWidth / blockWidth;\n  const heightInBlocks = copyHeight / blockHeight;\n  const bytesInLastRow = widthInBlocks * formatInfo.bytesPerBlock!;\n\n  assert(widthInBlocks % 1 === 0, () => `width(${copyWidth}) must be multiple of blockWidth${blockWidth}`);\n  assert(heightInBlocks % 1 === 0, () => `height(${copyHeight}) must be multiple of blockHeight${blockHeight}`);\n  if (heightInBlocks > 1) {\n    assert(idl.bytesPerRow !== undefined, () => `bytesPerRow must be set if heightInBlocks(${heightInBlocks}) > 1`);\n  }\n\n  if (copyDepthOrArrayLayers > 1) {\n    assert(idl.bytesPerRow !== undefined, () => `bytesPerRow must be set if copySize.depthOrArrayLayers(${copyDepthOrArrayLayers}) > 1`);\n  }\n  if (copyDepthOrArrayLayers > 1) {\n    assert(idl.rowsPerImage !== undefined, () => `rowsPerImage must be set if copySize.depthOrArrayLayers(${copyDepthOrArrayLayers}) > 1`);\n  }\n  if (idl.bytesPerRow !== undefined) {\n    assert(idl.bytesPerRow >= bytesInLastRow, () => `bytesPerRow(${idl.bytesPerRow}) must be >= bytes in the last row(${bytesInLastRow})`);\n  }\n  if (idl.rowsPerImage !== undefined) {\n    assert(idl.rowsPerImage >= heightInBlocks, () => `rowsPerImage(${idl.rowsPerImage}) must be >= heightInBlocks(${heightInBlocks})`);\n  }\n\n  const bytesPerRow = idl.bytesPerRow ?? 0;\n  const rowsPerImage = idl.rowsPerImage ?? 0;\n  let requiredBytesInCopy = 0;\n  if (copyDepthOrArrayLayers > 0) {\n    // all layers except the last one\n    requiredBytesInCopy += bytesPerRow * rowsPerImage * (copyDepthOrArrayLayers - 1);\n    if (heightInBlocks > 0) {\n      // last layer = all rows padded + last row\n      requiredBytesInCopy += bytesPerRow * (heightInBlocks - 1) + bytesInLastRow;\n    }\n  }\n  const offset = idl.offset ?? 0;\n  assert(offset + requiredBytesInCopy <= byteSize, () => `offset(${offset}) + requiredBytesInCopy(${requiredBytesInCopy}) must be <= buffer.size(${byteSize})`);\n}\n\nfunction validateB2TorT2BCopy(encoder: GPUCommandEncoder, buf: GPUImageCopyBuffer, tex: GPUImageCopyTexture, copySize: GPUExtent3D, bufferIsSource: boolean) {\n  const device = s_objToDevice.get(encoder);\n  assert(device === s_objToDevice.get(buf.buffer), 'buffer is not from same device as commandEncoder', [buf.buffer, encoder]);\n  assert(device === s_objToDevice.get(tex.texture), 'texture is not from same device as commandEncoder', [tex.texture, encoder]);\n\n  validateImageCopyBuffer(buf);\n  const [bufRequiredUsage, texRequiredUsage]: [keyof typeof GPUBufferUsage, keyof typeof GPUTextureUsage] = bufferIsSource\n     ? ['COPY_SRC', 'COPY_DST']\n     : ['COPY_DST', 'COPY_SRC'];\n  assert(!!(buf.buffer.usage & GPUBufferUsage[bufRequiredUsage]), () => `src.usage(${bufferUsageToString(buf.buffer.usage)} missing ${bufRequiredUsage})`, [buf.buffer]);\n\n  validateImageCopyTexture(tex, copySize);\n\n  const formatInfo = kAllTextureFormatInfo[tex.texture.format];\n\n  assert(!!(tex.texture.usage & GPUTextureUsage[texRequiredUsage]), () => `dst.texture.usage(${textureUsageToString(tex.texture.usage)} missing ${texRequiredUsage})`, [tex.texture]);\n  assert(tex.texture.sampleCount === 1, 'sampleCount must be 1', [tex.texture]);\n\n  let aspectSpecificFormat = tex.texture.format;\n  const isDepthOrStencil = formatInfo.depth || formatInfo.stencil;\n  if (isDepthOrStencil) {\n    if (!formatInfo.stencil) {\n      assert(tex.aspect !== 'stencil-only', 'can not use stencil-only aspect on non stencil texture', [tex.texture]);\n    }\n    if (!formatInfo.depth) {\n      assert(tex.aspect !== 'depth-only', 'can not use depth-only aspect on non depth texture', [tex.texture]);\n    }\n    assert(tex.aspect === 'depth-only' || tex.aspect === 'stencil-only', 'must use one aspect');\n    const aspect = tex.aspect === 'depth-only' ? 'depth' : 'stencil';\n    const info = formatInfo[aspect];\n    assert(!!info?.copyDst, `can not copy to ${tex.aspect} of texture of format(${tex.texture.format})`, [tex.texture]);\n\n    if (aspectSpecificFormat === 'depth24plus-stencil8') {\n      aspectSpecificFormat = tex.aspect === 'depth-only'\n        ? 'depth24plus'\n        : 'stencil8';\n    } else if (aspectSpecificFormat === 'depth32float-stencil8') {\n      aspectSpecificFormat = tex.aspect === 'depth-only'\n        ? 'depth32float'\n        : 'stencil8';\n    }\n  }\n\n  validateTextureCopyRange(tex, copySize);\n\n  const srcOffset = buf.offset || 0;\n  if (!isDepthOrStencil) {\n    const texelCopyBlockFootPrint = formatInfo.bytesPerBlock!;\n    assert(srcOffset % texelCopyBlockFootPrint === 0, () => `src.offset(${srcOffset}) must multiple of blockSize(${texelCopyBlockFootPrint})`);\n  } else {\n    assert(srcOffset % 4 === 0, () => `src.offset(${srcOffset}) must by multiple of 4 for depth and/or stencil textures`);\n  }\n\n  validateLinearTextureData(buf, buf.buffer.size, aspectSpecificFormat, copySize);\n}\n\nfunction isCopyCompatible(format1: GPUTextureFormat, format2: GPUTextureFormat) {\n  return format1.replace('-srgb', '') === format2.replace('-srgb', '');\n}\n\nfunction isIntersectingAxis(v1: number, v2: number, size: number) {\n  const distance = Math.abs(v2 - v1);\n  const gap = distance - size;\n  return gap < 0;\n}\n\nwrapFunctionBefore(GPUCommandEncoder, 'copyBufferToTexture', function (this: GPUCommandEncoder, [src, dst, copySize]) {\n  getCommandBufferInfoAndValidateState(this);\n  validateB2TorT2BCopy(this, src, dst, copySize, true);\n});\n\nwrapFunctionBefore(GPUCommandEncoder, 'copyTextureToBuffer', function (this: GPUCommandEncoder, [src, dst, copySize]) {\n  getCommandBufferInfoAndValidateState(this);\n  validateB2TorT2BCopy(this, dst, src, copySize, false);\n});\n\nwrapFunctionBefore(GPUCommandEncoder, 'copyTextureToTexture', function (this: GPUCommandEncoder, [src, dst, copySize]) {\n  getCommandBufferInfoAndValidateState(this);\n\n  const device = s_objToDevice.get(this);\n  assert(device === s_objToDevice.get(src.texture), 'src.texture is not from same device as commandEncoder', [src, this]);\n  assert(device === s_objToDevice.get(dst.texture), 'dst.texture is not from same device as commandEncoder', [dst, this]);\n\n  validateImageCopyTexture(src, copySize);\n  assert(!!(src.texture.usage & GPUTextureUsage.COPY_SRC), () => `src.texture.usage(${textureUsageToString(src.texture.usage)} missing COPY_SRC`, [src.texture]);\n\n  validateImageCopyTexture(dst, copySize);\n  assert(!!(dst.texture.usage & GPUTextureUsage.COPY_DST), () => `src.texture.usage(${textureUsageToString(dst.texture.usage)} missing COPY_DST`, [dst.texture]);\n\n  assert(src.texture.sampleCount === dst.texture.sampleCount, () => `src.texture.sampleCount(${src.texture.sampleCount}) must equal dst.texture.sampleCount(${dst.texture.sampleCount})`, [src.texture, dst.texture]);\n  assert(isCopyCompatible(src.texture.format, dst.texture.format), () => `src.texture.format(${src.texture.format}) must be copy compatible with dst.texture.format(${dst.texture.format})`, [src.texture, dst.texture]);\n\n  const formatInfo = kAllTextureFormatInfo[src.texture.format];\n  const isDepthStencil = !!formatInfo.depth && !!formatInfo.stencil;\n  if (isDepthStencil) {\n    assert(src.aspect === 'all', () => `src.aspect must be 'all' when format(${src.texture.format}) is a depth-stencil format`, [src.texture]);\n    assert(dst.aspect === 'all', () => `dst.aspect must be 'all' when format(${dst.texture.format}) is a depth-stencil format`, [dst.texture]);\n  }\n\n  validateTextureCopyRange(src, copySize);\n  validateTextureCopyRange(dst, copySize);\n\n  if (src.texture === dst.texture) {\n    const srcOrigin = reifyGPUOrigin3D(src.origin);\n    const dstOrigin = reifyGPUOrigin3D(dst.origin);\n    const size = reifyGPUExtent3D(copySize);\n    assert(\n      !isIntersectingAxis(srcOrigin[0], dstOrigin[0], size[0]) &&\n      !isIntersectingAxis(srcOrigin[1], dstOrigin[1], size[1]) &&\n      !isIntersectingAxis(srcOrigin[2], dstOrigin[2], size[2]),\n      () => `when src and dst textures are the same texture, copy boxes must not overlap`, [src.texture, dst.texture]);\n  }\n});\n\nwrapFunctionBefore(GPUCommandEncoder, 'clearBuffer', function (this: GPUCommandEncoder, [buffer, offset, size]) {\n  getCommandBufferInfoAndValidateState(this);\n  assertNotDestroyed(buffer);\n  offset = offset ?? 0;\n  size = size ?? buffer.size - offset;\n  assert(s_objToDevice.get(this) === s_objToDevice.get(buffer), 'buffer not from same device as encoder', [buffer, this]);\n  assert(!!(buffer.usage & GPUBufferUsage.COPY_DST), () => `buffer.usage(${bufferUsageToString(buffer.usage)}) must have COPY_DST`, [buffer]);\n  assert(size % 4 === 0, () => `size(${size}) must be multiple of 4`);\n  assert(offset % 4 === 0, () => `offset(${offset}) must be multiple of 4`);\n  assert(offset + size <= buffer.size, () => `offset(${offset}) + size(${size}) must be <= buffer.size(${buffer.size})`);\n});\n\nwrapFunctionBefore(GPUCommandEncoder, 'resolveQuerySet', function (this: GPUCommandEncoder, [querySet, firstQuery, queryCount, destination, destinationOffset]) {\n  getCommandBufferInfoAndValidateState(this);\n  assertNotDestroyed(querySet);\n  assertNotDestroyed(destination);\n  const device = s_objToDevice.get(this);\n  assert(s_objToDevice.get(querySet) === device, 'querySet not from same device', [querySet]);\n  assert(s_objToDevice.get(destination) === device, 'destination buffer not from same device', [destination]);\n  assert((destination.usage & GPUBufferUsage.QUERY_RESOLVE) !== 0, () => `destination.usage(${bufferUsageToString(destination.usage)} does not contain QUERY_RESOLVE)`, [destination]);\n  assert(firstQuery < querySet.count, () => `firstQuery(${firstQuery}) out of range for querySet.count(${querySet.count})`);\n  assert(firstQuery + queryCount <= querySet.count, () => `firstQuery(${firstQuery}) + queryCount(${queryCount}) > querySet.count(${querySet.count})`);\n  assert(destinationOffset % 256 === 0, () => `destinationOffset(${destinationOffset}) is not multiple of 256`);\n  assert(destinationOffset + queryCount * 8 <= destination.size, () => `destinationOffset(${destinationOffset}) + queryCount(${queryCount}) * 8 > destination.size(${destination.size})`);\n});","import './error-scope-wrapper.js';\nimport './device.js';\nimport './canvas-context.js';\nimport './command-encoder.js';\nimport './compute-pass-encoder.js';\nimport './render-pass-encoder.js';\nimport './render-bundle-encoder.js';\nimport './texture.js';\n\nconsole.log('webgpu-debug-helper running');"],"names":["assert","getRenderPassLayout"],"mappings":"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AAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,W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C,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAA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CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC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CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,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CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,sBAAsiBAAiB,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,C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OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,4BAA4B,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,4BAA4B,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yBAAyB,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,MAAM,CAAC,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,iCAAiC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,mCAAmC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,YAAY,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,YAAY,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,uBAAuB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,YAAY,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,sCAAsC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,OAAO,IAAI,CAAC,4BAA4B,EAAE,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,CAAC,oCAAoC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,yBAAyB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,kCAAkC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,gDAAgD,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,kCAAkC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,YAAY,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEp4kM,SAAS,qBAAqB,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;IACxD,IAAI,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,KAAK;IAChD,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;IACnD,QAAQ,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,KAAK,UAAU,IAAI,EAAE,GAAG,SAAS;IAC/D;IACA,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;IACnF;IACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;IACpD,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB,QAAQ,OAAO,EAAE;IACjB;IACA,IAAI,MAAM,UAAU,GAAG,qBAAqB,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC;IACrE,IAAI,OAAO,UAAU,EAAE,SAAS,IAAI,EAAE;IACtC;IACA,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;IAC5D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,8BAA8B,CAAC,IAAI,EAAE,IAAI,EAAE;IACpD,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC;IAC9C,IAAI,MAAM,SAAS,GAAG;IACtB,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC;IACzE,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,QAAQ,CAAC;IAC3F,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC;IAC3E,KAAK;IACL,IAAI,MAAM,0CAA0C,GAAG,EAAE;IACzD,IAAI,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;IACtC,QAAQ,MAAM,wBAAwB,GAAG,0CAA0C,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,EAAE;IAChH,QAAQ,0CAA0C,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,wBAAwB;IAC7F;IACA,QAAQ,MAAM,KAAK,GAAG,wBAAwB,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;IAC1E,QAAQ,wBAAwB,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE;IAC7D,YAAY,GAAG,QAAQ,CAAC,KAAK;IAC7B,YAAY,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,EAAE,UAAU,IAAI,CAAC,CAAC;IAC5E,SAAS,CAAC;IACV;IACA,IAAI,MAAM,WAAW,GAAG,0CAA0C,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC3H,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACjD,QAAQ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;IAC7B,YAAY,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C;IACA;IACA,IAAI,OAAO,WAAW;IACtB;IACA,SAAS,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE;IAC/C,IAAI,OAAO,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI;IACjD,QAAQ,MAAM,cAAc,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7D,QAAQ,OAAO;IACf,YAAY,CAAC,CAAC,IAAI;IAClB,YAAY;IACZ,gBAAgB,cAAc;IAC9B,gBAAgB,KAAK,EAAE,CAAC,CAAC,KAAK;IAC9B,gBAAgB,OAAO,EAAE,CAAC,CAAC,OAAO;IAClC,gBAAgB,IAAI,EAAE,cAAc,CAAC,IAAI;IACzC,aAAa;IACb,SAAS;IACT,KAAK,CAAC,CAAC;IACP;IACA,SAAS,oBAAoB,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE;IAC3D;IACA,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI;IAClE,QAAQ,OAAO;IACf,YAAY,CAAC,CAAC,IAAI;IAClB,YAAY;IACZ,gBAAgB,MAAM,EAAE,CAAC,CAAC,MAAM;IAChC,gBAAgB,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACjD,aAAa;IACb,SAAS;IACT,KAAK,CAAC,CAAC;IACP,IAAI,OAAO;IACX,QAAQ,MAAM;IACd,QAAQ,IAAI,EAAE,UAAU,CAAC,IAAI;IAC7B,QAAQ,MAAM;IACd,KAAK;IACL;IACA,SAAS,oBAAoB,CAAC,IAAI,EAAE;IACpC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IACrC,QAAQ,OAAO,OAAO;IACtB;IACA;IACA,IAAI,QAAQ,IAAI,CAAC,MAAM,EAAE,IAAI;IAC7B,QAAQ,KAAK,KAAK,EAAE,OAAO,OAAO;IAClC,QAAQ,KAAK,KAAK,EAAE,OAAO,MAAM;IACjC,QAAQ,KAAK,KAAK,EAAE,OAAO,MAAM;IACjC,QAAQ;IACR,YAAY,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;IAC1D;IACA;IACA,SAAS,gBAAgB,CAAC,IAAI,EAAE;IAChC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;IACxC,QAAQ,OAAO,UAAU;IACzB;IACA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;IAC1C,QAAQ,OAAO,YAAY;IAC3B;IACA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;IAClC,QAAQ,OAAO,IAAI;IACnB;IACA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;IAClC,QAAQ,OAAO,IAAI;IACnB;IACA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;IACpC,QAAQ,OAAO,MAAM;IACrB;IACA,IAAI,OAAO,IAAI;IACf;IACA,SAAS,uBAAuB,CAAC,IAAI,EAAE;IACvC,IAAI,QAAQ,IAAI,CAAC,MAAM;IACvB,QAAQ,KAAK,MAAM,EAAE,OAAO,WAAW;IACvC,QAAQ,KAAK,OAAO,EAAE,OAAO,YAAY;IACzC,QAAQ,KAAK,YAAY,EAAE,OAAO,YAAY;IAC9C,QAAQ;IACR,YAAY,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;IAC7D;IACA;IACA,SAAS,cAAc,CAAC,IAAI,EAAE;IAC9B;IACA,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa;IAC3C,UAAU;IACV,UAAU,WAAW;IACrB;IACA,SAAS,uBAAuB,CAAC,QAAQ,EAAE,UAAU,EAAE;IACvD,IAAI,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ;IAC9C,IAAI,QAAQ,QAAQ,CAAC,YAAY;IACjC,QAAQ,KAAK,CAAC,CAAC,OAAO;IACtB,YAAY,OAAO;IACnB,gBAAgB,OAAO;IACvB,gBAAgB,UAAU;IAC1B,gBAAgB,MAAM,EAAE;IACxB,oBAAoB,IAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,cAAc,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC3E,iBAAiB;IACjB,aAAa;IACb,QAAQ,KAAK,CAAC,CAAC,OAAO;IACtB,YAAY,OAAO;IACnB,gBAAgB,OAAO;IACvB,gBAAgB,UAAU;IAC1B,gBAAgB,MAAM,EAAE;IACxB,oBAAoB,IAAI,EAAE,CAAC,MAAM,KAAK,EAAE,IAAI,MAAM,KAAK,MAAM,IAAI,mBAAmB,GAAG,SAAS;IAChG,oBAAoB,IAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,cAAc,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC3E,iBAAiB;IACjB,aAAa;IACb,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE;IACxB,YAAY,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,EAAE;IAClD,gBAAgB,OAAO;IACvB,oBAAoB,OAAO;IAC3B,oBAAoB,UAAU;IAC9B,oBAAoB,eAAe,EAAE,EAAE;IACvC,iBAAiB;IACjB;IACA,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;IACnE,YAAY,OAAO;IACnB,gBAAgB,OAAO;IACvB,gBAAgB,UAAU;IAC1B,gBAAgB,OAAO,EAAE;IACzB,oBAAoB,UAAU,EAAE,oBAAoB,CAAC,IAAI,CAAC;IAC1D,oBAAoB,aAAa,EAAE,gBAAgB,CAAC,IAAI,CAAC;IACzD,oBAAoB,YAAY;IAChC,iBAAiB;IACjB,aAAa;IACb;IACA,QAAQ,KAAK,CAAC,CAAC,OAAO;IACtB,YAAY,OAAO;IACnB,gBAAgB,OAAO;IACvB,gBAAgB,UAAU;IAC1B,gBAAgB,OAAO,EAAE;IACzB,oBAAoB,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC;IAC9C,iBAAiB;IACjB,aAAa;IACb,QAAQ,KAAK,CAAC,CAAC,cAAc;IAC7B,YAAY,OAAO;IACnB,gBAAgB,OAAO;IACvB,gBAAgB,UAAU;IAC1B,gBAAgB,cAAc,EAAE;IAChC,oBAAoB,MAAM,EAAE,uBAAuB,CAAC,IAAI,CAAC;IACzD,oBAAoB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;IAC5C,oBAAoB,aAAa,EAAE,gBAAgB,CAAC,IAAI,CAAC;IACzD,iBAAiB;IACjB,aAAa;IACb,QAAQ;IACR,YAAY,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;IACpD;IACA;IACA,SAAS,cAAc,CAAC,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,MAAM,WAAW,GAAG,EAAE;IAC1B,IAAI,KAAK,MAAM,IAAI,IAAI,SAAS,EAAE;IAClC,QAAQ,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;IACjC,YAAY,KAAK;IACjB,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,IAAI;IACtD,gBAAgB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ;IAChD,gBAAgB,OAAO;IACvB,oBAAoB,IAAI;IACxB,oBAAoB,KAAK;IACzB,oBAAoB,KAAK,EAAE,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC;IACnE,iBAAiB;IACjB,aAAa,CAAC;IACd,SAAS;IACT;IACA,IAAI,OAAO,WAAW;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,yBAAyB,CAAC,IAAI,EAAE;IACzC,IAAI,MAAM,OAAO,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;IAChC,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI;IACzE,QAAQ,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,oBAAoB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;IAC9E,KAAK,CAAC,CAAC;IACP,IAAI,MAAM,QAAQ,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC;IACjE,IAAI,MAAM,QAAQ,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1G,IAAI,MAAM,eAAe,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC;IACxH,IAAI,MAAM,QAAQ,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,CAAC;IACjH,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,CAAC;IACzH,IAAI,MAAM,QAAQ,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC;IACjE,IAAI,MAAM,WAAW,GAAG;IACxB,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC;IACtE,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,CAAC,QAAQ,CAAC;IAC1E,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,cAAc,CAAC,OAAO,CAAC;IACxE,KAAK;IACL,IAAI,OAAO;IACX,QAAQ,gBAAgB;IACxB,QAAQ,QAAQ;IAChB,QAAQ,OAAO;IACf,QAAQ,QAAQ;IAChB,QAAQ,eAAe;IACvB,QAAQ,QAAQ;IAChB,QAAQ,QAAQ;IAChB,QAAQ,WAAW;IACnB,KAAK;IACL;IACA,SAASA,QAAM,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE;IAChC,IAAI,IAAI,CAAC,IAAI,EAAE;IACf,QAAQ,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC;IAC5B;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE;IAC7C,IAAI,QAAQ,CAAC,CAAC,YAAY;IAC1B,QAAQ,KAAK,CAAC,CAAC,OAAO;IACtB,QAAQ,KAAK,CAAC,CAAC,OAAO;IACtB,QAAQ,KAAK,CAAC,CAAC,cAAc;IAC7B,YAAY,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC;IACnD,QAAQ;IACR,YAAY,OAAO;IACnB,gBAAgB,IAAI,EAAE,CAAC;IACvB,gBAAgB,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;IACjC,aAAa;IACb;IACA;IACA,SAAS,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE;IAC5C,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE;IAC1B,QAAQA,QAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,yBAAyB,CAAC;IAC7D,QAAQA,QAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,2BAA2B,CAAC;IAC/D,QAAQ,MAAM,SAAS,GAAG,QAAQ;IAClC;IACA,QAAQ,OAAO;IACf,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;IAChC,YAAY,WAAW,EAAE,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC;IACnE,YAAY,WAAW,EAAE,SAAS,CAAC,KAAK;IACxC,SAAS;IACT;IACA,SAAS,IAAI,QAAQ,CAAC,QAAQ,EAAE;IAChC,QAAQA,QAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,4BAA4B,CAAC;IAClE,QAAQ,MAAM,UAAU,GAAG,QAAQ;IACnC,QAAQ,OAAO,oBAAoB,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC;IAChE;IACA,SAAS;IACT;IACA,QAAQ,MAAM,cAAc,GAAG,QAAQ;IACvC,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC;IAC9B,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACpE,cAAc,QAAQ,CAAC,IAAI;IAC3B;IACA,QAAQ,OAAO;IACf,YAAY,IAAI,EAAE,QAAQ,CAAC,IAAI;IAC/B,YAAY,IAAI,EAAE,IAAI;IACtB,SAAS;IACT;IACA;;IA6MA,MAAM,yBAAyB,GAAG,IAAI,GAAG,CAAC;IAC1C,IAAI,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IACpE,IAAI,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IACrE,IAAI,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IACvE,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IACxE,IAAI,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IACvE,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IACxE,IAAI,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC;IAC1E;IACA,CAAC,CAAC;IACgC,IAAI,GAAG,CAAC,CAAC,GAAG,yBAAyB,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;;ICzvC1J;IACA;IACA;IAEA;;IAEG;IACH,MAAM,iCAAiC,GAAG;;IAExC,IAAA,WAAW,EAAE;IACX,QAAA,GAAG,EAAE,aAAa;IAClB,QAAA,YAAY,EAAE,aAAa;IAC3B,QAAA,cAAc,EAAE,SAAS;IAC1B,KAAA;IACD,IAAA,sBAAsB,EAAE;IACtB,QAAA,GAAG,EAAE,sBAAsB;IAC3B,QAAA,YAAY,EAAE,aAAa;IAC3B,QAAA,cAAc,EAAE,UAAU;IAC3B,KAAA;;IAGD,IAAA,YAAY,EAAE;IACZ,QAAA,GAAG,EAAE,cAAc;IACnB,QAAA,YAAY,EAAE,cAAc;IAC5B,QAAA,cAAc,EAAE,SAAS;IAC1B,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,GAAG,EAAE,cAAc;IACnB,QAAA,YAAY,EAAE,cAAc;IAC5B,QAAA,cAAc,EAAE,SAAS;IAC1B,KAAA;IACD,IAAA,uBAAuB,EAAE;IACvB,QAAA,GAAG,EAAE,uBAAuB;IAC5B,QAAA,YAAY,EAAE,cAAc;IAC5B,QAAA,cAAc,EAAE,UAAU;IAC3B,KAAA;IACD,IAAA,QAAQ,EAAE;IACR,QAAA,GAAG,EAAE,UAAU;IACf,QAAA,YAAY,EAAE,SAAS;IACvB,QAAA,cAAc,EAAE,UAAU;IAC3B,KAAA;KACF;IAEK,SAAU,mCAAmC,CAAC,MAAwB,EAAE,MAAwB,EAAA;IACpG,IAAA,MAAM,IAAI,GAAG,iCAAiC,CAAC,MAAwD,CAAC;IACxG,IAAA,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,CAAqB,GAAG,SAAS;IAC5D;IAEO,MAAM,qBAAqB,GAAiC;IACjE,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,QAAQ,EAAE;IACR,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,QAAQ,EAAE;IACR,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,YAAY,EAAE,YAAY;IAC1B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,YAAY,EAAE,YAAY;IAC1B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,WAAW,EAAE;IACX,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,WAAW,EAAE;IACX,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,YAAY,EAAE,YAAY;IAC1B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,YAAY,EAAE,YAAY;IAC1B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,WAAW,EAAE;IACX,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,aAAa,EAAE;IACb,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,IAAI;IACxB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,SAAS,EAAE;IACT,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,IAAI;IACxB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,oBAAoB;IAC5B,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,IAAI;IACxB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,WAAW,EAAE;IACX,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,oBAAoB;IAC5B,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,EAAE;IACd,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,EAAE;IACd,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,aAAa,EAAE;IACb,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,oBAAoB;IAC5B,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,EAAE;IACd,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,aAAa,EAAE;IACb,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,KAAK;IACd,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IACb,YAAA,OAAO,EAAE,IAAI;IACb,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,UAAU,EAAE,CAAC;IACb,YAAA,WAAW,EAAE;IACd,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,eAAe,EAAE;IACf,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,UAAU,EAAE;IACV,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,SAAS,EAAE;IACT,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,aAAa,EAAE;IACb,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE;IACrB,SAAA;IACD,QAAA,aAAa,EAAE;IAChB,KAAA;IACD,IAAA,sBAAsB,EAAE;IACtB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE;IACrB,SAAA;IACD,QAAA,SAAS,EAAE;IACT,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE;IAChB,KAAA;IACD,IAAA,uBAAuB,EAAE;IACvB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,SAAS,EAAE;IACT,YAAA,MAAM,EAAE,MAAM;IACd,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,IAAI;IACnB,QAAA,SAAS,EAAE;IACZ,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,aAAa,EAAE;IACb,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,aAAa,EAAE;IACb,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,wBAAwB;IACnC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,kBAAkB,EAAE;IAClB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,uBAAuB,EAAE;IACvB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,sBAAsB,EAAE;IACtB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,cAAc,EAAE;IACd,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,eAAe,EAAE;IACf,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,eAAe,EAAE;IACf,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,qBAAqB,EAAE;IACrB,QAAA,YAAY,EAAE,CAAC;IACf,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,gBAAgB;IAC9B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,sBAAsB,EAAE;IACtB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,sBAAsB,EAAE;IACtB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,iBAAiB,EAAE;IACjB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,sBAAsB,EAAE;IACtB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,CAAC;IAChB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,iBAAiB;IAC/B,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,kBAAkB,EAAE;IAClB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,uBAAuB,EAAE;IACvB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,kBAAkB,EAAE;IAClB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,uBAAuB,EAAE;IACvB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,kBAAkB,EAAE;IAClB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB,KAAA;IACD,IAAA,uBAAuB,EAAE;IACvB,QAAA,YAAY,EAAE,EAAE;IAChB,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,OAAO,EAAE;IACP,YAAA,MAAM,EAAE,OAAO;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,KAAK;IAChB,YAAA,kBAAkB,EAAE,KAAK;IACzB,YAAA,OAAO,EAAE;IACV,SAAA;IACD,QAAA,aAAa,EAAE,KAAK;IACpB,QAAA,SAAS,EAAE,0BAA0B;IACrC,QAAA,YAAY,EAAE,kBAAkB;IAChC,QAAA,eAAe,EAAE;IAClB;KACF;;IC1rDD,SAAS,eAAe,CAAC,QAAgC,EAAE,IAAY,EAAA;QACrE,MAAM,KAAK,GAAG,EAAE;IAChB,IAAA,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAC7C,QAAA,IAAI,IAAI,GAAG,CAAC,EAAE;IACZ,YAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;;IAGjB,IAAA,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;IACxB;IAEM,SAAU,mBAAmB,CAAC,IAAY,EAAA;IAC9C,IAAA,OAAO,eAAe,CAAC,cAAmD,EAAE,IAAI,CAAC;IACnF;IAEM,SAAU,oBAAoB,CAAC,IAAY,EAAA;IAC/C,IAAA,OAAO,eAAe,CAAC,eAAoD,EAAE,IAAI,CAAC;IACpF;IAEM,SAAU,WAAW,CAAC,GAAY,EAAA;QACtC,MAAM,KAAK,CAAC,CAAA,aAAA,EAAuB,EAAE,CAAA,CAAE,CAAC;IAC1C;IAEM,SAAU,OAAO,CAAC,CAAS,EAAE,KAAa,EAAA;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK;IACrC;IAeM,SAAU,SAAS,CAAI,CAAe,EAAA;IAC1C,IAAA,MAAM,GAAG,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC;QAC5C,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;IAC5B;IAEM,SAAU,gBAAgB,CAAC,CAAe,EAAA;IAC9C,IAAA,CAAC,GAAG,CAAC,IAAI,EAAE;QACX,MAAM,CAAC,GAAG,CAAoB;QAC9B,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACjF,OAAO;gBACL,CAAC,CAAC,CAAC,IAAI,CAAC;gBACR,CAAC,CAAC,CAAC,IAAI,CAAC;gBACR,CAAC,CAAC,CAAC,IAAI,CAAC;aACT;;IAGH,IAAA,MAAM,CAAC,GAAG,CAAC,GAAI,CAAc,CAAC;QAC9B,OAAO;IACL,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACT,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACT,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACV;IACH;IAEM,SAAU,gBAAgB,CAAC,CAAc,EAAA;QAC7C,MAAM,CAAC,GAAG,CAAoB;IAC9B,IAAA,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC/B,OAAO;IACL,YAAA,CAAC,CAAC,KAAK;gBACP,CAAC,CAAC,MAAM,IAAI,CAAC;gBACb,CAAC,CAAC,kBAAkB,IAAI,CAAC;aAC1B;;IAGH,IAAA,MAAM,CAAC,GAAG,CAAC,GAAI,CAAc,CAAC;QAC9B,OAAO;YACL,CAAC,CAAC,CAAC,CAAC;IACJ,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACT,QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACV;IACH;IAEM,SAAU,oCAAoC,CAAC,OAAmB,EAAE,QAAgB,EAAA;IACxF,IAAA,QAAQ,OAAO,CAAC,SAAS;IACvB,QAAA,KAAK,IAAI;gBACP,OAAO;oBACL,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC;oBACtC,CAAC;oBACD,CAAC;iBACF;IACH,QAAA,KAAK,IAAI;gBACP,OAAO;oBACL,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC;oBACtC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC;IACvC,gBAAA,OAAO,CAAC,kBAAkB;iBAC3B;IACH,QAAA,KAAK,IAAI;gBACP,OAAO;oBACL,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC;oBACtC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC;oBACvC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,kBAAkB,IAAI,QAAQ,CAAC;iBACpD;IACH,QAAA;IACE,YAAA,WAAW,EAAE;IACb,YAAA,OAAO,EAAE;;IAEf;IAEM,SAAU,qCAAqC,CAAC,OAAmB,EAAE,QAAgB,EAAA;IACzF,IAAA,MAAM,EACJ,UAAU,EACV,WAAW,GACZ,GAAG,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC;IAEzC,IAAA,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,kBAAkB,CAAC,GAAG,oCAAoC,CAAC,OAAO,EAAE,QAAQ,CAAC;IAEnG,IAAA,QAAQ,OAAO,CAAC,SAAS;IACvB,QAAA,KAAK,IAAI;gBACP,OAAO;IACL,gBAAA,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC;oBAC1B,CAAC;oBACD,CAAC;iBACF;IACH,QAAA,KAAK,IAAI;IACT,QAAA,KAAK,IAAI;gBACP,OAAO;IACL,gBAAA,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC;IAC1B,gBAAA,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC;oBAC5B,kBAAkB;iBACnB;IACH,QAAA;IACE,YAAA,WAAW,EAAE;IACb,YAAA,OAAO,EAAE;;IAEf;;ICpHA,SAAS,aAAa,CAAC,CAAM,EAAA;QAC3B,MAAM,SAAS,GAAG,EAAE;IACpB,IAAA,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;IACjB,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,QAAA,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;gBAC3B,IAAI,CAAC,YAAY,SAAS,IAAI,CAAC,KAAK,OAAO,EAAE;IAC3C,gBAAA,SAAS,CAAC,IAAI,CAAC,CAAA,EAAG,CAAC,CAAA,EAAA,EAAK,CAAC,CAAA,EAAA,EAAK,mBAAmB,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC;;qBACnD,IAAI,CAAC,YAAY,UAAU,IAAI,CAAC,KAAK,OAAO,EAAE;IACnD,gBAAA,SAAS,CAAC,IAAI,CAAC,CAAA,EAAG,CAAC,CAAA,EAAA,EAAK,CAAC,CAAA,EAAA,EAAK,oBAAoB,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC;;qBACpD;IACL,gBAAA,SAAS,CAAC,IAAI,CAAC,CAAA,EAAG,CAAC,CAAA,EAAA,EAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;;;;IAIlD,IAAA,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IAC7B;IAEM,SAAU,WAAW,CAAC,CAAgB,EAAA;IAC1C,IAAA,OAAO,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAA,CAAA,EAAI,CAAC,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC,GAAG;IACjE;aAEgB,SAAS,CAAC,GAAW,EAAE,OAAwB,EAAE,EAAA;IAC/D,IAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,GAAG,CAAA,EAAA,EAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAE,CAAC;IAC1E;aAEgB,MAAM,CAAC,SAAkB,EAAE,GAA6B,EAAE,SAAiB,EAAA;QACzF,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,KAAK,GAAG,CAAC,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,CAAA,IAAA,EAAO,WAAW,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5E,MAAM,CAAC,GAAG,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE;IAC5D,QAAA,SAAS,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,KAAK,GAAG,CAAA,EAAA,EAAK,KAAK,EAAE,GAAG,EAAE,CAAA,CAAE,CAAC;;IAEjD;;IC1CM,SAAU,oBAAoB,CAAC,OAAkG,EAAE,KAAmB,EAAA;IAC1J,IAAA,MAAM,CAAC,KAAK,KAAK,MAAM,EAAE,MAAM,CAAA,cAAA,EAAiB,KAAK,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC;IACpF;IAEA,MAAM,yBAAyB,GAAG,IAAI,OAAO,EAAkC;IAEzE,SAAU,oBAAoB,CAAC,cAAiC,EAAA;QACpE,yBAAyB,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IAClE;IAEM,SAAU,oBAAoB,CAAC,cAAiC,EAAA;QACpE,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,cAAc,CAAE;IAC3D,IAAA,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC;IAC/B,IAAA,IAAI,CAAC,KAAK,GAAG,MAAM;IACrB;IAEM,SAAU,kBAAkB,CAAC,cAAiC,EAAA;IAClE,IAAA,oCAAoC,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,QAAQ;IACvE;IAEM,SAAU,oBAAoB,CAAC,cAAiC,EAAA;IACpE,IAAA,oCAAoC,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,OAAO;IACtE;IAEM,SAAU,oCAAoC,CAAC,cAAiC,EAAA;QACpF,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,cAAc,CAAE;IAC3D,IAAA,oBAAoB,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC;IAChD,IAAA,OAAO,IAAI;IACb;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;ICtEA;;IAEG;aACa,kBAAkB,CAC9B,GAAqB,EACrB,MAAS,EAAE,EAAoC,EAAA;QACjD,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;QACpC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,UAAmB,GAAG,IAAsB,EAAA;IAClE,QAAA,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;YACnB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;IACnC,KAAQ;IACV;IAEA;;IAEG;aACa,iBAAiB,CAC7B,GAAqB,EACrB,MAAS,EAAE,EAA2D,EAAA;QACxE,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;QACpC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,UAAmB,GAAG,IAAsB,EAAA;YAClE,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;YACzC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IAC3B,QAAA,OAAO,MAAM;IACf,KAAQ;IACV;IAEA;;IAEG;aACa,sBAAsB,CAClC,GAAqB,EACrB,MAAS,EAAE,EAAoE,EAAA;QACjF,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;QACpC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,gBAAyB,GAAG,IAAsB,EAAA;IACxE,QAAA,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;YAC/C,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IAC3B,QAAA,OAAO,MAAM;IACf,KAAQ;IACV;;ICvCA;IACA;IAsBO,MAAM,gDAAgD,GAAG,IAAI,OAAO,EAAqD;IACzH,MAAM,gDAAgD,GAAG,IAAI,OAAO,EAAmE;IAE9I;IACA;IACA,SAAS,uBAAuB,CAA+C,MAA0B,EAAE,CAAC,KAAK,CAAW,EAAA;;QAE1H,MAAM,cAAc,GAAG,2CAA2C,CAAC,GAAG,CAAC,IAAI,CAAE;QAC7E,MAAM,QAAQ,GAAG,cAAc,CAAC,0BAA0B,CAAC,KAAK,CAAC;QACjE,IAAI,QAAQ,EAAE;IACZ,QAAA,gDAAgD,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC;;IAE1E;IAEA,iBAAiB,CAAC,kBAAkB,EAAE,oBAAoB,EAAE,uBAAuB,CAAC;IACpF,iBAAiB,CAAC,iBAAiB,EAAE,oBAAoB,EAAE,uBAAuB,CAAC;IAEnF;IACA;aACgB,sBAAsB,CACpC,YAAqD,EACrD,WAAmB,EACnB,kBAAqC,EAAA;QAErC,OAAO;YACL,YAAY;YACZ,WAAW;IACX,QAAA,IAAI,kBAAkB,IAAI,EAAC,kBAAkB,EAAC,CAAC;SAChD;IACH;IAwBO,MAAM,0CAA0C,GAAG,IAAI,OAAO,EAA+C;IAC7G,MAAM,2CAA2C,GAAG,IAAI,OAAO,EAAoD;IAE1H,SAAS,cAAc,CAAC,CAAyB,EAAA;IAC/C,IAAA,OAAO,EAAE,GAAG,CAAC,EAAE;IACjB;IAEA,SAAS,qBAAqB,CAAC,EAAwB,EAAA;QACrD,MAAM,cAAc,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;QAChD,OAAO;IACL,QAAA,IAAI,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;YACjC,IAAI,SAAS,IAAI,EAAE,SAAS,EAAE,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;SACnC;IAC3B;IAEA,SAAS,oBAAoB,CAAC,IAAwB,EAAA;QACpD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI;IAC/C,IAAA,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE;IAC3C;IAEA,SAAS,uBAAuB,CAAC,MAA6B,EAAA;QAC5D,MAAM,EAAE,WAAW,EAAE,QAAQ,GAAG,QAAQ,EAAE,UAAU,EAAE,GAAG,MAAM;QAC/D,OAAO;YACL,WAAW;YACX,QAAQ;YACR,UAAU,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC;SACtD;IACH;IAEA,SAAS,gBAAgB,CAAC,MAAsB,EAAA;IAC9C,IAAA,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM;QAC1B,OAAO;YACL,GAAG,qBAAqB,CAAC,MAAM,CAAC;IAChC,QAAA,IAAI,OAAO,IAAI,EAAE,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,uBAAuB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;SAC1F;IACH;IAEA,SAAS,mBAAmB,CAAC,EAAqB,EAAA;IAChD,IAAA,MAAM,EAAE,SAAS,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,SAAS,GAAG,MAAM,EAAE,GAAG,EAAE;QACvE,OAAO;YACL,SAAS;YACT,SAAS;YACT,SAAS;SACV;IACH;IAEA,SAAS,eAAe,CAAC,KAAoB,EAAA;QAC3C,OAAO;IACL,QAAA,KAAK,EAAE,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC;IACvC,QAAA,KAAK,EAAE,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC;SACxC;IACH;IAEA,SAAS,qBAAqB,CAAC,GAAwB,EAAA;QACrD,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,GAAG;QACxC,OAAO;YACL,MAAM;YACN,IAAI,KAAK,IAAI,EAAC,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,EAAC,CAAC;YAC7C,SAAS,EAAE,SAAS,IAAI,GAAG;SAC5B;IACH;IACA,SAAS,kBAAkB,CAAC,QAA0B,EAAA;QACpD,OAAO;YACL,GAAG,qBAAqB,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC7E;IACH;IAEA,SAAS,mBAAmB,CAAC,CAAoB,EAAA;IAC/C,IAAA,MAAM,EACJ,QAAQ,GAAG,eAAe,EAC1B,gBAAgB,EAChB,SAAS,GAAG,KAAK,EACjB,QAAQ,GAAG,MAAM;;IAElB,MAAA,GAAG,CAAC;QACL,OAAO;YACL,QAAQ;IACR,QAAA,IAAI,gBAAgB,IAAI,EAAE,gBAAgB,EAAE,CAAC;YAC7C,SAAS;YACT,QAAQ;SACT;IACH;IAEA,SAAS,qBAAqB,CAAC,EAAuB,EAAA;IACpD,IAAA,MAAM,EACJ,OAAO,GAAG,QAAQ,EAClB,MAAM,GAAG,MAAM,EACf,WAAW,GAAG,MAAM,EACpB,MAAM,GAAG,MAAM,GAChB,GAAG,EAAE;QACN,OAAO;IACL,QAAA,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM;SACrC;IACH;IAEA,SAAS,sBAAsB,CAAC,EAAwB,EAAA;IACtD,IAAA,MAAM,EACJ,MAAM,EACN,iBAAiB,EACjB,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,eAAe,GAAG,UAAU,EAC5B,gBAAgB,GAAG,UAAU,EAC7B,SAAS,GAAG,CAAC,EACb,mBAAmB,GAAG,CAAC,EACvB,cAAc,GAAG,CAAC,GACnB,GAAG,EAAE;QACN,OAAO;YACL,MAAM;IACN,QAAA,IAAI,YAAY,IAAI,EAAE,YAAY,EAAE,CAAC;YACrC,IAAI,iBAAiB,KAAK,SAAS,IAAI,EAAE,iBAAiB,EAAE,CAAC;YAC7D,IAAI,YAAY,IAAI,EAAE,YAAY,EAAE,qBAAqB,CAAC,YAAY,CAAC,EAAE,CAAC;YAC1E,IAAI,WAAW,IAAI,EAAE,WAAW,EAAE,qBAAqB,CAAC,WAAW,CAAC,EAAE,CAAC;YACvE,eAAe;YACf,gBAAgB;YAChB,SAAS;YACT,mBAAmB;YACnB,cAAc;SACf;IACH;IAEA,SAAS,qBAAqB,CAAC,EAAuB,EAAA;IACpD,IAAA,MAAM,EACJ,KAAK,GAAG,CAAC,EACT,IAAI,GAAG,UAAU,EACjB,sBAAsB,GAAG,KAAK,GAC/B,GAAG,EAAE;IACN,IAAA,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,sBAAsB,EAAE;IAChD;IAEA,SAAS,6BAA6B,CAAC,IAAiC,EAAA;IACtE,IAAA,MAAM,EACJ,MAAM,EACN,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,WAAW,GACZ,GAAG,IAAI;QACR,MAAM,gBAAgB,GAAG,sBAAsB,CAC7C,QAAQ,GAAG,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,EAC9E,WAAW,EAAE,KAAK,IAAI,CAAC,EACvB,YAAY,EAAE,MAAM,CAAC;QACvB,OAAO;IACL,QAAA,MAAM,EAAE,gBAAgB,CAAC,MAAM,CAAC;IAChC,QAAA,IAAI,QAAQ,IAAI,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC7C,QAAA,IAAI,SAAS,IAAI,mBAAmB,CAAC,SAAS,CAAC,CAAC;IAChD,QAAA,IAAI,YAAY,IAAI,sBAAsB,CAAC,YAAY,CAAC,CAAC;IACzD,QAAA,IAAI,WAAW,IAAI,qBAAqB,CAAC,WAAW,CAAC,CAAC;IACtD,QAAA,cAAc,EAAE;gBACd,gBAAgB;IAChB,YAAA,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACtD,SAAA;SACF;IACH;IAEM,SAAU,6BAA6B,CAAC,QAA2B,EAAE,IAAiC,EAAA;QAC1G,0CAA0C,CAAC,GAAG,CAAC,QAAQ,EAAE,6BAA6B,CAAC,IAAI,CAAC,CAAC;IAC/F;;ICvNA,MAAM,mBAAmB,GAAG,IAAI,OAAO,EAAe;IAEhD,SAAU,kBAAkB,CAAC,GAAgB,EAAA;IACjD,IAAA,MAAM,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAA,aAAA,CAAe,CAAC;IACjF;IAcA,kBAAkB,CAAC,SAAS,EAAE,SAAS,EAAE,YAAA;IACvC,IAAA,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC;IAEF,kBAAkB,CAAC,UAAU,EAAE,SAAS,EAAE,YAAA;IACxC,IAAA,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC;IAEF,kBAAkB,CAAC,WAAW,EAAE,SAAS,EAAE,YAAA;IACzC,IAAA,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC;IAEF,kBAAkB,CAAC,SAAS,EAAE,SAAS,EAAE,YAAA;IACvC,IAAA,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC;IAOK,MAAM,iBAAiB,GAAG,IAAI,OAAO,EAA+B;;IC1CpE,MAAM,sBAAsB,GAAG,IAAI,OAAO,EAA8B;IACxE,MAAM,mBAAmB,GAAG,IAAI,OAAO,EAAyC;IAEvF,SAAS,oBAAoB,CAAC,MAAwB,EAAE,MAAwB,EAAA;QAC9E,QAAQ,MAAM;IACZ,QAAA,KAAK,KAAK;IACR,YAAA,OAAO,MAAM;IACf,QAAA,KAAK,YAAY;IACjB,QAAA,KAAK,cAAc;IACjB,YAAA,OAAO,mCAAmC,CAAC,MAAM,EAAE,MAAM,CAAC;;IAE9D,IAAA,OAAO,SAAS;IAClB;IAEA,SAAS,0BAA0B,CAAC,OAAmB,EAAE,IAA0C,EAAA;QACjG,MAAM,SAAS,GAAG,IAAI,EAAE,SAAS,KAC7B,OAAO,CAAC,SAAS,KAAK;IACpB,WAAG,OAAO,CAAC,kBAAkB,KAAK,CAAC,GAAG,IAAI,GAAG,UAAU;IACvD,UAAE,OAAO,CAAC,SAAS,CACpB;IACL,IAAA,MAAM,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,KAAK;IACpC,IAAA,IAAI,MAAM,GAAG,IAAI,EAAE,MAAM;QACzB,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,CAAC,GAAG,oBAAoB,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;IACtD,QAAA,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM;;QAE9B,OAAO;YACL,MAAM;YACN,SAAS;YACT,MAAM;IACN,QAAA,YAAY,EAAE,IAAI,EAAE,YAAY,IAAI,CAAC;IACrC,QAAA,aAAa,EAAE,IAAI,EAAE,aAAa,KAAK,OAAO,CAAC,aAAa,IAAI,IAAI,EAAE,YAAY,IAAI,CAAC,CAAC,CAAC;IACzF,QAAA,cAAc,EAAE,IAAI,EAAE,cAAc,IAAI,CAAC;YACzC,eAAe,EAAE,IAAI,EAAE,eAAe,KACpC,SAAS,KAAK;IACZ,cAAE;mBACC,SAAS,KAAK,UAAU,IAAI,SAAS,KAAK;sBACxC,OAAO,CAAC,kBAAkB,IAAI,IAAI,EAAE,cAAc,IAAI,CAAC;sBACvD,CAAC,CACH,CACJ;SACJ;IACH;IAEA,IAAI,QAA8C;IAClD,kBAAkB,CAAC,UAAU,EAAE,YAAY,EAAE,UAA4B,CAAC,IAAI,CAAC,EAAA;QAC7E,QAAQ,GAAG,IAAI;IACjB,CAAC,CAAC;IAEF,iBAAiB,CAAC,UAAU,EAAE,YAAY,EAAE,UAA4B,IAAoB,EAAA;IAC1F,IAAA,sBAAsB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IACtC,IAAA,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,0BAA0B,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC3E,CAAC,CAAC;;IC3BF,SAAS,8BAA8B,CAAC,eAAmC,EAAA;IACzE,IAAA,IAAI,eAAe,YAAY,cAAc,EAAE;IAC7C,QAAA,OAAO,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAE;;aAC9C,IAAI,eAAe,YAAY,UAAU;IAC1C,QAAA,eAAe,YAAY,kBAAkB;YAC7C,eAAe,YAAY,SAAS,EAAE;IAC1C,QAAA,OAAO,eAAe;;aACjB;YACL,OAAO,eAAe,CAAC,MAAM;;IAEjC;IAEA,MAAM,QAAQ,GAAG,uBAAuB;IACxC,SAAS,iDAAiD,CAAC,KAAa,EAAE,aAA4B,EAAE,yBAAwD,EAAA;IAC9J,IAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC;QAChE,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC;IAClE,IAAA,IAAI,MAAM,IAAI,OAAO,EAAE;;IAErB,QAAA,IAAI,CAAC,MAAM,KAAK,CAAC,OAAO,EAAE;gBACxB,IAAI,MAAO,CAAC,CAAC,CAAC,KAAK,OAAQ,CAAC,CAAC,CAAC,EAAE;IAChC,gBAAA,OAAO,sBAAsB,KAAK,CAAA;0DACkB;;;iBAE/C;IACL,YAAA,OAAO,sBAAsB,KAAK,CAAA;AACX,2BAAA,EAAA,MAAM,GAAG,IAAI,GAAG,QAAQ,CAAA;mDACF,OAAO,GAAG,IAAI,GAAG,QAAQ,CAAA,+BAAA,CAAiC;;;IAG3G,IAAA,OAAO,sBAAsB,KAAK,CAAA;;AAEf,mBAAA,EAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,yBAAyB,EAAE,IAAI,EAAE,CAAC,CAAC;;AAE/E,eAAA,EAAA,KAAK,CAAA,iBAAA,EAAoB,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,yBAAyB,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;IACxH;IAEM,SAAU,yBAAyB,CAAC,UAA8B,EAAE,QAAiD,EAAA;IACzH,IAAA,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,iBAAiB,CAAC;QACrC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;QAE1C,MAAM,yBAAyB,GAAG,2CAA2C,CAAC,GAAG,CAAC,QAAQ,CAAE;QAC5F,yBAAyB,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,yBAAyB,EAAE,KAAK,KAAI;IAChG,QAAA,IAAI,yBAAyB,KAAK,SAAS,EAAE;gBAC3C;;IAEF,QAAA,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC;IACjC,QAAA,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAA,sCAAA,EAAyC,KAAK,CAAA,CAAA,CAAG,CAAC;YAC1E,MAAM,aAAa,GAAG,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAE;YAC/D,MAAM,CACJ,aAAa,CAAC,UAAU,CAAC,SAAS,KAAK,yBAAyB,CAAC,SAAS,EAC1E,MAAM,iDAAiD,CAAC,KAAK,EAAE,aAAa,EAAE,yBAAyB,CAAC,CACzG;IACD,QAAA,KAAK,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAC,IAAI,aAAa,CAAC,OAAO,EAAE;IACxE,YAAA,MAAM,QAAQ,GAAG,8BAA8B,CAAC,eAAe,CAAC;gBAChE,IAAI,QAAQ,YAAY,UAAU,IAAI,QAAQ,YAAY,SAAS,EAAE;oBACnE,kBAAkB,CAAC,QAAQ,CAAC;;gBAE9B,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE,MAAM,CAAA,mBAAA,EAAsB,OAAO,CAAA,QAAA,EAAW,KAAK,CAAA,yBAAA,CAA2B,EAAE,CAAC,QAAQ,CAAC,CAAC;;IAE9I,KAAC,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC;IAC5B,IAAA,OAAO,kBAAkB;IAC3B;IAEM,SAAU,sCAAsC,CAAC,OAA4B,EAAA;IAClF,IAAA,KAAK,MAAM,EAAC,QAAQ,EAAC,IAAI,OAAO,EAAE;IAC/B,QAAA,IAAI,QAAQ,YAAY,cAAc,EAAE;gBACtC,MAAM,OAAO,GAAG,sBAAsB,CAAC,GAAG,CAAC,QAAQ,CAAE;gBACrD,kBAAkB,CAAC,OAAO,CAAC;;iBACtB;gBACL,MAAM,eAAe,GAAG,QAA4B;IACpD,YAAA,MAAM,MAAM,GAAG,eAAe,CAAC,MAAM;IACrC,YAAA,IAAI,MAAM,YAAY,SAAS,EAAE;oBAC/B,kBAAkB,CAAC,MAAM,CAAC;;;;IAIlC;IAkGgB;IACd,IAAA,cAAc,CAAC,MAAM;IACrB,IAAA,cAAc,CAAC,QAAQ;IACvB,IAAA,cAAc,CAAC,OAAO;;IAqDxB,UAAU,qBAAqB,CAAC,IAAmB,EAAA;QACjD,IAAI,kBAAkB,GAAG,CAAC;IAC1B,IAAA,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;IAChC,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;IACpE,QAAA,IAAI,iBAAiB,CAAC,MAAM,EAAE,gBAAgB,EAAE;IAC9C,YAAA,MAAM,aAAa,GAAG,KAAK,CAAC,QAA4B;IACxD,YAAA,MAAM,YAAY,GAAG,iBAAiB,CAAC,MAAM;IAC7C,YAAA,MAAM,EAAC,aAAa,EAAE,YAAY,EAAE,kBAAkB,EAAC;IACvD,YAAA,EAAE,kBAAkB;;;IAG1B;IAEM,SAAU,wBAAwB,CACtC,GAAY,EACZ,mBAAyC,EAAA;IAEzC,IAAA,kBAAkB,CAAC,GAAG,EAAE,cAAc,EAAE,UAAmB,CAAC,KAAK,EAAE,SAAS,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,CAAC,EAAA;YAC/I,MAAM,IAAI,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAE;IAC3C,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU;YAEzC,MAAM,kBAAkB,GAAG;kBACvB,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,UAAU,CAAC;kBAC7C,CAAC;IACL,QAAA,iBAAiB,GAAG,iBAAiB,GAAG,IAAI,WAAW,CAAC,iBAAiB,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;IAC/F,QAAA,sBAAsB,GAAG,sBAAsB,IAAI,CAAC;IACpD,QAAA,uBAAuB,GAAG,uBAAuB,IAAI,iBAAiB,CAAC,MAAM;YAC7E,MAAM,cAAc,GAAG,iBAAiB,CAAC,KAAK,CAAC,sBAAsB,EAAE,uBAAuB,CAAC;IAE/F,QAAA,MAAM,CAAC,cAAc,CAAC,MAAM,KAAK,kBAAkB,EAAE,CAAA,gDAAA,EAAmD,cAAc,CAAC,MAAM,CAAA,0BAAA,EAA6B,kBAAkB,CAAA,CAAA,CAAG,CAAC;YAEhL,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa;IAC5C,QAAA,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,CAAA,MAAA,EAAS,KAAK,CAAA,cAAA,CAAgB,CAAC;IACxD,QAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,EAAE,MAAM,CAAA,MAAA,EAAS,KAAK,CAAA,wCAAA,EAA2C,QAAQ,CAAA,CAAA,CAAG,CAAC;YACpG,IAAI,SAAS,EAAE;gBACb,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,MAAM,CAAA,sCAAA,EAAyC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAA,CAAE,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;;gBAG9I,MAAM,IAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAE;IAC9C,YAAA,sCAAsC,CAAC,IAAI,CAAC,OAAO,CAAC;;IAGpD,YAAA,KAAK,MAAM,EAAC,aAAa,EAAE,YAAY,EAAE,kBAAkB,EAAC,IAAI,qBAAqB,CAAC,IAAI,CAAC,EAAE;IAC3F,gBAAA,MAAM,aAAa,GAAG,cAAc,CAAC,kBAAkB,CAAC;oBACxD,MAAM,CAAC,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,IAAI,aAAa,IAAI,YAAY,CAAC,cAAc,IAAI,CAAC,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,gCAAgC,CAAC;IACvJ,gBAAA,QAAQ,YAAY,CAAC,IAAI;IACvB,oBAAA,KAAK,SAAS;4BACZ,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,+BAA+B,KAAK,CAAC,EAAE,MAAM,CAAA,cAAA,EAAiB,kBAAkB,CAAA,EAAA,EAAK,aAAa,CAAA,+FAAA,EAAkG,MAAM,CAAC,MAAM,CAAC,+BAA+B,CAAA,CAAA,CAAG,CAAC;4BAC1R;IACF,oBAAA,KAAK,SAAS;IACd,oBAAA,KAAK,mBAAmB;4BACtB,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,+BAA+B,KAAK,CAAC,EAAE,MAAM,CAAA,cAAA,EAAiB,kBAAkB,CAAA,EAAA,EAAK,aAAa,CAAA,+FAAA,EAAkG,MAAM,CAAC,MAAM,CAAC,+BAA+B,CAAA,CAAA,CAAG,CAAC;4BAC1R;;;gBAIN,iBAAiB,CAAC,KAAK,CAAC,GAAG;oBACzB,SAAS;oBACT,cAAc;iBACf;;iBACI;IACL,YAAA,iBAAiB,CAAC,KAAK,CAAC,GAAG,SAAS;;IAExC,KAAC,CAAC;IAEJ;;IC7SA,SAAS,OAAO,CAAI,CAAc,EAAA;IAChC,IAAA,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC;IAIA,SAAS,mBAAmB,CAAC,KAAkB,EAAE,IAAoB,EAAE,EAA4B,EAAA;IACjG,IAAA,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;QACpF,MAAM,kBAAkB,GAAG,0CAA0C,CAAC,GAAG,CAAC,IAAI,CAAC,QAAS,CAAE;QAC1F,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,CAAE;QACxC,IAAI,qBAAqB,GAAG,CAAC;IAC7B,IAAA,IAAI,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE;;YAErC,MAAM,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC;YAC1D,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,IAAI,KAAI;gBAC/B,IAAI,MAAM,EAAE;oBACV,MAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACpD,gBAAA,MAAM,CAAC,CAAC,CAAC,mBAAmB,EAAE,MAAM,CAAA,wBAAA,EAA2B,IAAI,CAAA,CAAA,CAAG,CAAC;IACvE,gBAAA,kBAAkB,CAAC,mBAAmB,CAAC,MAAM,CAAC;IAC9C,gBAAA,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,mBAAmB,CAAC;;oBAErC,qBAAqB,GAAG,IAAI;;IAEhC,SAAC,CAAC;;;QAIJ,MAAM,CACJ,kBAAkB,GAAG,qBAAqB,IAAI,MAAM,CAAC,MAAM,CAAC,8BAA8B,EAC1F,MAAM,CAAA,mBAAA,EAAsB,kBAAkB,CAAA,0BAAA,EAA6B,qBAAqB,CAAA,kDAAA,EAAqD,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAA,CAAA,CAAG,CAAC;IACzM;IAEA,SAAS,0BAA0B,CAAC,KAAkB,EAAE,IAAoB,EAAE,EAA4B,EAAA;QACxG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,wBAAwB,CAAC;QACpD,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,CAAE;IACxC,IAAA,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IAC3C,IAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,qCAAqC,CAAC;IACpG,IAAA,mBAAmB,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC;QAEpC,MAAM,kBAAkB,GAAG,0CAA0C,CAAC,GAAG,CAAC,IAAI,CAAC,QAAS,CAAE;IAC1F,IAAA,QAAQ,kBAAkB,CAAC,SAAS,EAAE,QAAQ;IAC5C,QAAA,KAAK,YAAY;IACjB,QAAA,KAAK,gBAAgB;gBACnB,MAAM,CACJ,IAAI,CAAC,WAAW,KAAK,kBAAkB,CAAC,SAAS,EAAE,gBAAgB,EACnE,MAAM,CAAA,YAAA,EAAe,IAAI,CAAC,WAAW,CAAA,0CAAA,EAA6C,kBAAkB,CAAC,SAAS,EAAE,gBAAgB,CAAA,CAAA,CAAG,CACpI;;IAEP;IAEA,SAAS,2BAA2B,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAA0B,EAAA;IAClF,IAAA,MAAM,GAAG,MAAM,IAAI,CAAC;IACpB,IAAA,OAAO,IAAI,IAAI,MAAM,CAAC,IAAI,GAAG,MAAM;IACrC;IAEA,MAAM,iBAAiB,GAAG;IACxB,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,QAAQ,EAAK,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,QAAQ,EAAK,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,OAAO,EAAM,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,QAAQ,EAAK,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,QAAQ,EAAK,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,QAAQ,EAAK,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,OAAO,EAAM,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,iBAAiB,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,EAAE,IAAI,EAAC,WAAW,EAAE;IAC/D,IAAA,SAAS,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,WAAW,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,QAAQ,EAAK,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5D,IAAA,eAAe,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,EAAE,IAAI,EAAC,WAAW,EAAE;IAC7D,IAAA,UAAU,EAAG,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;KAC7D;IAED,SAAS,aAAa,CAAC,MAA6B,EAAA;QAClD,IAAI,UAAU,GAAG,CAAC;QAClB,KAAK,MAAM,EAAC,MAAM,EAAE,MAAM,EAAC,IAAI,MAAM,CAAC,UAAU,EAAE;IAChD,QAAA,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;;IAE7E,IAAA,OAAO,UAAU;IACnB;aAYgB,uBAAuB,CACrC,GAAY,EACZ,yBAAqD,EACrD,iBAAoD,EAAA;IAEpD,IAAA,kBAAkB,CAAC,GAAG,EAAE,MAAM,EAAE,UAAmB,CAAC,WAAW,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe,CAAC,EAAA;IAC/G,QAAA,MAAM,aAAa,GAAG,eAAe,IAAI,CAAC;IAC1C,QAAA,MAAM,WAAW,GAAG,aAAa,IAAI,CAAC;IACtC,QAAA,MAAM,aAAa,GAAG,eAAe,IAAI,CAAC;YAC1C,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,QAAA,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAY,EAAE,MAA6B,EAAE,mBAA4C,KAAI;IAC5H,YAAA,MAAM,UAAU,GAAG,2BAA2B,CAAC,mBAAmB,CAAC;IACnE,YAAA,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW;IACjC,YAAA,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC;IACxC,YAAA,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,KAAK;sBAClC,aAAa,GAAG;IAClB,kBAAE,WAAW,GAAG,WAAW;IAC/B,YAAA,IAAI,WAAW,KAAK,CAAC,EAAE;oBACrB,MAAM,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,IAAI,MAAM,GAAG,UAAU;IAC3D,gBAAA,MAAM,CAAC,WAAW,IAAI,UAAU,EAAE,MAAM,CAAA,KAAA,EAAQ,IAAI,gCAAgC,UAAU,CAAA,sCAAA,EAAyC,WAAW,CAAA,CAAA,CAAG,CAAC;;IAE1J,SAAC,CAAC;IACJ,KAAC,CAAC;IAEF,IAAA,kBAAkB,CAAC,GAAG,EAAE,aAAa,EAAE,UAAmB,CAAC,UAAU,EAAE,eAAe,EAAE,YAAY,qBAAoB,eAAe,CAAC,EAAA;IACtI,QAAA,MAAM,aAAa,GAAG,eAAe,IAAI,CAAC;IAC1C,QAAA,MAAM,UAAU,GAAG,YAAY,IAAI,CAAC;;IAEpC,QAAA,MAAM,aAAa,GAAG,eAAe,IAAI,CAAC;YAC1C,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,QAAA,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAY,EAAE,MAA6B,EAAE,mBAA4C,KAAI;IACnI,YAAA,MAAM,UAAU,GAAG,2BAA2B,CAAC,mBAAmB,CAAC;IACnE,YAAA,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW;IACjC,YAAA,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC;IACxC,YAAA,MAAM,WAAW,GAAG,aAAa,GAAG,aAAa;IACjD,YAAA,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,EAAE;oBAClC,MAAM,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,IAAI,MAAM,GAAG,UAAU;IAC3D,gBAAA,MAAM,CAAC,WAAW,IAAI,UAAU,EAAE,MAAM,CAAA,KAAA,EAAQ,IAAI,gCAAgC,UAAU,CAAA,sCAAA,EAAyC,WAAW,CAAA,CAAA,CAAG,CAAC;;IAE1J,SAAC,CAAC;YACF,MAAM,UAAU,GAAG,2BAA2B,CAAC,IAAI,CAAC,WAAY,CAAC;IACjE,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC;IAC3D,QAAA,MAAM,WAAW,GAAG,UAAU,GAAG,UAAU,GAAG,aAAa;IAC3D,QAAA,MAAM,CAAC,WAAW,IAAI,UAAU,EAAE,MAAM,CAAA,uBAAA,EAA0B,UAAU,CAAA,sCAAA,EAAyC,WAAW,CAAA,CAAA,CAAG,CAAC;IACtI,KAAC,CAAC;QAEF,MAAM,2BAA2B,GAAG,EAAE;QACtC,kBAAkB,CAAC,GAAG,EAAE,cAAc,EAAE,UAAmB,CAAC,cAAc,EAAE,cAAc,CAAC,EAAA;YACzF,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;YACtC,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,MAAK,GAAG,CAAC;YACzC,kBAAkB,CAAC,cAAc,CAAC;YAClC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,QAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,wCAAwC,EAAE,CAAC,cAAc,CAAC,CAAC;IAChH,QAAA,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA,0BAAA,CAA4B,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACzK,MAAM,CAAC,cAAc,GAAG,2BAA2B,IAAI,cAAc,CAAC,IAAI,EAAE,CAAA,eAAA,EAAkB,cAAc,gCAAgC,2BAA2B,CAAA,wBAAA,EAA2B,cAAc,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE,CAAC,cAAc,CAAC,CAAC;IAC3O,QAAA,MAAM,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,eAAA,EAAkB,cAAc,CAAA,sBAAA,CAAwB,CAAC;IAClG,KAAC,CAAC;QAEF,MAAM,kCAAkC,GAAG,EAAE;QAC7C,kBAAkB,CAAC,GAAG,EAAE,qBAAqB,EAAE,UAAmB,CAAC,cAAc,EAAE,cAAc,CAAC,EAAA;YAChG,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;YACtC,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE,MAAK,GAAG,CAAC;YAChD,kBAAkB,CAAC,cAAc,CAAC;YAClC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,QAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,wCAAwC,EAAE,CAAC,cAAc,CAAC,CAAC;IAChH,QAAA,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA,0BAAA,CAA4B,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACzK,MAAM,CAAC,cAAc,GAAG,kCAAkC,IAAI,cAAc,CAAC,IAAI,EAAE,CAAA,eAAA,EAAkB,cAAc,gCAAgC,kCAAkC,CAAA,wBAAA,EAA2B,cAAc,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE,CAAC,cAAc,CAAC,CAAC;IACzP,QAAA,MAAM,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,eAAA,EAAkB,cAAc,CAAA,sBAAA,CAAwB,CAAC;IAClG,KAAC,CAAC;QAGF,kBAAkB,CAAC,GAAG,EAAE,aAAa,EAAE,UAAmB,CAAC,QAAQ,CAAC,EAAA;YAClE,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;YACtC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,wDAAwD,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC3I,MAAM,YAAY,GAAG,0CAA0C,CAAC,GAAG,CAAC,QAAQ,CAAE;IAC9E,QAAA,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC;IAC9C,QAAA,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,mBAAmB,KAAK,cAAc,CAAC,mBAAmB,EACtF,MAAM,CAAA,gCAAA,EAAmC,IAAI,CAAC,WAAW,CAAC,IAAI;;AAEvE,EAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAA,SAAA,EAAY,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;;AAE5E,aAAA,EAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;AACnF,CAAA,EACK,CAAC,QAAQ,EAAE,IAAI,CAAC,CACjB;IACD,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAC1B,KAAC,CAAC;IAGF,IAAA,kBAAkB,CAAC,GAAG,EAAE,gBAAgB,EAAE,UAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,EAAA;YACzF,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;YACtC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,QAAA,MAAM,GAAG,MAAM,IAAI,CAAC;IACpB,QAAA,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;IAEhD,QAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,qCAAqC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnG,kBAAkB,CAAC,MAAM,CAAC;IAC1B,QAAA,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,uBAAA,CAAyB,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3I,QAAA,MAAM,KAAK,GAAI,MAAM,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC;YAC1C,MAAM,CAAC,MAAM,GAAG,KAAK,KAAK,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,oCAAA,EAAuC,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACnH,QAAA,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,SAAA,EAAY,IAAI,CAAA,wBAAA,EAA2B,MAAM,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAErI,IAAI,CAAC,WAAW,GAAG;gBACjB,MAAM;gBACN,MAAM;gBACN,IAAI;aACL;IACD,QAAA,IAAI,CAAC,WAAW,GAAG,MAAM;IAC3B,KAAC,CAAC;IAEF,IAAA,kBAAkB,CAAC,GAAG,EAAE,iBAAiB,EAAE,UAAmB,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,EAAA;YACxF,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,QAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;YACtC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB;IAC9C,QAAA,MAAM,UAAU,GAAG,MAAM,EAAE,IAAI,IAAI,CAAC;IACpC,QAAA,MAAM,GAAG,MAAM,IAAI,CAAC;IACpB,QAAA,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC;IAC/C,QAAA,MAAM,CAAC,IAAI,IAAI,CAAC,EAAE,MAAM,CAAA,KAAA,EAAQ,IAAI,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7D,QAAA,MAAM,CAAC,IAAI,GAAG,OAAO,EAAE,MAAM,CAAA,KAAA,EAAQ,IAAI,CAAA,2CAAA,EAA8C,OAAO,CAAA,CAAA,CAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IAC1G,QAAA,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,uBAAA,CAAyB,EAAE,CAAC,IAAI,CAAC,CAAC;IACjF,QAAA,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,UAAU,EAAE,MAAM,UAAU,MAAM,CAAA,SAAA,EAAY,IAAI,CAAA,wBAAA,EAA2B,UAAU,CAAA,CAAA,CAAG,EAAE,CAAC,IAAI,EAAE,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACxJ,IAAI,CAAC,MAAM,EAAE;IACX,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,SAAS;;iBAC/B;IACL,YAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,qCAAqC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACnG,kBAAkB,CAAC,MAAM,CAAC;IAC1B,YAAA,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,wBAAA,CAA0B,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7I,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;oBACzB,MAAM;oBACN,MAAM;oBACN,IAAI;iBACL;;IAEL,KAAC,CAAC;IACF;;IChRF,MAAM,4BAA4B,GAAG,IAAI,OAAO,EAA6C;IAC7F,MAAM,qBAAqB,GAAG,IAAI,OAAO,EAAsC;IAE/E,SAASC,qBAAmB,CAAC,aAAqC,EAAA;QAChE,OAAO,4BAA4B,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC,cAAc;IACxE;IAEM,SAAU,kCAAkC,CAAC,MAAuB,EAAA;IACxE,IAAA,OAAO,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAE;IAC3C;IAEA,uBAAuB,CACrB,sBAAsB,EACtB,4BAA4B,EAC3BA,qBAAmB,CACrB;IAEK,SAAU,yBAAyB,CAAC,OAA+B,EAAE,IAAsC,EAAA;QAC/G,MAAM,EAAE,WAAW,GAAG,CAAC,EAAE,kBAAkB,EAAE,YAAY,EAAE,GAAG,IAAI;IAClE,IAAA,MAAM,gBAAgB,GAAG,sBAAsB,CAC7C,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,EAC5B,WAAW,EACX,kBAAkB,CAAC;IACrB,IAAA,4BAA4B,CAAC,GAAG,CAAC,OAAO,EAAE;YACxC,KAAK,EAAE,MAAM;IACb,QAAA,IAAI,EAAE,EAAC,GAAG,IAAI,EAAC;IACf,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,UAAU,EAAE,EAAE;IACd,QAAA,cAAc,EAAE;gBACd,gBAAgB;IAChB,YAAA,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACtD,SAAA;IACF,KAAA,CAAC;IACJ;IAEA,wBAAwB,CAAC,sBAAsB,EAAE,4BAA4B,CAAC;IAE9E,kBAAkB,CAAC,sBAAsB,EAAE,QAAQ,EAAE,YAAA;QACnD,MAAM,IAAI,GAAG,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAE;IACpD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,IAAA,IAAI,CAAC,KAAK,GAAG,OAAO;IACtB,CAAC,CAAC;IAEF,iBAAiB,CAAC,sBAAsB,EAAE,QAAQ,EAAE,UAAwC,MAAuB,EAAA;IACjH,IAAA,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;IACnD,IAAA,qBAAqB,CAAC,GAAG,CAAC,MAAM,EAAE,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;IAC5E,CAAC,CAAC;;ICrCF,MAAM,oBAAoB,GAAG,IAAI,OAAO,EAA0C;IAElF,SAAS,OAAO,CAAC,IAA6B,EAAE,KAAuC,EAAA;QACrF,IAAI,KAAK,EAAE;IACT,QAAA,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC;;IAEtD;IAEA,SAAS,iBAAiB,CAAC,MAA8B,EAAA;QACvD,OAAO;IACL,QAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,SAAS;IAC9B,QAAA,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,gBAAgB;IAC3C,QAAA,cAAc,EAAE,MAAM,CAAC,cAAc,IAAI,CAAC;SAC3C;IACH;IAEA,SAAS,kBAAkB,CAAC,OAAgC,EAAA;QAC1D,OAAO;IACL,QAAA,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,WAAW;SAClC;IACH;IAEA,SAAS,kBAAkB,CAAC,OAAgC,EAAA;QAC1D,OAAO;IACL,QAAA,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,OAAO;IACzC,QAAA,aAAa,EAAE,OAAO,CAAC,aAAa,IAAI,IAAI;IAC5C,QAAA,YAAY,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY;SACrC;IACH;IAEA,SAAS,mBAAmB,CAAC,cAA8C,EAAA;QACzE,OAAO;IACL,QAAA,MAAM,EAAE,cAAc,CAAC,MAAM,IAAI,YAAY;YAC7C,MAAM,EAAE,cAAc,CAAC,MAAM;IAC7B,QAAA,aAAa,EAAE,cAAc,CAAC,aAAa,IAAI,IAAI;SACpD;IACH;IAEA;IACA,SAAS,oBAAoB,CAAC,eAAgD,EAAA;IAC5E,IAAA,OAAO,EACN;IACH;IAEA,SAAS,yBAAyB,CAAC,EAC/B,OAAO,EACP,UAAU,EACV,MAAM,EACN,OAAO,EACP,OAAO,EACP,cAAc,EACd,eAAe,GACS,EAAA;QAC1B,OAAO;YACL,OAAO;YACP,UAAU;YACV,IAAI,MAAM,IAAI,EAAE,MAAM,EAAE,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC;YACpD,IAAI,OAAO,IAAI,EAAE,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC;YACxD,IAAI,OAAO,IAAI,EAAE,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC;YACxD,IAAI,cAAc,IAAI,EAAE,cAAc,EAAE,mBAAmB,CAAC,cAAc,CAAC,EAAE,CAAC;YAC9E,IAAI,eAAe,IAAI,EAAE,eAAe,EAAE,oBAAoB,CAAgB,CAAC,EAAE,CAAC;SACnF;IACH;IAEA,SAAU,wDAAwD,CAC9D,GAAiC,EACjC,MAAc,EAAA;IAChB,IAAA,MAAM,yBAAyB,GAAG;YAChC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,yBAAyB,CAAC;SACzD;QACD,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,yBAAyB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;IAClG,IAAA,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1H,MAAM,SAAS,GAAG,CAAA,EAAG,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAA,EAAG,MAAM,GAAG,WAAW,MAAM,CAAA,CAAA,CAAG,GAAG,EAAE,CAAA,CAAA,CAAG;QACtG,OAAO;YACL,yBAAyB;YACzB,WAAW;YACX,kBAAkB;YAClB,SAAS;SACV;IACH;IAEA,IAAI,WAAW,GAAG,CAAC;IACnB,SAAS,kCAAkC,CAAC,IAAgE,EAAA;IAC1G,IAAA,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;;YAE1B,MAAM,IAAI,GAA4B,EAAE;IACxC,QAAA,OAAO,CAAC,IAAI,EAAG,IAAoC,CAAC,MAAM,CAAC;IAC3D,QAAA,OAAO,CAAC,IAAI,EAAG,IAAoC,CAAC,QAAQ,CAAC;IAC7D,QAAA,OAAO,CAAC,IAAI,EAAG,IAAqC,CAAC,OAAO,CAAC;IAC7D,QAAA,MAAM,MAAM,GAAG,WAAW,EAAE;YAC5B,MAAM,0BAA0B,GAAG,8BAA8B,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,wDAAwD,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YAC3J,OAAO;gBACL,0BAA0B;aAC3B;;aACI;YACL,MAAM,0BAA0B,GAAG,gDAAgD,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAE;YACrG,OAAO;gBACL,0BAA0B;aAC3B;;IAEL;IAEA,SAAS,oBAAoB,CAAC,MAAiB,EAAE,QAAyB,EAAE,IAAgE,EAAA;QAC1I,2CAA2C,CAAC,GAAG,CAAC,QAAQ,EAAE,kCAAkC,CAAC,IAAI,CAAC,CAAC;IACrG;IAEA,iBAAiB,CAAC,SAAS,EAAE,oBAAoB,EAAE,UAA2B,MAAuB,EAAE,CAAC,IAAI,CAA8B,EAAA;QACxI,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;IAC/B,IAAA,oBAAoB,CAAC,GAAG,CAAC,MAAM,EAAE,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxE,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,iBAAiB,EAAE,UAA2B,SAAuB,EAAE,CAAC,IAAI,CAA2B,EAAA;IAClI,IAAA,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;IAClC,IAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI;;QAEvB,MAAM,OAAO,GAAG,EAAE;IAClB,IAAA,KAAK,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE;IACnD,QAAA,MAAM,CAAC,GAAG,QAAQ,YAAY,SAAS;IAC7B,YAAA,QAAQ,YAAY,UAAU;IAC9B,YAAA,QAAQ,YAAY,cAAc;IAClC,YAAA,QAAQ,YAAY;IAC1B,cAAE;IACF,cAAE,EAAE,GAAG,QAAQ,EAAE;YACrB,MAAM,EAAE,GAAG,CAAqB;IAChC,QAAA,IAAI,EAAE,CAAC,MAAM,YAAY,SAAS,EAAE;IAClC,YAAA,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,IAAI,CAAC;IAC7B,YAAA,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM;IAC/C,YAAA,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,QAAA,EAAW,IAAI,CAAA,gBAAA,EAAmB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAA,EAAA,CAAI,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;;YAElI,OAAO,CAAC,IAAI,CAAC;gBACX,OAAO;IACP,YAAA,QAAQ,EAAE,CAAC;IACZ,SAAA,CAAC;;IAEJ,IAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;QAC7C,sCAAsC,CAAC,OAAO,CAAC;QAC/C,MAAM,UAAU,GAAG,gDAAgD,CAAC,GAAG,CAAC,MAAM,CAAE;IAChF,IAAA,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE;YAC/B,OAAO;YACP,UAAU;IACX,KAAA,CAAC;IACJ,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,cAAc,EAAE,UAA2B,MAAiB,EAAA;QACvF,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;IACjC,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,gBAAgB,EAAE,UAA2B,QAAqB,EAAA;QAC7F,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IACnC,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,eAAe,EAAE,UAA2B,OAAmB,EAAA;QAC1F,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,eAAe,EAAE,UAA2B,OAAmB,EAAA;QAC1F,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC;IAClC,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,uBAAuB,EAAE,UAA2B,eAAmC,EAAA;IAClH,IAAA,aAAa,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,sBAAsB,EAAE,UAA2B,cAAiC,EAAA;QAC/G,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC;QACvC,oBAAoB,CAAC,cAAc,CAAC;IACtC,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,2BAA2B,EAAE,UAA2B,aAAqC,EAAE,CAAC,IAAI,CAAC,EAAA;QAChI,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;IACtC,IAAA,yBAAyB,CAAC,aAAa,EAAE,IAAI,CAAC;IAChD,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,sBAAsB,EAAE,UAA2B,QAA2B,EAAE,CAAC,IAAI,CAAC,EAAA;QACjH,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IACjC,IAAA,6BAA6B,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC7C,IAAA,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;IAC5C,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,uBAAuB,EAAE,UAA2B,QAA4B,EAAE,CAAC,IAAI,CAAC,EAAA;QACnH,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IACjC,IAAA,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;IAC5C,CAAC,CAAC;IAEF,sBAAsB,CAAC,SAAS,EAAE,2BAA2B,EAAE,UAA2B,QAA2B,EAAE,CAAC,IAAI,CAAC,EAAA;QAC3H,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IACjC,IAAA,6BAA6B,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC7C,IAAA,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;IAC5C,CAAC,CAAC;IAEF,sBAAsB,CAAC,SAAS,EAAE,4BAA4B,EAAE,UAA2B,QAA4B,EAAE,CAAC,IAAI,CAAC,EAAA;QAC7H,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;IACjC,IAAA,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;IAC5C,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,uBAAuB,EAAE,UAA2B,eAAmC,EAAE,CAAC,IAAI,CAAC,EAAA;IAC1H,IAAA,gDAAgD,CAAC,GAAG,CAClD,eAAe,EACf,wDAAwD,CAAC,IAAI,EAAE,CAAC,CAAC,CAClE;IACH,CAAC,CAAC;IAEF,iBAAiB,CAAC,SAAS,EAAE,sBAAsB,EAAE,UAA2B,cAAiC,EAAE,CAAC,IAAI,CAAC,EAAA;;IAEvH,IAAA,MAAM,kBAAkB,GACtB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,gDAAgD,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,SAAS,CAAC;IACrH,IAAA,gDAAgD,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAC1F,CAAC,CAEA;;ICrPD,kBAAkB,CAAC,gBAAgB,EAAE,WAAW,EAAE,UAAkC,CAAC,IAAI,CAAC,EAAA;QACxF,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;IACtC,CAAC,CAAC;IAEF,kBAAkB,CAAC,gBAAgB,EAAE,aAAa,EAAE,YAAA;IAClD,IAAA,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,iBAAiB,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,UAAkC,OAAmB,EAAA;QAC5G,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,IAAA,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;IACpC,CAAC,CAAC;;ICbI,SAAU,uBAAuB,CAAC,MAAiB,EAAE,eAA6E,EAAA;QACtI,MAAM,EAAE,QAAQ,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,GAAG,eAAe;QACpF,kBAAkB,CAAC,QAAQ,CAAC;IAC5B,IAAA,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE,+BAA+B,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC3F,IAAA,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE,MAAM,iBAAiB,QAAQ,CAAC,IAAI,CAAA,iBAAA,CAAmB,CAAC;QAC9F,MAAM,CAAC,yBAAyB,KAAK,SAAS,IAAI,yBAAyB,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,6CAA6C,yBAAyB,CAAA,uBAAA,EAA0B,QAAQ,CAAC,KAAK,CAAA,CAAA,CAAG,CAAC;QACtN,MAAM,CAAC,mBAAmB,KAAK,SAAS,IAAI,mBAAmB,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,uCAAuC,mBAAmB,CAAA,uBAAA,EAA0B,QAAQ,CAAC,KAAK,CAAA,CAAA,CAAG,CAAC;IAC9L,IAAA,MAAM,CACJ,yBAAyB,KAAK,SAAS,IAAI,mBAAmB,KAAK,SAAS,EAC5E,MAAM,CAAA,0CAAA,EAA6C,yBAAyB,4BAA4B,mBAAmB,CAAA,CAAA,CAAG,CAAC;IACjI,IAAA,MAAM,CAAC,yBAAyB,KAAK,mBAAmB,EACrD,MAAM,CAAA,0BAAA,EAA6B,yBAAyB,CAAA,0BAAA,EAA6B,mBAAmB,CAAA,qBAAA,CAAuB,CAAC;IACzI;;ICWA,MAAM,0BAA0B,GAAG,IAAI,OAAO,EAA0C;aAExE,gBAAgB,CAAC,cAAiC,EAAE,WAAkC,EAAE,IAA0C,EAAA;QAChJ,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,cAAc,CAAE;IACjD,IAAA,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,IAAI,EAAE;QAEtC,IAAI,eAAe,EAAE;IACnB,QAAA,uBAAuB,CAAC,MAAM,EAAE,eAAe,CAAC;;IAGlD,IAAA,0BAA0B,CAAC,GAAG,CAAC,WAAW,EAAE;IAC1C,QAAA,KAAK,EAAE,MAAM;YACb,cAAc;IACd,QAAA,UAAU,EAAE,EAAE;IACf,KAAA,CAAC;IACJ;IAEA,wBAAwB,CAAC,qBAAqB,EAAE,0BAA0B,CAAC;IAE3E,kBAAkB,CAAC,qBAAqB,EAAE,aAAa,EAAE,UAAuC,CAAC,QAAQ,CAAC,EAAA;QACxG,MAAM,IAAI,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAE;IAClD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,yDAAyD,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACtK,IAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAC1B,CAAC,CAAC;IAEF,kBAAkB,CAAC,qBAAqB,EAAE,KAAK,EAAE,YAAA;QAC/C,MAAM,IAAI,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAE;IAClD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,IAAA,IAAI,CAAC,KAAK,GAAG,OAAO;IACpB,IAAA,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC;IAC3C,CAAC,CAAC;IAEF,kBAAkB,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,UAAuC,CAAC,eAAe,EAAE,eAAe,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,EAAA;QAChK,MAAM,IAAI,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAE;IAClD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;QACtC,yBAAyB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;QAEzD,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;QACvC,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,MAAM,CAAC,gCAAgC,EAAE,MAAM,CAAA,gBAAA,EAAmB,eAAe,sDAAsD,MAAM,CAAC,MAAM,CAAC,gCAAgC,CAAA,CAAA,CAAG,CAAC;QAC1N,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,MAAM,CAAC,gCAAgC,EAAE,MAAM,CAAA,gBAAA,EAAmB,eAAe,sDAAsD,MAAM,CAAC,MAAM,CAAC,gCAAgC,CAAA,CAAA,CAAG,CAAC;QAC1N,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,MAAM,CAAC,gCAAgC,EAAE,MAAM,CAAA,gBAAA,EAAmB,eAAe,sDAAsD,MAAM,CAAC,MAAM,CAAC,gCAAgC,CAAA,CAAA,CAAG,CAAC;IAC5N,CAAC,CAAC;IAEF,MAAM,yCAAyC,GAAG,EAAE;IACpD,kBAAkB,CAAC,qBAAqB,EAAE,4BAA4B,EAAE,UAAuC,CAAC,cAAc,EAAE,cAAc,CAAC,EAAA;QAC7I,MAAM,IAAI,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAE;IAClD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;QACtC,yBAAyB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;QACzD,kBAAkB,CAAC,cAAc,CAAC;QAClC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;IACvC,IAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,wCAAwC,EAAE,CAAC,cAAc,CAAC,CAAC;IAChH,IAAA,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA,0BAAA,CAA4B,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACzK,MAAM,CAAC,cAAc,GAAG,yCAAyC,IAAI,cAAc,CAAC,IAAI,EAAE,CAAA,eAAA,EAAkB,cAAc,gCAAgC,yCAAyC,CAAA,wBAAA,EAA2B,cAAc,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE,CAAC,cAAc,CAAC,CAAC;IACvQ,IAAA,MAAM,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,eAAA,EAAkB,cAAc,CAAA,sBAAA,CAAwB,CAAC;IAClG,CAAC,CAAC;;ICzBF,MAAM,yBAAyB,GAAG,IAAI,OAAO,EAAwC;IAErF,SAAS,mBAAmB,CAAC,WAAiC,EAAA;QAC5D,OAAO,yBAAyB,CAAC,GAAG,CAAC,WAAW,CAAE,CAAC,cAAc;IACnE;IAEA;;;;;;;IAOE;IAEF,SAAS,gBAAgB,CAAC,aAA4B,EAAE,OAAmB,EAAE,IAAoB,EAAA;QAC/F,MAAM,QAAQ,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAE;IAC/C,IAAA,MAAM,uBAAuB,GAAG,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,GAAG,EAA0B;IAC/F,IAAA,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,uBAAuB,CAAC;IACnD,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE;IACjD,QAAA,MAAM,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC,cAAc;IACzC,QAAA,MAAM,cAAc,GAAG,uBAAuB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,EAAU;IAC9E,QAAA,uBAAuB,CAAC,GAAG,CAAC,KAAK,EAAE,cAAc,CAAC;IAClD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE;IAC/C,YAAA,MAAM,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC,YAAY;gBAC1C,MAAM,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,SAAA,EAAY,QAAQ,cAAc,KAAK,CAAA,mBAAA,CAAqB,EAAE,CAAC,OAAO,CAAC,CAAC;IACpH,YAAA,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC;;;IAGlC;IAEA,SAAS,uCAAuC,CAAC,OAAmB,EAAE,MAAwB,EAAA;IAC3F,IAAA,MAAM,EAAC,KAAK,EAAE,OAAO,EAAC,GAAG,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC;IAC9D,IAAA,IAAI,KAAK,IAAI,OAAO,EAAE;YACrB,MAAM,CAAC,MAAM,KAAK,KAAK,EAAE,+CAA+C,EAAE,CAAC,OAAO,CAAC,CAAC;;aAC9E,IAAI,KAAK,EAAE;IACf,QAAA,MAAM,CAAC,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,YAAY,EAChD,qDAAqD,EAAE,CAAC,OAAO,CAAC,CAAC;;aAC/D,IAAI,OAAO,EAAE;IACjB,QAAA,MAAM,CAAC,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,cAAc,EAClD,yDAAyD,EAAE,CAAC,OAAO,CAAC,CAAC;;IAE7E;IAEA,SAAS,6BAA6B,CAAC,OAAmB,EAAE,QAA+B,EAAA;IACzF,IAAA,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,iBAAiB,MAAM,CAAC,EAC9D,MAAM,CAAA,cAAA,EAAiB,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,8BAAA,CAAgC,EAAE,CAAC,OAAO,CAAC,CACtG;QACD,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,QAAQ;IACtE,IAAA,MAAM,CAAC,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,EAAE,MAAM,CAAA,UAAA,EAAa,SAAS,CAAA,kBAAA,CAAoB,CAAC;IAClG,IAAA,MAAM,CAAC,aAAa,KAAK,CAAC,EAAE,MAAM,CAAA,cAAA,EAAiB,aAAa,CAAA,WAAA,CAAa,CAAC;IAC9E,IAAA,MAAM,CAAC,eAAe,KAAK,CAAC,EAAE,MAAM,CAAA,gBAAA,EAAmB,eAAe,CAAA,WAAA,CAAa,CAAC;IACpF,IAAA,uCAAuC,CAAC,OAAO,EAAE,MAAM,CAAC;IAC1D;IAEA,SAAS,iCAAiC,CAAC,UAAwC,EAAE,IAAY,EAAA;QAC/F,MAAM,EAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,UAAU;QAC7D,MAAM,cAAc,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAE;QACrD,MAAM,aAAa,GAAG,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAE;QACvD,MAAM,UAAU,GAAG,qBAAqB,CAAC,cAAc,CAAC,MAAM,CAAC;IAC/D,IAAA,6BAA6B,CAAC,aAAa,EAAE,cAAc,CAAC;IAC5D,IAAA,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,MAAM,UAAU,cAAc,CAAC,MAAM,CAAA,yBAAA,CAA2B,CAAC;IAClG,IAAA,IAAI,cAAc,CAAC,SAAS,KAAK,IAAI,EAAE;IACrC,QAAA,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,CAAA,WAAA,EAAc,IAAI,CAAA,+CAAA,CAAiD,CAAC;IAC/F,QAAA,MAAM,KAAK,CAAC,CAAC,GAAG,oCAAoC,CAAC,aAAa,EAAE,cAAc,CAAC,YAAY,CAAC;YAChG,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE,MAAM,CAAA,WAAA,EAAc,UAAU,CAAA,kBAAA,EAAqB,CAAC,CAAA,cAAA,EAAiB,cAAc,CAAC,aAAa,CAAA,YAAA,CAAc,EAAE,CAAC,aAAa,CAAC,CAAC;;aACnJ;YACL,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE,CAAA,WAAA,EAAc,IAAI,CAAA,8CAAA,CAAgD,CAAC;;QAKtG,IAAI,aAAa,EAAE;YACjB,MAAM,eAAe,GAAG,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAE;YAC/D,MAAM,cAAc,GAAG,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAE;IACjE,QAAA,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,oCAAoC,CAAC,aAAa,EAAE,cAAc,CAAC,YAAY,CAAC;IACjG,QAAA,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,oCAAoC,CAAC,cAAc,EAAE,eAAe,CAAC,YAAY,CAAC;YACnG,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,MAAM,CAAA,4BAAA,EAA+B,EAAE,KAAK,EAAE,CAAA,yBAAA,EAA4B,EAAE,CAAA,EAAA,EAAK,EAAE,CAAA,CAAA,CAAG,CAAC;IACtH,QAAA,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,EAAE,gEAAgE,EAAE,CAAC,aAAa,CAAC,CAAC;IACxH,QAAA,MAAM,CAAC,cAAc,CAAC,WAAW,KAAK,CAAC,EAAE,qCAAqC,EAAE,CAAC,aAAa,CAAC,CAAC;IAChG,QAAA,6BAA6B,CAAC,cAAc,EAAE,eAAe,CAAC;YAC9D,MAAM,CAAC,eAAe,CAAC,MAAM,KAAK,cAAc,CAAC,MAAM,EAAE,MAAM,CAAA,0BAAA,EAA6B,eAAe,CAAC,MAAM,CAAA,gCAAA,EAAmC,cAAc,CAAC,MAAM,CAAA,CAAA,CAAG,CAAC;YAC9K,MAAM,CAAC,cAAc,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,EAAE,MAAM,CAAA,uBAAA,EAA0B,cAAc,CAAC,MAAM,CAAA,mCAAA,EAAsC,aAAa,CAAC,MAAM,CAAA,CAAA,CAAG,CAAC;YAC1K,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,cAAc,CAAC,MAAM,CAAC;IACtE,QAAA,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,CAAA,uBAAA,EAA0B,cAAc,CAAC,MAAM,CAAA,4BAAA,CAA8B,CAAC;;IAE1I;IAEA,uBAAuB,CAAC,oBAAoB,EAAE,yBAAyB,EAAE,mBAAmB,CAAC;aAE7E,eAAe,CAAC,cAAiC,EAAE,WAAiC,EAAE,IAA6B,EAAA;IACjI,IAAA,IAAI,WAA+B;IACnC,IAAA,IAAI,YAAgC;QACpC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,cAAc,CAAE;IAEjD,IAAA,MAAM,aAAa,GAAG,IAAI,GAAG,EAAuC;QACpE,MAAM,YAAY,GAAgC,EAAE;IACpD,IAAA,IAAI,eAAmC;IACvC,IAAA,IAAI,kBAAgD;QACpD,IAAI,cAAc,GAAG,CAAC;QACtB,IAAI,cAAc,GAAG,CAAC;IAEtB,IAAA,MAAM,iBAAiB,GAAG,CAAC,OAAmB,EAAE,IAAoB,KAAI;YACtE,MAAM,IAAI,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAE;IAC3C,QAAA,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,oCAAoC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC;IACxF,QAAA,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,WAAW,GAAG,KAAK;gBACnB,YAAY,GAAG,MAAM;;iBAChB,IAAI,WAAW,KAAK,KAAK,IAAI,YAAY,KAAK,MAAM,EAAE;IAC3D,YAAA,SAAS,CAAC,mDAAmD,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;;IAEhH,KAAC;IAED,IAAA,MAAM,OAAO,GAAG,CAAC,UAAiG,EAAE,OAAiB,KAAI;YACvI,IAAI,CAAC,UAAU,EAAE;gBACf,IAAI,CAAC,OAAO,EAAE;IACZ,gBAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;;gBAEzB;;IAEF,QAAA,EAAE,cAAc;IAChB,QAAA,MAAM,EAAC,IAAI,EAAC,GAAG,UAAU;YACzB,MAAM,OAAO,GAAG,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAE;YACjD,kBAAkB,CAAC,OAAO,CAAC;IAC3B,QAAA,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,MAAM,EAAE,oDAAoD,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAC9H,QAAA,MAAM,EAAC,WAAW,EAAE,MAAM,EAAC,GAAG,OAAO;IACrC,QAAA,MAAM,UAAU,GAAG,qBAAqB,CAAC,MAAM,CAAC;IAChD,QAAA,gBAAgB,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC;YAC9C,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,UAAU;IAClD,QAAA,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC;YAChC,IAAI,OAAO,EAAE;IACX,YAAA,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,+BAAA,CAAiC,CAAC;gBACrF,kBAAkB,GAAG,MAAM;;iBACtB;gBACL,iCAAiC,CAAC,UAA0C,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACtG,YAAA,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;gBACzB,cAAc,IAAI,OAAO,CAAC,WAAY,CAAC,QAAQ,EAAE,WAAY,CAAC,SAAS,CAAC;;YAE1E,IAAI,CAAC,eAAe,EAAE;gBACpB,eAAe,GAAG,WAAW;;iBACxB;IACL,YAAA,MAAM,CAAC,WAAW,KAAK,eAAe,EAAE,kDAAkD,CAAC;;IAE/F,KAAC;QAED,MAAM,EAAE,eAAe,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,GAAG,IAAI;IAE7F,IAAA,KAAK,MAAM,eAAe,IAAI,gBAAgB,IAAI,EAAE,EAAE;YAClD,OAAO,CAAC,eAAe,CAAC;;IAG5B,IAAA,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC;IAErC,IAAA,MAAM,CAAC,cAAc,GAAG,CAAC,EAAE,oEAAoE,CAAC;QAChG,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAA,eAAA,EAAkB,cAAc,yCAAyC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAA,CAAA,CAAG,CAAC;QAChL,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,MAAM,CAAC,gCAAgC,EACrE,MAAM,CAAA,iCAAA,EAAoC,cAAc,sDAAsD,MAAM,CAAC,MAAM,CAAC,gCAAgC,CAAA,CAAA,CAAG,CAAC;QAElK,IAAI,eAAe,EAAE;IACnB,QAAA,uBAAuB,CAAC,MAAM,EAAE,eAAe,CAAC;;QAGlD,IAAI,iBAAiB,EAAE;YACrB,kBAAkB,CAAC,iBAAiB,CAAC;IACrC,QAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,2CAA2C,EAAE,CAAC,iBAAiB,CAAC,CAAC;YACzH,MAAM,CAAC,iBAAiB,CAAC,IAAI,KAAK,WAAW,EAAE,MAAM,0BAA0B,iBAAiB,CAAC,IAAI,CAAA,oBAAA,CAAsB,EAAE,CAAC,iBAAiB,CAAC,CAAC;;IAGnJ,IAAA,MAAM,gBAAgB,GAAG,sBAAsB,CAC7C,SAAS,CAAC,YAAY,CAAC,EACvB,eAAgB,EAChB,kBAAkB,CAAC;IAErB,IAAA,yBAAyB,CAAC,GAAG,CAAC,WAAW,EAAE;IACzC,QAAA,KAAK,EAAE,MAAM;YACb,cAAc;YACd,WAAW,EAAE,WAAW,IAAI,CAAC;YAC7B,YAAY,EAAE,YAAY,IAAI,CAAC;IAC/B,QAAA,aAAa,EAAE,EAAE;IACjB,QAAA,UAAU,EAAE,EAAE;YACd,iBAAiB;YACjB,gBAAgB,EAAE,IAAI,GAAG,EAAiB;YAC1C,yBAAyB,EAAE,EAAE;IAC7B,QAAA,cAAc,EAAE;gBACd,gBAAgB;IAChB,YAAA,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACtD,SAAA;YACD,aAAa;IACd,KAAA,CAAC;IACJ;IAEA,kBAAkB,CAAC,oBAAoB,EAAE,gBAAgB,EAAE,UAAsC,CAAC,OAAO,CAAC,EAAA;QACxG,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE;QAEvC,IAAI,WAAW,GAAG,CAAC;IACnB,IAAA,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;IAC5B,QAAA,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE,MAAM,iEAAiE,EAAE,CAAC,MAAM,CAAC,CAAC;YAC/H,MAAM,KAAK,GAAG,WAAW;IACzB,QAAA,MAAM,UAAU,GAAG,kCAAkC,CAAC,MAAM,CAAE;IAC9D,QAAA,MAAM,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC;YAChD,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,mBAAmB,KAAK,cAAc,CAAC,mBAAmB,EACpF,MAAM,CAAA,OAAA,EAAU,KAAK,4BAA4B,IAAI,CAAC,WAAW,CAAC,IAAI;;AAE/E,EAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAA,SAAA,EAAY,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;;AAE9E,WAAA,EAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/E,CAAA,EACK,CAAC,MAAM,EAAE,IAAI,CAAC,CACf;IACD,QAAA,EAAE,WAAW;;IAGf,IAAA,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;IAC1B,IAAA,IAAI,CAAC,QAAQ,GAAG,SAAS;IACzB,IAAA,IAAI,CAAC,WAAW,GAAG,SAAS;IAC5B,IAAA,IAAI,CAAC,WAAW,GAAG,SAAS;IAC5B,IAAA,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;IAC/B,CAAC,CAAC;IAEF,kBAAkB,CAAC,oBAAoB,EAAE,qBAAqB,EAAE,UAAsC,CAAC,UAAU,CAAC,EAAA;QAChH,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,GAAG,IAAI;IAC1E,IAAA,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,8BAA8B,CAAC;QAC3D,kBAAkB,CAAC,iBAAiB,CAAC;QACrC,MAAM,CAAC,UAAU,GAAG,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAA,WAAA,EAAc,UAAU,CAAA,6BAAA,EAAgC,iBAAiB,CAAC,KAAK,CAAA,CAAA,CAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;QAC3J,MAAM,QAAQ,GAAG,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC;IACjD,IAAA,MAAM,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAA,WAAA,EAAc,UAAU,sCAAsC,QAAS,CAAC,KAAK,CAAA,CAAE,CAAC;IACxG,IAAA,MAAM,CAAC,CAAC,oBAAoB,EAAE,MAAM,CAAA,qCAAA,EAAwC,oBAAqB,CAAC,KAAK,CAAA,CAAE,CAAC;IAC1G,IAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,KAAK,EAAE;IACvC,IAAA,IAAI,CAAC,yBAAyB,GAAG,UAAU;IAC7C,CAAC,CAAC;IAEF,kBAAkB,CAAC,oBAAoB,EAAE,mBAAmB,EAAE,YAAA;QAC5D,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,iBAAiB,EAAE,GAAG,IAAI;QACrG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,8BAA8B,CAAC;IACnE,IAAA,gBAAgB,CAAC,GAAG,CAAC,yBAAyB,EAAE,oBAAqB,CAAC;QACtE,IAAI,iBAAiB,EAAE;YACrB,kBAAkB,CAAC,iBAAiB,CAAC;;IAEvC,IAAA,IAAI,CAAC,oBAAoB,GAAG,SAAS;IACvC,CAAC,CAAC;IAEF,wBAAwB,CAAC,oBAAoB,EAAE,yBAAyB,CAAC;IAEzE,kBAAkB,CAAC,oBAAoB,EAAE,KAAK,EAAE,YAAA;QAC9C,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,IAAA,IAAI,CAAC,KAAK,GAAG,OAAO;IACpB,IAAA,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAE;IAC1C,IAAA,MAAM,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,wBAAwB,IAAI,CAAC,yBAAyB,CAAA,iBAAA,CAAmB,CAAC;IACrH,CAAC,CAAC;IAEF,kBAAkB,CAAC,oBAAoB,EAAE,aAAa,EAAE,UAAsC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAmD,EAAA;QACvL,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,IAAA,MAAM,EACJ,WAAW,EACX,YAAY,GACb,GAAG,IAAI;IAER,IAAA,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3C,IAAA,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,CAAC,GAAG,KAAK,IAAI,WAAW,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,CAAA,UAAA,EAAa,KAAK,qBAAqB,WAAW,CAAA,CAAA,CAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAC3G,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,YAAY,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,CAAA,WAAA,EAAc,MAAM,sBAAsB,YAAY,CAAA,CAAA,CAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACjH,IAAA,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,GAAG,EAAE,MAAM,CAAA,SAAA,EAAY,QAAQ,CAAA,uBAAA,CAAyB,CAAC;IAC7F,IAAA,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,GAAG,EAAE,MAAM,CAAA,SAAA,EAAY,QAAQ,CAAA,uBAAA,CAAyB,CAAC;IAC7F,IAAA,MAAM,CAAC,QAAQ,GAAG,QAAQ,EAAE,MAAM,CAAA,SAAA,EAAY,QAAQ,CAAA,qBAAA,EAAwB,QAAQ,CAAA,CAAA,CAAG,CAAC;IAC5F,CAAC,CAAC;IAEF,kBAAkB,CAAC,oBAAoB,EAAE,gBAAgB,EAAE,UAAsC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAmC,EAAA;QACtJ,MAAM,IAAI,GAAG,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAE;IACjD,IAAA,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;IACtC,IAAA,MAAM,EACJ,WAAW,EACX,YAAY,GACb,GAAG,IAAI;IACR,IAAA,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3C,IAAA,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,CAAC,GAAG,KAAK,IAAI,WAAW,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,CAAA,UAAA,EAAa,KAAK,qBAAqB,WAAW,CAAA,CAAA,CAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAC3G,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,YAAY,EAAE,MAAM,CAAA,EAAA,EAAK,CAAC,CAAA,WAAA,EAAc,MAAM,sBAAsB,YAAY,CAAA,CAAA,CAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACnH,CAAC,CAAC;;ICpUF,iBAAiB,CAAC,iBAAiB,EAAE,kBAAkB,EAAE,UAAmC,WAAkC,EAAE,CAAC,IAAI,CAAC,EAAA;IACpI,IAAA,aAAa,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QACxD,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,gBAAgB,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC;IAC3C,CAAC,CAAC;IAEF,iBAAiB,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,UAAmC,WAAiC,EAAE,CAAC,IAAI,CAAC,EAAA;IAClI,IAAA,aAAa,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QACxD,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAA,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC;IAEF,kBAAkB,CAAC,iBAAiB,EAAE,QAAQ,EAAE,YAAA;QAC9C,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,kBAAkB,CAAC,iBAAiB,EAAE,oBAAoB,EAAE,UAAmC,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,EAAA;QACnI,oCAAoC,CAAC,IAAI,CAAC;QAC1C,kBAAkB,CAAC,GAAG,CAAC;QACvB,kBAAkB,CAAC,GAAG,CAAC;IACvB,IAAA,SAAS,GAAG,SAAS,IAAI,CAAC;QAC1B,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,SAAS;QACnC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;IACtC,IAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,+CAA+C,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACvG,IAAA,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,+CAA+C,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACvG,IAAA,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,oCAAoC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACrE,IAAA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,UAAA,EAAa,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,kBAAA,CAAoB,EAAE,CAAC,GAAG,CAAC,CAAC;IAC7H,IAAA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,UAAA,EAAa,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,kBAAA,CAAoB,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7H,MAAM,CAAC,SAAS,GAAG,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,MAAM,CAAA,UAAA,EAAa,SAAS,CAAA,SAAA,EAAY,IAAI,CAAA,mBAAA,EAAsB,GAAG,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC1H,MAAM,CAAC,SAAS,GAAG,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,MAAM,CAAA,UAAA,EAAa,SAAS,CAAA,SAAA,EAAY,IAAI,CAAA,mBAAA,EAAsB,GAAG,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC1H,IAAA,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,KAAA,EAAQ,IAAI,CAAA,sBAAA,CAAwB,CAAC;IAClE,IAAA,MAAM,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,UAAA,EAAa,SAAS,CAAA,sBAAA,CAAwB,CAAC;IACjF,IAAA,MAAM,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,UAAA,EAAa,SAAS,CAAA,sBAAA,CAAwB,CAAC;IACnF,CAAC,CAAC;IAEF,SAAS,uBAAuB,CAAC,GAAuB,EAAA;IACtD,IAAA,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC;IAC9B,IAAA,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,IAAI,CAAC;QACxC,MAAM,CAAC,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE,MAAM,mBAAmB,WAAW,CAAA,qBAAA,CAAuB,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5G;IAEA,SAAS,wBAAwB,CAAC,GAAwB,EAAE,QAAqB,EAAA;IAC/E,IAAA,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC;QAE/B,MAAM,UAAU,GAAG,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;IAC5D,IAAA,MAAM,EACJ,UAAU,EACV,WAAW,GACZ,GAAG,UAAU;IAEd,IAAA,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,IAAI,CAAC;IAClC,IAAA,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC;IACnD,IAAA,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAA,SAAA,EAAY,QAAQ,CAAA,0CAAA,EAA6C,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChK,MAAM,CAAC,KAAK,GAAG,UAAU,KAAK,CAAC,EAAE,MAAM,CAAA,SAAA,EAAY,KAAK,CAAA,6BAAA,EAAgC,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrH,MAAM,CAAC,KAAK,GAAG,WAAW,KAAK,CAAC,EAAE,MAAM,CAAA,SAAA,EAAY,KAAK,CAAA,8BAAA,EAAiC,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAExH,IAAA,MAAM,CAAC,SAAS,EAAE,UAAU,EAAE,sBAAsB,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC;IAElF,IAAA,IAAI,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,EAAE;IACzE,QAAA,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,qCAAqC,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;YAC9E,MAAM,CAAC,SAAS,KAAK,CAAC;IACf,YAAA,UAAU,KAAK,CAAC;gBAChB,sBAAsB,KAAK,CAAC,EAAE,4DAA4D,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;IAErH;IAEA,SAAS,wBAAwB,CAAC,GAAwB,EAAE,QAAqB,EAAA;QAC/E,MAAM,UAAU,GAAG,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;IAC5D,IAAA,MAAM,EACJ,UAAU,EACV,WAAW,GACZ,GAAG,UAAU;IACd,IAAA,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,IAAI,CAAC;IAClC,IAAA,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC;IAC1D,IAAA,MAAM,CAAC,SAAS,EAAE,UAAU,EAAE,sBAAsB,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC;IAClF,IAAA,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,qCAAqC,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;IAE9E,IAAA,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;QACzB,MAAM,CAAC,KAAK,GAAG,SAAS,IAAI,CAAC,EAAE,MAAM,CAAA,SAAA,EAAY,KAAK,CAAA,mBAAA,EAAsB,SAAS,yBAAyB,CAAC,CAAA,cAAA,EAAiB,QAAQ,CAAA,CAAA,CAAG,EAAE,GAAG,CAAC;QACjJ,MAAM,CAAC,KAAK,GAAG,UAAU,IAAI,CAAC,EAAE,MAAM,CAAA,SAAA,EAAY,KAAK,CAAA,oBAAA,EAAuB,UAAU,0BAA0B,CAAC,CAAA,cAAA,EAAiB,QAAQ,CAAA,CAAA,CAAG,EAAE,GAAG,CAAC;QACrJ,MAAM,CAAC,KAAK,GAAG,sBAAsB,IAAI,CAAC,EAAE,MAAM,CAAA,SAAA,EAAY,KAAK,CAAA,iCAAA,EAAoC,sBAAsB,qCAAqC,CAAC,CAAA,cAAA,EAAiB,QAAQ,CAAA,CAAA,CAAG,EAAE,GAAG,CAAC;IACrM,IAAA,MAAM,CAAC,SAAS,GAAG,UAAU,KAAK,CAAC,EAAE,MAAM,CAAA,eAAA,EAAkB,SAAS,CAAA,gCAAA,EAAmC,UAAU,GAAG,EAAE,GAAG,CAAC;IAC5H,IAAA,MAAM,CAAC,UAAU,GAAG,WAAW,KAAK,CAAC,EAAE,MAAM,CAAA,gBAAA,EAAmB,UAAU,CAAA,iCAAA,EAAoC,WAAW,GAAG,EAAE,GAAG,CAAC;IACpI;IAEA,SAAS,yBAAyB,CAAC,GAAuB,EAAE,QAAgB,EAAE,MAAwB,EAAE,UAAuB,EAAA;IAC7H,IAAA,MAAM,UAAU,GAAG,qBAAqB,CAAC,MAAM,CAAC;IAChD,IAAA,MAAM,CAAC,SAAS,EAAE,UAAU,EAAE,sBAAsB,CAAC,GAAG,gBAAgB,CAAC,UAAU,CAAC;IACpF,IAAA,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,UAAU;IAC9C,IAAA,MAAM,aAAa,GAAG,SAAS,GAAG,UAAU;IAC5C,IAAA,MAAM,cAAc,GAAG,UAAU,GAAG,WAAW;IAC/C,IAAA,MAAM,cAAc,GAAG,aAAa,GAAG,UAAU,CAAC,aAAc;IAEhE,IAAA,MAAM,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,SAAS,SAAS,CAAA,gCAAA,EAAmC,UAAU,CAAA,CAAE,CAAC;IACxG,IAAA,MAAM,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,UAAU,UAAU,CAAA,iCAAA,EAAoC,WAAW,CAAA,CAAE,CAAC;IAC7G,IAAA,IAAI,cAAc,GAAG,CAAC,EAAE;IACtB,QAAA,MAAM,CAAC,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE,MAAM,CAAA,0CAAA,EAA6C,cAAc,CAAA,KAAA,CAAO,CAAC;;IAGjH,IAAA,IAAI,sBAAsB,GAAG,CAAC,EAAE;IAC9B,QAAA,MAAM,CAAC,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE,MAAM,CAAA,uDAAA,EAA0D,sBAAsB,CAAA,KAAA,CAAO,CAAC;;IAEtI,IAAA,IAAI,sBAAsB,GAAG,CAAC,EAAE;IAC9B,QAAA,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,SAAS,EAAE,MAAM,CAAA,wDAAA,EAA2D,sBAAsB,CAAA,KAAA,CAAO,CAAC;;IAExI,IAAA,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;IACjC,QAAA,MAAM,CAAC,GAAG,CAAC,WAAW,IAAI,cAAc,EAAE,MAAM,CAAA,YAAA,EAAe,GAAG,CAAC,WAAW,sCAAsC,cAAc,CAAA,CAAA,CAAG,CAAC;;IAExI,IAAA,IAAI,GAAG,CAAC,YAAY,KAAK,SAAS,EAAE;IAClC,QAAA,MAAM,CAAC,GAAG,CAAC,YAAY,IAAI,cAAc,EAAE,MAAM,CAAA,aAAA,EAAgB,GAAG,CAAC,YAAY,+BAA+B,cAAc,CAAA,CAAA,CAAG,CAAC;;IAGpI,IAAA,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,IAAI,CAAC;IACxC,IAAA,MAAM,YAAY,GAAG,GAAG,CAAC,YAAY,IAAI,CAAC;QAC1C,IAAI,mBAAmB,GAAG,CAAC;IAC3B,IAAA,IAAI,sBAAsB,GAAG,CAAC,EAAE;;YAE9B,mBAAmB,IAAI,WAAW,GAAG,YAAY,IAAI,sBAAsB,GAAG,CAAC,CAAC;IAChF,QAAA,IAAI,cAAc,GAAG,CAAC,EAAE;;gBAEtB,mBAAmB,IAAI,WAAW,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,cAAc;;;IAG9E,IAAA,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC;IAC9B,IAAA,MAAM,CAAC,MAAM,GAAG,mBAAmB,IAAI,QAAQ,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,wBAAA,EAA2B,mBAAmB,4BAA4B,QAAQ,CAAA,CAAA,CAAG,CAAC;IAC/J;IAEA,SAAS,oBAAoB,CAAC,OAA0B,EAAE,GAAuB,EAAE,GAAwB,EAAE,QAAqB,EAAE,cAAuB,EAAA;QACzJ,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC;QACzC,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,kDAAkD,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC3H,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,mDAAmD,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE9H,uBAAuB,CAAC,GAAG,CAAC;IAC5B,IAAA,MAAM,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,GAAgE;IACvG,UAAE,CAAC,UAAU,EAAE,UAAU;IACzB,UAAE,CAAC,UAAU,EAAE,UAAU,CAAC;IAC7B,IAAA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,CAAA,UAAA,EAAa,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,SAAA,EAAY,gBAAgB,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAEtK,IAAA,wBAAwB,CAAC,GAAG,EAAE,QAAQ,CAAC;QAEvC,MAAM,UAAU,GAAG,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;IAE5D,IAAA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,CAAA,kBAAA,EAAqB,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,SAAA,EAAY,gBAAgB,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnL,IAAA,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,KAAK,CAAC,EAAE,uBAAuB,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAE7E,IAAA,IAAI,oBAAoB,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM;QAC7C,MAAM,gBAAgB,GAAG,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,OAAO;QAC/D,IAAI,gBAAgB,EAAE;IACpB,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;IACvB,YAAA,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,cAAc,EAAE,wDAAwD,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;IAEhH,QAAA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;IACrB,YAAA,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,YAAY,EAAE,oDAAoD,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;IAE1G,QAAA,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,YAAY,IAAI,GAAG,CAAC,MAAM,KAAK,cAAc,EAAE,qBAAqB,CAAC;IAC3F,QAAA,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,KAAK,YAAY,GAAG,OAAO,GAAG,SAAS;IAChE,QAAA,MAAM,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;YAC/B,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,CAAA,gBAAA,EAAmB,GAAG,CAAC,MAAM,CAAA,sBAAA,EAAyB,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAEnH,QAAA,IAAI,oBAAoB,KAAK,sBAAsB,EAAE;IACnD,YAAA,oBAAoB,GAAG,GAAG,CAAC,MAAM,KAAK;IACpC,kBAAE;sBACA,UAAU;;IACT,aAAA,IAAI,oBAAoB,KAAK,uBAAuB,EAAE;IAC3D,YAAA,oBAAoB,GAAG,GAAG,CAAC,MAAM,KAAK;IACpC,kBAAE;sBACA,UAAU;;;IAIlB,IAAA,wBAAwB,CAAC,GAAG,EAAE,QAAQ,CAAC;IAEvC,IAAA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC;QACjC,IAAI,CAAC,gBAAgB,EAAE;IACrB,QAAA,MAAM,uBAAuB,GAAG,UAAU,CAAC,aAAc;IACzD,QAAA,MAAM,CAAC,SAAS,GAAG,uBAAuB,KAAK,CAAC,EAAE,MAAM,cAAc,SAAS,CAAA,6BAAA,EAAgC,uBAAuB,CAAA,CAAA,CAAG,CAAC;;aACrI;IACL,QAAA,MAAM,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,WAAA,EAAc,SAAS,CAAA,yDAAA,CAA2D,CAAC;;IAGvH,IAAA,yBAAyB,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,oBAAoB,EAAE,QAAQ,CAAC;IACjF;IAEA,SAAS,gBAAgB,CAAC,OAAyB,EAAE,OAAyB,EAAA;IAC5E,IAAA,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IACtE;IAEA,SAAS,kBAAkB,CAAC,EAAU,EAAE,EAAU,EAAE,IAAY,EAAA;QAC9D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;IAClC,IAAA,MAAM,GAAG,GAAG,QAAQ,GAAG,IAAI;QAC3B,OAAO,GAAG,GAAG,CAAC;IAChB;IAEA,kBAAkB,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,UAAmC,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAA;QAClH,oCAAoC,CAAC,IAAI,CAAC;QAC1C,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC;IACtD,CAAC,CAAC;IAEF,kBAAkB,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,UAAmC,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAA;QAClH,oCAAoC,CAAC,IAAI,CAAC;QAC1C,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC;IACvD,CAAC,CAAC;IAEF,kBAAkB,CAAC,iBAAiB,EAAE,sBAAsB,EAAE,UAAmC,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAA;QACnH,oCAAoC,CAAC,IAAI,CAAC;QAE1C,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;QACtC,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,uDAAuD,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACvH,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,uDAAuD,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAEvH,IAAA,wBAAwB,CAAC,GAAG,EAAE,QAAQ,CAAC;IACvC,IAAA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,kBAAA,EAAqB,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,iBAAA,CAAmB,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAE9J,IAAA,wBAAwB,CAAC,GAAG,EAAE,QAAQ,CAAC;IACvC,IAAA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,kBAAA,EAAqB,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,iBAAA,CAAmB,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAE9J,IAAA,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,KAAK,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,CAAA,wBAAA,EAA2B,GAAG,CAAC,OAAO,CAAC,WAAW,wCAAwC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;IACnN,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAA,mBAAA,EAAsB,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA,kDAAA,EAAqD,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA,CAAA,CAAG,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QAEtN,MAAM,UAAU,GAAG,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;IAC5D,IAAA,MAAM,cAAc,GAAG,CAAC,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO;QACjE,IAAI,cAAc,EAAE;YAClB,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,KAAK,EAAE,MAAM,CAAA,qCAAA,EAAwC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA,2BAAA,CAA6B,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC1I,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,KAAK,EAAE,MAAM,CAAA,qCAAA,EAAwC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA,2BAAA,CAA6B,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;IAG5I,IAAA,wBAAwB,CAAC,GAAG,EAAE,QAAQ,CAAC;IACvC,IAAA,wBAAwB,CAAC,GAAG,EAAE,QAAQ,CAAC;QAEvC,IAAI,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,EAAE;YAC/B,MAAM,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC;YAC9C,MAAM,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC;IAC9C,QAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC;IACvC,QAAA,MAAM,CACJ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,YAAA,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,YAAA,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EACxD,MAAM,CAAA,2EAAA,CAA6E,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;;IAEtH,CAAC,CAAC;IAEF,kBAAkB,CAAC,iBAAiB,EAAE,aAAa,EAAE,UAAmC,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,EAAA;QAC5G,oCAAoC,CAAC,IAAI,CAAC;QAC1C,kBAAkB,CAAC,MAAM,CAAC;IAC1B,IAAA,MAAM,GAAG,MAAM,IAAI,CAAC;QACpB,IAAI,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,GAAG,MAAM;QACnC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,wCAAwC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACvH,IAAA,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAA,aAAA,EAAgB,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,oBAAA,CAAsB,EAAE,CAAC,MAAM,CAAC,CAAC;IAC3I,IAAA,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,KAAA,EAAQ,IAAI,CAAA,uBAAA,CAAyB,CAAC;IACnE,IAAA,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,CAAA,uBAAA,CAAyB,CAAC;QACzE,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,CAAA,OAAA,EAAU,MAAM,YAAY,IAAI,CAAA,yBAAA,EAA4B,MAAM,CAAC,IAAI,CAAA,CAAA,CAAG,CAAC;IACxH,CAAC,CAAC;IAEF,kBAAkB,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,UAAmC,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,iBAAiB,CAAC,EAAA;QAC5J,oCAAoC,CAAC,IAAI,CAAC;QAC1C,kBAAkB,CAAC,QAAQ,CAAC;QAC5B,kBAAkB,CAAC,WAAW,CAAC;QAC/B,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;IACtC,IAAA,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE,+BAA+B,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC3F,IAAA,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,MAAM,EAAE,yCAAyC,EAAE,CAAC,WAAW,CAAC,CAAC;IAC3G,IAAA,MAAM,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,aAAa,MAAM,CAAC,EAAE,MAAM,CAAA,kBAAA,EAAqB,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA,gCAAA,CAAkC,EAAE,CAAC,WAAW,CAAC,CAAC;IACpL,IAAA,MAAM,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAA,WAAA,EAAc,UAAU,CAAA,kCAAA,EAAqC,QAAQ,CAAC,KAAK,CAAA,CAAA,CAAG,CAAC;QACzH,MAAM,CAAC,UAAU,GAAG,UAAU,IAAI,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAA,WAAA,EAAc,UAAU,kBAAkB,UAAU,CAAA,mBAAA,EAAsB,QAAQ,CAAC,KAAK,CAAA,CAAA,CAAG,CAAC;IACpJ,IAAA,MAAM,CAAC,iBAAiB,GAAG,GAAG,KAAK,CAAC,EAAE,MAAM,CAAA,kBAAA,EAAqB,iBAAiB,CAAA,wBAAA,CAA0B,CAAC;QAC7G,MAAM,CAAC,iBAAiB,GAAG,UAAU,GAAG,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,MAAM,CAAA,kBAAA,EAAqB,iBAAiB,CAAA,eAAA,EAAkB,UAAU,CAAA,yBAAA,EAA4B,WAAW,CAAC,IAAI,CAAA,CAAA,CAAG,CAAC;IACzL,CAAC,CAAC;;ICtRF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;;;;;;","x_google_ignoreList":[2]}